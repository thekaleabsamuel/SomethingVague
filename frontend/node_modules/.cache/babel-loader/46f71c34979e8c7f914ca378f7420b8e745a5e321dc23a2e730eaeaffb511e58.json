{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Player({\n  user\n}) {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n  const [error, setError] = useState(null); // Track errors\n  const audioRef = useRef(null);\n  const originalBodyStyleRef = useRef(null);\n  const location = useLocation(); // Get the current location object\n\n  // Determine if we are on the homepage\n  const isHomePage = location.pathname === '/';\n\n  // Function to resolve asset URL properly\n  const resolveAssetUrl = path => {\n    // Remove leading slash if present\n    const cleanPath = path.startsWith('/') ? path.substring(1) : path;\n    return process.env.PUBLIC_URL + '/' + cleanPath;\n  };\n\n  // --- Hooks ---\n  useEffect(() => {\n    /* Load Playlist */\n    try {\n      const tracks = playlistService.getPlaylist();\n      if (tracks && tracks.length > 0) {\n        console.log(\"Loaded playlist:\", tracks.length, \"tracks\", tracks);\n        setPlaylist(tracks);\n        setError(null);\n      } else {\n        console.error(\"No tracks returned from playlistService\");\n        setError(\"No tracks available\");\n      }\n    } catch (err) {\n      console.error(\"Error loading playlist:\", err);\n      setError(\"Failed to load playlist\");\n    }\n  }, []);\n\n  // Add function to handle next track\n  const playNextTrack = () => {\n    setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n  };\n\n  // Add function to handle previous track\n  const playPreviousTrack = () => {\n    setCurrentTrackIndex(prev => prev === 0 ? playlist.length - 1 : prev - 1);\n  };\n  useEffect(() => {\n    /* Global Background Effect */\n    // Decide if this should ONLY run on the homepage\n    if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n      // Optional: Restore original body style if navigating away from home\n      if (!isHomePage && originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n      }\n      return; // Don't apply effect if not on home or not ready\n    }\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n    // Use properly resolved paths\n    const artworkUrl = resolveAssetUrl(currentTrackInfo.artwork);\n    console.log(\"Setting background with artwork:\", artworkUrl);\n\n    // Store original styles if not already stored (only on homepage)\n    if (originalBodyStyleRef.current === null) {\n      originalBodyStyleRef.current = {\n        backgroundImage: document.body.style.backgroundImage,\n        backgroundSize: document.body.style.backgroundSize,\n        backgroundPosition: document.body.style.backgroundPosition,\n        backgroundAttachment: document.body.style.backgroundAttachment,\n        minHeight: document.body.style.minHeight\n        // transition: document.body.style.transition // Be careful storing transition\n      };\n    }\n    // Apply new styles\n    document.body.style.backgroundImage = `url(${artworkUrl})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.minHeight = '100vh';\n    document.body.style.transition = 'background-image 1s ease-in-out';\n\n    // Cleanup: Restore styles when navigating away *or* component unmounts\n    return () => {\n      if (originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n        // Optional: Reset ref if you want it re-captured if returning to home\n        // originalBodyStyleRef.current = null;\n      }\n    };\n    // Add isHomePage to dependencies\n  }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n  useEffect(() => {\n    /* Track Loading/Playback */\n    if (playlist.length === 0 || currentTrackIndex < 0) {\n      setIsLoading(true); // Set loading if no playlist/index\n      return;\n    }\n    const audio = audioRef.current;\n    if (!audio) return;\n    const track = playlist[currentTrackIndex];\n    if (!track || !track.url) {\n      console.error(\"Invalid track data:\", track);\n      setIsLoading(true);\n      setError(\"Invalid track data\");\n      return; // Skip if track data is invalid\n    }\n    setIsLoading(true); // Set loading when changing track\n    // Use properly resolved paths\n    const trackUrl = resolveAssetUrl(track.url);\n    console.log(\"Loading audio track:\", trackUrl);\n    setError(null); // Clear any previous errors\n\n    // Set src only if it's different\n    if (audio.src !== trackUrl) {\n      audio.src = trackUrl;\n      audio.load(); // Load the new source\n    } else if (isPlaying && audio.paused) {\n      // If src is the same but we intend to play, try playing\n      audio.play().catch(e => {\n        console.error(\"Retry play error:\", e);\n        setError(\"Failed to play track\");\n      });\n    }\n    const handleCanPlay = () => {\n      console.log(\"Audio can play:\", trackUrl);\n      setIsLoading(false); // Ready to play this track\n      setIsPlayerReady(true); // Mark that the player has loaded at least once\n      setError(null); // Clear any errors since audio is playable\n      if (isPlaying) {\n        audio.play().catch(e => {\n          console.error(\"Autoplay error:\", e);\n          setError(\"Autoplay failed - try clicking play\");\n        });\n      }\n      // Clean up this specific listener once it fires\n      audio.removeEventListener('canplay', handleCanPlay);\n    };\n    const handleEnded = () => {\n      console.log(\"Track ended\");\n      setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n      // Playback will resume via the isPlaying state in the next canplay event\n    };\n\n    // Clear previous listeners before adding new ones for this track\n    audio.removeEventListener('canplay', handleCanPlay);\n    audio.removeEventListener('ended', handleEnded);\n    audio.addEventListener('canplay', handleCanPlay);\n    audio.addEventListener('ended', handleEnded);\n    return () => {\n      // Cleanup listeners when track changes or component unmounts\n      audio.removeEventListener('canplay', handleCanPlay);\n      audio.removeEventListener('ended', handleEnded);\n    };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n  }, [currentTrackIndex, playlist, isPlaying]);\n  useEffect(() => {\n    /* Audio State Sync Events */\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n    const handleError = e => {\n      var _playlist$currentTrac, _playlist$currentTrac2;\n      console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n      setIsLoading(false); // Stop loading on error\n      setIsPlaying(false);\n      setError(`Error playing track: ${(_playlist$currentTrac = playlist[currentTrackIndex]) === null || _playlist$currentTrac === void 0 ? void 0 : _playlist$currentTrac.title} - file may be missing at path: ${(_playlist$currentTrac2 = playlist[currentTrackIndex]) === null || _playlist$currentTrac2 === void 0 ? void 0 : _playlist$currentTrac2.url}`);\n      // Maybe try next track?\n      // setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    // Set initial state based on audio element (covers browser controls)\n    setIsPlaying(!audio.paused);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('error', handleError);\n    return () => {\n      // Cleanup on unmount\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('error', handleError);\n    };\n  }, [playlist.length, currentTrackIndex]); // Re-attach if playlist changes fundamentally\n\n  // --- Control Functions ---\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n    if (audio.paused) {\n      // We set isPlaying to true, the effect hook will handle the actual audio.play()\n      setIsPlaying(true);\n      audio.play().catch(error => {\n        console.error(\"Playback error:\", error);\n        setIsPlaying(false);\n        setError(\"Failed to play audio\");\n      }); // Also try direct play\n    } else {\n      audio.pause();\n      setIsPlaying(false); // Immediately reflect pause intent\n    }\n  };\n  const rewind15Seconds = () => {\n    const audio = audioRef.current;\n    if (audio) {\n      audio.currentTime = Math.max(0, audio.currentTime - 15);\n    }\n  };\n\n  // --- Render Logic ---\n\n  // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n  const audioTag = /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    preload: \"metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 22\n  }, this);\n\n  // Handle loading state and errors\n  if (error && playlist.length === 0) {\n    // Critical error - no playlist available\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Reload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // Don't render full UI until the player has loaded something\n  if (!isPlayerReady && isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-loading\",\n        children: \"Loading Radio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // We have a playlist and player is ready, get current track info\n  const currentTrackInfo = playlist[currentTrackIndex];\n  if (!currentTrackInfo) {\n    // Handle case where index might be invalid temporarily\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No track selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // All good, display the track info\n  const artworkUrl = resolveAssetUrl(currentTrackInfo.artwork || '/artwork/default-artwork.png'); // Fallback\n\n  // --- Conditional UI Rendering ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [audioTag, \" \", isHomePage ?\n    /*#__PURE__*/\n    // --- Render Centered Player UI on HomePage ---\n    _jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-ui-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 39\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-overlay\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-artwork\",\n          style: {\n            backgroundImage: `url(${artworkUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-track-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 57\n          }, this), currentTrackInfo.scheduledTime && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"scheduled-time\",\n            children: [\"Scheduled: \", new Date(currentTrackInfo.scheduledTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls-centered\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rewind15Seconds,\n            disabled: isLoading,\n            className: \"control-button rewind-button\",\n            \"aria-label\": \"Rewind 15 seconds\",\n            children: \"\\u21BA15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlay,\n            disabled: isLoading,\n            className: \"control-button play-pause-main\",\n            \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n            children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-button-placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-comment-section\",\n        children: /*#__PURE__*/_jsxDEV(CommentSection, {\n          user: user,\n          currentTrack: currentTrackInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // --- Render Bottom Player Bar on Other Pages ---\n    _jsxDEV(\"div\", {\n      className: \"bottom-player-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artworkUrl,\n        alt: \"\",\n        className: \"bottom-player-artwork\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-title\",\n          children: currentTrackInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-artist\",\n          children: currentTrackInfo.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 53\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          disabled: isLoading,\n          className: \"bottom-player-playpause\",\n          \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n          children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"lp69dK7trWCLNSCKHVZKR5HCEQ0=\", false, function () {\n  return [useLocation];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","playlistService","CommentSection","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","user","_s","playlist","setPlaylist","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","isLoading","setIsLoading","isPlayerReady","setIsPlayerReady","error","setError","audioRef","originalBodyStyleRef","location","isHomePage","pathname","resolveAssetUrl","path","cleanPath","startsWith","substring","process","env","PUBLIC_URL","tracks","getPlaylist","length","console","log","err","playNextTrack","prev","playPreviousTrack","current","Object","assign","document","body","style","currentTrackInfo","artwork","artworkUrl","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","transition","audio","track","url","trackUrl","src","load","paused","play","catch","e","handleCanPlay","removeEventListener","handleEnded","addEventListener","handlePlay","handlePause","handleError","_playlist$currentTrac","_playlist$currentTrac2","title","togglePlay","pause","rewind15Seconds","currentTime","Math","max","audioTag","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","window","reload","artist","scheduledTime","Date","toLocaleString","disabled","currentTrack","alt","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\n\nfunction Player({ user }) {\n    const [playlist, setPlaylist] = useState([]);\n    const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n    const [error, setError] = useState(null); // Track errors\n    const audioRef = useRef(null);\n    const originalBodyStyleRef = useRef(null);\n    const location = useLocation(); // Get the current location object\n\n    // Determine if we are on the homepage\n    const isHomePage = location.pathname === '/';\n\n    // Function to resolve asset URL properly\n    const resolveAssetUrl = (path) => {\n        // Remove leading slash if present\n        const cleanPath = path.startsWith('/') ? path.substring(1) : path;\n        return process.env.PUBLIC_URL + '/' + cleanPath;\n    };\n\n    // --- Hooks ---\n    useEffect(() => { /* Load Playlist */\n        try {\n            const tracks = playlistService.getPlaylist();\n            if (tracks && tracks.length > 0) {\n                console.log(\"Loaded playlist:\", tracks.length, \"tracks\", tracks);\n                setPlaylist(tracks);\n                setError(null);\n            } else {\n                console.error(\"No tracks returned from playlistService\");\n                setError(\"No tracks available\");\n            }\n        } catch (err) {\n            console.error(\"Error loading playlist:\", err);\n            setError(\"Failed to load playlist\");\n        }\n    }, []);\n\n    // Add function to handle next track\n    const playNextTrack = () => {\n        setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    // Add function to handle previous track\n    const playPreviousTrack = () => {\n        setCurrentTrackIndex(prev => \n            prev === 0 ? playlist.length - 1 : prev - 1\n        );\n    };\n\n    useEffect(() => { /* Global Background Effect */\n        // Decide if this should ONLY run on the homepage\n        if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n            // Optional: Restore original body style if navigating away from home\n             if (!isHomePage && originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n             }\n            return; // Don't apply effect if not on home or not ready\n        }\n\n        const currentTrackInfo = playlist[currentTrackIndex];\n        if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n        // Use properly resolved paths\n        const artworkUrl = resolveAssetUrl(currentTrackInfo.artwork);\n        console.log(\"Setting background with artwork:\", artworkUrl);\n\n        // Store original styles if not already stored (only on homepage)\n        if (originalBodyStyleRef.current === null) {\n             originalBodyStyleRef.current = {\n                backgroundImage: document.body.style.backgroundImage,\n                backgroundSize: document.body.style.backgroundSize,\n                backgroundPosition: document.body.style.backgroundPosition,\n                backgroundAttachment: document.body.style.backgroundAttachment,\n                minHeight: document.body.style.minHeight,\n                // transition: document.body.style.transition // Be careful storing transition\n            };\n        }\n        // Apply new styles\n        document.body.style.backgroundImage = `url(${artworkUrl})`;\n        document.body.style.backgroundSize = 'cover';\n        document.body.style.backgroundPosition = 'center center';\n        document.body.style.backgroundAttachment = 'fixed';\n        document.body.style.minHeight = '100vh';\n        document.body.style.transition = 'background-image 1s ease-in-out';\n\n        // Cleanup: Restore styles when navigating away *or* component unmounts\n        return () => {\n             if (originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n                 // Optional: Reset ref if you want it re-captured if returning to home\n                 // originalBodyStyleRef.current = null;\n             }\n         };\n    // Add isHomePage to dependencies\n    }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n\n    useEffect(() => { /* Track Loading/Playback */\n        if (playlist.length === 0 || currentTrackIndex < 0) {\n            setIsLoading(true); // Set loading if no playlist/index\n            return;\n        }\n\n        const audio = audioRef.current; if (!audio) return;\n        const track = playlist[currentTrackIndex];\n        if (!track || !track.url) {\n            console.error(\"Invalid track data:\", track);\n            setIsLoading(true);\n            setError(\"Invalid track data\");\n            return; // Skip if track data is invalid\n        }\n\n        setIsLoading(true); // Set loading when changing track\n        // Use properly resolved paths\n        const trackUrl = resolveAssetUrl(track.url);\n        console.log(\"Loading audio track:\", trackUrl);\n        \n        setError(null); // Clear any previous errors\n\n        // Set src only if it's different\n        if (audio.src !== trackUrl) {\n            audio.src = trackUrl;\n            audio.load(); // Load the new source\n        } else if (isPlaying && audio.paused) {\n             // If src is the same but we intend to play, try playing\n            audio.play().catch(e => {\n                console.error(\"Retry play error:\", e);\n                setError(\"Failed to play track\");\n            });\n        }\n\n        const handleCanPlay = () => {\n            console.log(\"Audio can play:\", trackUrl);\n            setIsLoading(false); // Ready to play this track\n            setIsPlayerReady(true); // Mark that the player has loaded at least once\n            setError(null); // Clear any errors since audio is playable\n             if (isPlaying) {\n                 audio.play().catch(e => {\n                     console.error(\"Autoplay error:\", e);\n                     setError(\"Autoplay failed - try clicking play\");\n                 });\n             }\n             // Clean up this specific listener once it fires\n             audio.removeEventListener('canplay', handleCanPlay);\n        };\n\n         const handleEnded = () => {\n            console.log(\"Track ended\");\n            setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n            // Playback will resume via the isPlaying state in the next canplay event\n        };\n\n        // Clear previous listeners before adding new ones for this track\n        audio.removeEventListener('canplay', handleCanPlay);\n        audio.removeEventListener('ended', handleEnded);\n\n        audio.addEventListener('canplay', handleCanPlay);\n        audio.addEventListener('ended', handleEnded);\n\n\n        return () => { // Cleanup listeners when track changes or component unmounts\n            audio.removeEventListener('canplay', handleCanPlay);\n            audio.removeEventListener('ended', handleEnded);\n        };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n    }, [currentTrackIndex, playlist, isPlaying]);\n\n\n    useEffect(() => { /* Audio State Sync Events */\n        const audio = audioRef.current; if (!audio) return;\n\n        const handlePlay = () => setIsPlaying(true);\n        const handlePause = () => setIsPlaying(false);\n        const handleError = (e) => {\n            console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n            setIsLoading(false); // Stop loading on error\n            setIsPlaying(false);\n            setError(`Error playing track: ${playlist[currentTrackIndex]?.title} - file may be missing at path: ${playlist[currentTrackIndex]?.url}`);\n            // Maybe try next track?\n            // setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n        };\n\n        // Set initial state based on audio element (covers browser controls)\n        setIsPlaying(!audio.paused);\n\n        audio.addEventListener('play', handlePlay);\n        audio.addEventListener('pause', handlePause);\n        audio.addEventListener('error', handleError);\n\n        return () => { // Cleanup on unmount\n            audio.removeEventListener('play', handlePlay);\n            audio.removeEventListener('pause', handlePause);\n            audio.removeEventListener('error', handleError);\n        };\n    }, [playlist.length, currentTrackIndex]); // Re-attach if playlist changes fundamentally\n\n    // --- Control Functions ---\n    const togglePlay = () => {\n        const audio = audioRef.current;\n        if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n        if (audio.paused) {\n             // We set isPlaying to true, the effect hook will handle the actual audio.play()\n            setIsPlaying(true);\n            audio.play().catch(error => { \n                console.error(\"Playback error:\", error); \n                setIsPlaying(false); \n                setError(\"Failed to play audio\");\n            }); // Also try direct play\n        } else {\n            audio.pause();\n            setIsPlaying(false); // Immediately reflect pause intent\n        }\n    };\n\n    const rewind15Seconds = () => {\n        const audio = audioRef.current;\n        if (audio) {\n            audio.currentTime = Math.max(0, audio.currentTime - 15);\n        }\n    };\n\n    // --- Render Logic ---\n\n    // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n    const audioTag = <audio ref={audioRef} preload=\"metadata\" />;\n\n    // Handle loading state and errors\n    if (error && playlist.length === 0) {\n        // Critical error - no playlist available\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>{error}</p>\n                    <button onClick={() => window.location.reload()}>Reload Page</button>\n                </div>\n            </>\n        );\n    }\n\n    // Don't render full UI until the player has loaded something\n    if (!isPlayerReady && isLoading) {\n        return (\n            <>\n                {audioTag}\n                <div className=\"initial-loading\">Loading Radio...</div>\n            </>\n        );\n    }\n\n    // We have a playlist and player is ready, get current track info\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo) {\n        // Handle case where index might be invalid temporarily\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>No track selected</p>\n                </div>\n            </>\n        );\n    }\n\n    // All good, display the track info\n    const artworkUrl = resolveAssetUrl(currentTrackInfo.artwork || '/artwork/default-artwork.png'); // Fallback\n\n    // --- Conditional UI Rendering ---\n    return (\n        <>\n            {audioTag} {/* Audio tag is always rendered */}\n\n            {isHomePage ? (\n                // --- Render Centered Player UI on HomePage ---\n                <div className=\"player-container\">\n                    <div className=\"player-ui-container\">\n                        {isLoading && <div className=\"loading-overlay\">Loading...</div>}\n                        {error && <div className=\"error-overlay\">{error}</div>}\n                        \n                        <div\n                            className=\"player-artwork\"\n                            style={{ backgroundImage: `url(${artworkUrl})` }}\n                        ></div>\n                        <div className=\"player-track-details\">\n                            <h2>{currentTrackInfo.title}</h2>\n                            {currentTrackInfo.artist && <p>{currentTrackInfo.artist}</p>}\n                            \n                            {/* Add scheduled time display if available */}\n                            {currentTrackInfo.scheduledTime && (\n                                <p className=\"scheduled-time\">\n                                    Scheduled: {new Date(currentTrackInfo.scheduledTime).toLocaleString()}\n                                </p>\n                            )}\n                        </div>\n                        <div className=\"player-controls-centered\">\n                            <button onClick={rewind15Seconds} disabled={isLoading} className=\"control-button rewind-button\" aria-label=\"Rewind 15 seconds\">\n                                ↺15\n                            </button>\n                            <button onClick={togglePlay} disabled={isLoading} className=\"control-button play-pause-main\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                                {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                            </button>\n                            <div className=\"control-button-placeholder\"></div>\n                        </div>\n                    </div>\n                    \n                    {/* Add the comment section */}\n                    <div className=\"player-comment-section\">\n                        <CommentSection user={user} currentTrack={currentTrackInfo} />\n                    </div>\n                </div>\n            ) : (\n                // --- Render Bottom Player Bar on Other Pages ---\n                <div className=\"bottom-player-bar\">\n                    <img src={artworkUrl} alt=\"\" className=\"bottom-player-artwork\" />\n                    <div className=\"bottom-player-info\">\n                        <div className=\"bottom-player-title\">{currentTrackInfo.title}</div>\n                        {currentTrackInfo.artist && <div className=\"bottom-player-artist\">{currentTrackInfo.artist}</div>}\n                        {error && <div className=\"bottom-player-error\">{error}</div>}\n                    </div>\n                    <div className=\"bottom-player-controls\">\n                        <button onClick={togglePlay} disabled={isLoading} className=\"bottom-player-playpause\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                            {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                        </button>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}