{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\n// import '../../styles/player.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Player() {\n  _s();\n  const [playlist, setPlaylist] = useState([{\n    id: 1,\n    title: 'Sample Track',\n    artist: 'Unknown Artist',\n    src: '/sample-track.mp3',\n    artwork: '/sample-artwork.jpg'\n  }]);\n  const [currentTrack, setCurrentTrack] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [currentTrack, isPlaying]);\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const nextTrack = () => {\n    setCurrentTrack(prev => (prev + 1) % playlist.length);\n  };\n  const currentTrackInfo = playlist[currentTrack];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    style: {\n      backgroundImage: `url(${currentTrackInfo.artwork})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: currentTrackInfo.src,\n      onEnded: nextTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTrackInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentTrackInfo.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlay,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextTrack,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"fDmZ9ENSHYQTB6qf2Z3eesCm618=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Player","_s","playlist","setPlaylist","id","title","artist","src","artwork","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","audioRef","current","play","pause","togglePlay","nextTrack","prev","length","currentTrackInfo","className","style","backgroundImage","backgroundSize","backgroundPosition","children","ref","onEnded","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n// import '../../styles/player.css';\n\nfunction Player() {\n  const [playlist, setPlaylist] = useState([\n    {\n      id: 1,\n      title: 'Sample Track',\n      artist: 'Unknown Artist',\n      src: '/sample-track.mp3',\n      artwork: '/sample-artwork.jpg'\n    }\n  ]);\n\n  const [currentTrack, setCurrentTrack] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [currentTrack, isPlaying]);\n\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const nextTrack = () => {\n    setCurrentTrack((prev) => (prev + 1) % playlist.length);\n  };\n\n  const currentTrackInfo = playlist[currentTrack];\n\n  return (\n    <div \n      className=\"player-container\" \n      style={{ \n        backgroundImage: `url(${currentTrackInfo.artwork})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      }}\n    >\n      <audio \n        ref={audioRef} \n        src={currentTrackInfo.src}\n        onEnded={nextTrack}\n      />\n\n      <div className=\"track-info\">\n        <h2>{currentTrackInfo.title}</h2>\n        <p>{currentTrackInfo.artist}</p>\n      </div>\n\n      <div className=\"player-controls\">\n        <button onClick={togglePlay}>\n          {isPlaying ? 'Pause' : 'Play'}\n        </button>\n        <button onClick={nextTrack}>Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}