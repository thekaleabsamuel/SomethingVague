{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Player({\n  user\n}) {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n  const [error, setError] = useState(null); // Track errors\n  const [progress, setProgress] = useState(0); // Track current playback progress\n  const [duration, setDuration] = useState(0); // Track total duration\n  const audioRef = useRef(null);\n  const originalBodyStyleRef = useRef(null);\n  const location = useLocation(); // Get the current location object\n\n  // Determine if we are on the homepage\n  const isHomePage = location.pathname === '/';\n\n  // Helper to ensure correct path formatting\n  const getCleanPath = path => {\n    // Remove any public prefix if it exists\n    if (path.startsWith('public/')) {\n      path = path.replace('public/', '');\n    }\n    return path;\n  };\n\n  // --- Hooks ---\n  useEffect(() => {\n    /* Load Playlist */\n    try {\n      const tracks = playlistService.getPlaylist();\n      if (tracks && tracks.length > 0) {\n        // Clean up any path issues in the loaded tracks\n        const cleanedTracks = tracks.map(track => ({\n          ...track,\n          url: getCleanPath(track.url),\n          artwork: getCleanPath(track.artwork)\n        }));\n        console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n        setPlaylist(cleanedTracks);\n        setError(null);\n      } else {\n        console.error(\"No tracks returned from playlistService\");\n        setError(\"No tracks available\");\n      }\n    } catch (err) {\n      console.error(\"Error loading playlist:\", err);\n      setError(\"Failed to load playlist\");\n    }\n  }, []);\n\n  // Add function to handle next track\n  const playNextTrack = () => {\n    setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n  };\n\n  // Add function to handle previous track\n  const playPreviousTrack = () => {\n    setCurrentTrackIndex(prev => prev === 0 ? playlist.length - 1 : prev - 1);\n  };\n  useEffect(() => {\n    /* Global Background Effect */\n    // Decide if this should ONLY run on the homepage\n    if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n      // Optional: Restore original body style if navigating away from home\n      if (!isHomePage && originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n      }\n      return; // Don't apply effect if not on home or not ready\n    }\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n    // Use artwork path directly \n    const artworkUrl = currentTrackInfo.artwork;\n    console.log(\"Setting background with artwork:\", artworkUrl);\n\n    // Store original styles if not already stored (only on homepage)\n    if (originalBodyStyleRef.current === null) {\n      originalBodyStyleRef.current = {\n        backgroundImage: document.body.style.backgroundImage,\n        backgroundSize: document.body.style.backgroundSize,\n        backgroundPosition: document.body.style.backgroundPosition,\n        backgroundAttachment: document.body.style.backgroundAttachment,\n        minHeight: document.body.style.minHeight\n        // transition: document.body.style.transition // Be careful storing transition\n      };\n    }\n    // Apply new styles\n    document.body.style.backgroundImage = `url(${artworkUrl})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.minHeight = '100vh';\n    document.body.style.transition = 'background-image 1s ease-in-out';\n\n    // Cleanup: Restore styles when navigating away *or* component unmounts\n    return () => {\n      if (originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n        // Optional: Reset ref if you want it re-captured if returning to home\n        // originalBodyStyleRef.current = null;\n      }\n    };\n    // Add isHomePage to dependencies\n  }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n  useEffect(() => {\n    /* Track Loading/Playback */\n    if (playlist.length === 0 || currentTrackIndex < 0) {\n      setIsLoading(true); // Set loading if no playlist/index\n      return;\n    }\n    const audio = audioRef.current;\n    if (!audio) return;\n    const track = playlist[currentTrackIndex];\n    if (!track || !track.url) {\n      console.error(\"Invalid track data:\", track);\n      setIsLoading(true);\n      setError(\"Invalid track data\");\n      return; // Skip if track data is invalid\n    }\n    setIsLoading(true); // Set loading when changing track\n    const trackUrl = track.url;\n    console.log(\"Loading audio track:\", trackUrl);\n    setError(null); // Clear any previous errors\n    setProgress(0); // Reset progress when changing tracks\n    setDuration(0); // Reset duration\n\n    // Set src only if it's different\n    if (!audio.src.endsWith(trackUrl)) {\n      audio.src = trackUrl;\n      audio.load(); // Load the new source\n    } else if (isPlaying && audio.paused) {\n      // If src is the same but we intend to play, try playing\n      audio.play().catch(e => {\n        console.error(\"Retry play error:\", e);\n        setError(\"Failed to play track\");\n      });\n    }\n    const handleCanPlay = () => {\n      console.log(\"Audio can play:\", trackUrl);\n      setIsLoading(false); // Ready to play this track\n      setIsPlayerReady(true); // Mark that the player has loaded at least once\n      setError(null); // Clear any errors since audio is playable\n      setDuration(audio.duration || 0); // Set duration when known\n      if (isPlaying) {\n        audio.play().catch(e => {\n          console.error(\"Autoplay error:\", e);\n          setError(\"Autoplay failed - try clicking play\");\n        });\n      }\n      // Clean up this specific listener once it fires\n      audio.removeEventListener('canplay', handleCanPlay);\n    };\n    const handleEnded = () => {\n      console.log(\"Track ended\");\n      setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n      // Playback will resume via the isPlaying state in the next canplay event\n    };\n    const handleTimeUpdate = () => {\n      if (audio.duration) {\n        setProgress(audio.currentTime / audio.duration * 100);\n      }\n    };\n    const handleDurationChange = () => {\n      setDuration(audio.duration || 0);\n    };\n\n    // Clear previous listeners before adding new ones for this track\n    audio.removeEventListener('canplay', handleCanPlay);\n    audio.removeEventListener('ended', handleEnded);\n    audio.removeEventListener('timeupdate', handleTimeUpdate);\n    audio.removeEventListener('durationchange', handleDurationChange);\n    audio.addEventListener('canplay', handleCanPlay);\n    audio.addEventListener('ended', handleEnded);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('durationchange', handleDurationChange);\n    return () => {\n      // Cleanup listeners when track changes or component unmounts\n      audio.removeEventListener('canplay', handleCanPlay);\n      audio.removeEventListener('ended', handleEnded);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('durationchange', handleDurationChange);\n    };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n  }, [currentTrackIndex, playlist, isPlaying]);\n  useEffect(() => {\n    /* Audio State Sync Events */\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n    const handleError = e => {\n      var _playlist$currentTrac, _playlist$currentTrac2;\n      console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n      setIsLoading(false); // Stop loading on error\n      setIsPlaying(false);\n      setError(`Error playing track: ${(_playlist$currentTrac = playlist[currentTrackIndex]) === null || _playlist$currentTrac === void 0 ? void 0 : _playlist$currentTrac.title} - file may be missing at path: ${(_playlist$currentTrac2 = playlist[currentTrackIndex]) === null || _playlist$currentTrac2 === void 0 ? void 0 : _playlist$currentTrac2.url}`);\n      // Maybe try next track?\n      // setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    // Set initial state based on audio element (covers browser controls)\n    setIsPlaying(!audio.paused);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('error', handleError);\n    return () => {\n      // Cleanup on unmount\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('error', handleError);\n    };\n  }, [playlist.length, currentTrackIndex]); // Re-attach if playlist changes fundamentally\n\n  // --- Control Functions ---\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n    if (audio.paused) {\n      // We set isPlaying to true, the effect hook will handle the actual audio.play()\n      setIsPlaying(true);\n      audio.play().catch(error => {\n        console.error(\"Playback error:\", error);\n        setIsPlaying(false);\n        setError(\"Failed to play audio\");\n      }); // Also try direct play\n    } else {\n      audio.pause();\n      setIsPlaying(false); // Immediately reflect pause intent\n    }\n  };\n  const rewind15Seconds = () => {\n    const audio = audioRef.current;\n    if (audio) {\n      audio.currentTime = Math.max(0, audio.currentTime - 15);\n    }\n  };\n\n  // Format time for display (mm:ss)\n  const formatTime = seconds => {\n    if (isNaN(seconds) || !isFinite(seconds)) return '0:00';\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // --- Render Logic ---\n\n  // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n  const audioTag = /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    preload: \"metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 22\n  }, this);\n\n  // Handle loading state and errors\n  if (error && playlist.length === 0) {\n    // Critical error - no playlist available\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Reload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // Don't render full UI until the player has loaded something\n  if (!isPlayerReady && isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-loading\",\n        children: \"Loading Radio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // We have a playlist and player is ready, get current track info\n  const currentTrackInfo = playlist[currentTrackIndex];\n  if (!currentTrackInfo) {\n    // Handle case where index might be invalid temporarily\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No track selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // All good, display the track info\n  const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n\n  // --- Conditional UI Rendering ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [audioTag, \" \", isHomePage ?\n    /*#__PURE__*/\n    // --- Render Centered Player UI on HomePage ---\n    _jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-ui-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 39\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-overlay\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-artwork\",\n          style: {\n            backgroundImage: `url(${artworkUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-track-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 57\n          }, this), currentTrackInfo.scheduledTime && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"scheduled-time\",\n            children: [\"Scheduled: \", new Date(currentTrackInfo.scheduledTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls-centered\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: playPreviousTrack,\n            className: \"control-button prev-button\",\n            \"aria-label\": \"Previous track\",\n            children: \"\\u23EE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rewind15Seconds,\n            disabled: isLoading,\n            className: \"control-button rewind-button\",\n            \"aria-label\": \"Rewind 15 seconds\",\n            children: \"\\u21BA15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlay,\n            disabled: isLoading,\n            className: \"control-button play-pause-main\",\n            \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n            children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: playNextTrack,\n            className: \"control-button next-button\",\n            \"aria-label\": \"Next track\",\n            children: \"\\u23ED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-progress-fill\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(duration * (progress / 100))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-comment-section\",\n        children: /*#__PURE__*/_jsxDEV(CommentSection, {\n          user: user,\n          currentTrack: currentTrackInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // --- Render Bottom Player Bar on Other Pages ---\n    _jsxDEV(\"div\", {\n      className: \"bottom-player-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: artworkUrl,\n        alt: \"\",\n        className: \"bottom-player-artwork\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-title\",\n          children: currentTrackInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-artist\",\n          children: currentTrackInfo.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 53\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPreviousTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Previous track\",\n          children: \"\\u23EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          disabled: isLoading,\n          className: \"bottom-player-playpause\",\n          \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n          children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNextTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Next track\",\n          children: \"\\u23ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"5yReV0Z+uk+OiwdkIy48yx2U4cU=\", false, function () {\n  return [useLocation];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","playlistService","CommentSection","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","user","_s","playlist","setPlaylist","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","isLoading","setIsLoading","isPlayerReady","setIsPlayerReady","error","setError","progress","setProgress","duration","setDuration","audioRef","originalBodyStyleRef","location","isHomePage","pathname","getCleanPath","path","startsWith","replace","tracks","getPlaylist","length","cleanedTracks","map","track","url","artwork","console","log","err","playNextTrack","prev","playPreviousTrack","current","Object","assign","document","body","style","currentTrackInfo","artworkUrl","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","transition","audio","trackUrl","src","endsWith","load","paused","play","catch","e","handleCanPlay","removeEventListener","handleEnded","handleTimeUpdate","currentTime","handleDurationChange","addEventListener","handlePlay","handlePause","handleError","_playlist$currentTrac","_playlist$currentTrac2","title","togglePlay","pause","rewind15Seconds","Math","max","formatTime","seconds","isNaN","isFinite","mins","floor","secs","audioTag","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","window","reload","artist","scheduledTime","Date","toLocaleString","disabled","width","currentTrack","alt","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\n\nfunction Player({ user }) {\n    const [playlist, setPlaylist] = useState([]);\n    const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n    const [error, setError] = useState(null); // Track errors\n    const [progress, setProgress] = useState(0); // Track current playback progress\n    const [duration, setDuration] = useState(0); // Track total duration\n    const audioRef = useRef(null);\n    const originalBodyStyleRef = useRef(null);\n    const location = useLocation(); // Get the current location object\n\n    // Determine if we are on the homepage\n    const isHomePage = location.pathname === '/';\n\n    // Helper to ensure correct path formatting\n    const getCleanPath = (path) => {\n        // Remove any public prefix if it exists\n        if (path.startsWith('public/')) {\n            path = path.replace('public/', '');\n        }\n        return path;\n    };\n\n    // --- Hooks ---\n    useEffect(() => { /* Load Playlist */\n        try {\n            const tracks = playlistService.getPlaylist();\n            if (tracks && tracks.length > 0) {\n                // Clean up any path issues in the loaded tracks\n                const cleanedTracks = tracks.map(track => ({\n                    ...track,\n                    url: getCleanPath(track.url),\n                    artwork: getCleanPath(track.artwork)\n                }));\n                \n                console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n                setPlaylist(cleanedTracks);\n                setError(null);\n            } else {\n                console.error(\"No tracks returned from playlistService\");\n                setError(\"No tracks available\");\n            }\n        } catch (err) {\n            console.error(\"Error loading playlist:\", err);\n            setError(\"Failed to load playlist\");\n        }\n    }, []);\n\n    // Add function to handle next track\n    const playNextTrack = () => {\n        setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    // Add function to handle previous track\n    const playPreviousTrack = () => {\n        setCurrentTrackIndex(prev => \n            prev === 0 ? playlist.length - 1 : prev - 1\n        );\n    };\n\n    useEffect(() => { /* Global Background Effect */\n        // Decide if this should ONLY run on the homepage\n        if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n            // Optional: Restore original body style if navigating away from home\n             if (!isHomePage && originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n             }\n            return; // Don't apply effect if not on home or not ready\n        }\n\n        const currentTrackInfo = playlist[currentTrackIndex];\n        if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n        // Use artwork path directly \n        const artworkUrl = currentTrackInfo.artwork;\n        console.log(\"Setting background with artwork:\", artworkUrl);\n\n        // Store original styles if not already stored (only on homepage)\n        if (originalBodyStyleRef.current === null) {\n             originalBodyStyleRef.current = {\n                backgroundImage: document.body.style.backgroundImage,\n                backgroundSize: document.body.style.backgroundSize,\n                backgroundPosition: document.body.style.backgroundPosition,\n                backgroundAttachment: document.body.style.backgroundAttachment,\n                minHeight: document.body.style.minHeight,\n                // transition: document.body.style.transition // Be careful storing transition\n            };\n        }\n        // Apply new styles\n        document.body.style.backgroundImage = `url(${artworkUrl})`;\n        document.body.style.backgroundSize = 'cover';\n        document.body.style.backgroundPosition = 'center center';\n        document.body.style.backgroundAttachment = 'fixed';\n        document.body.style.minHeight = '100vh';\n        document.body.style.transition = 'background-image 1s ease-in-out';\n\n        // Cleanup: Restore styles when navigating away *or* component unmounts\n        return () => {\n             if (originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n                 // Optional: Reset ref if you want it re-captured if returning to home\n                 // originalBodyStyleRef.current = null;\n             }\n         };\n    // Add isHomePage to dependencies\n    }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n\n    useEffect(() => { /* Track Loading/Playback */\n        if (playlist.length === 0 || currentTrackIndex < 0) {\n            setIsLoading(true); // Set loading if no playlist/index\n            return;\n        }\n\n        const audio = audioRef.current; if (!audio) return;\n        const track = playlist[currentTrackIndex];\n        if (!track || !track.url) {\n            console.error(\"Invalid track data:\", track);\n            setIsLoading(true);\n            setError(\"Invalid track data\");\n            return; // Skip if track data is invalid\n        }\n\n        setIsLoading(true); // Set loading when changing track\n        const trackUrl = track.url;\n        console.log(\"Loading audio track:\", trackUrl);\n        \n        setError(null); // Clear any previous errors\n        setProgress(0); // Reset progress when changing tracks\n        setDuration(0); // Reset duration\n\n        // Set src only if it's different\n        if (!audio.src.endsWith(trackUrl)) {\n            audio.src = trackUrl;\n            audio.load(); // Load the new source\n        } else if (isPlaying && audio.paused) {\n             // If src is the same but we intend to play, try playing\n            audio.play().catch(e => {\n                console.error(\"Retry play error:\", e);\n                setError(\"Failed to play track\");\n            });\n        }\n\n        const handleCanPlay = () => {\n            console.log(\"Audio can play:\", trackUrl);\n            setIsLoading(false); // Ready to play this track\n            setIsPlayerReady(true); // Mark that the player has loaded at least once\n            setError(null); // Clear any errors since audio is playable\n            setDuration(audio.duration || 0); // Set duration when known\n             if (isPlaying) {\n                 audio.play().catch(e => {\n                     console.error(\"Autoplay error:\", e);\n                     setError(\"Autoplay failed - try clicking play\");\n                 });\n             }\n             // Clean up this specific listener once it fires\n             audio.removeEventListener('canplay', handleCanPlay);\n        };\n\n        const handleEnded = () => {\n            console.log(\"Track ended\");\n            setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n            // Playback will resume via the isPlaying state in the next canplay event\n        };\n\n        const handleTimeUpdate = () => {\n            if (audio.duration) {\n                setProgress(audio.currentTime / audio.duration * 100);\n            }\n        };\n\n        const handleDurationChange = () => {\n            setDuration(audio.duration || 0);\n        };\n\n        // Clear previous listeners before adding new ones for this track\n        audio.removeEventListener('canplay', handleCanPlay);\n        audio.removeEventListener('ended', handleEnded);\n        audio.removeEventListener('timeupdate', handleTimeUpdate);\n        audio.removeEventListener('durationchange', handleDurationChange);\n\n        audio.addEventListener('canplay', handleCanPlay);\n        audio.addEventListener('ended', handleEnded);\n        audio.addEventListener('timeupdate', handleTimeUpdate);\n        audio.addEventListener('durationchange', handleDurationChange);\n\n        return () => { // Cleanup listeners when track changes or component unmounts\n            audio.removeEventListener('canplay', handleCanPlay);\n            audio.removeEventListener('ended', handleEnded);\n            audio.removeEventListener('timeupdate', handleTimeUpdate);\n            audio.removeEventListener('durationchange', handleDurationChange);\n        };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n    }, [currentTrackIndex, playlist, isPlaying]);\n\n\n    useEffect(() => { /* Audio State Sync Events */\n        const audio = audioRef.current; if (!audio) return;\n\n        const handlePlay = () => setIsPlaying(true);\n        const handlePause = () => setIsPlaying(false);\n        const handleError = (e) => {\n            console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n            setIsLoading(false); // Stop loading on error\n            setIsPlaying(false);\n            setError(`Error playing track: ${playlist[currentTrackIndex]?.title} - file may be missing at path: ${playlist[currentTrackIndex]?.url}`);\n            // Maybe try next track?\n            // setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n        };\n\n        // Set initial state based on audio element (covers browser controls)\n        setIsPlaying(!audio.paused);\n\n        audio.addEventListener('play', handlePlay);\n        audio.addEventListener('pause', handlePause);\n        audio.addEventListener('error', handleError);\n\n        return () => { // Cleanup on unmount\n            audio.removeEventListener('play', handlePlay);\n            audio.removeEventListener('pause', handlePause);\n            audio.removeEventListener('error', handleError);\n        };\n    }, [playlist.length, currentTrackIndex]); // Re-attach if playlist changes fundamentally\n\n    // --- Control Functions ---\n    const togglePlay = () => {\n        const audio = audioRef.current;\n        if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n        if (audio.paused) {\n             // We set isPlaying to true, the effect hook will handle the actual audio.play()\n            setIsPlaying(true);\n            audio.play().catch(error => { \n                console.error(\"Playback error:\", error); \n                setIsPlaying(false); \n                setError(\"Failed to play audio\");\n            }); // Also try direct play\n        } else {\n            audio.pause();\n            setIsPlaying(false); // Immediately reflect pause intent\n        }\n    };\n\n    const rewind15Seconds = () => {\n        const audio = audioRef.current;\n        if (audio) {\n            audio.currentTime = Math.max(0, audio.currentTime - 15);\n        }\n    };\n\n    // Format time for display (mm:ss)\n    const formatTime = (seconds) => {\n        if (isNaN(seconds) || !isFinite(seconds)) return '0:00';\n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n    };\n\n    // --- Render Logic ---\n\n    // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n    const audioTag = <audio ref={audioRef} preload=\"metadata\" />;\n\n    // Handle loading state and errors\n    if (error && playlist.length === 0) {\n        // Critical error - no playlist available\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>{error}</p>\n                    <button onClick={() => window.location.reload()}>Reload Page</button>\n                </div>\n            </>\n        );\n    }\n\n    // Don't render full UI until the player has loaded something\n    if (!isPlayerReady && isLoading) {\n        return (\n            <>\n                {audioTag}\n                <div className=\"initial-loading\">Loading Radio...</div>\n            </>\n        );\n    }\n\n    // We have a playlist and player is ready, get current track info\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo) {\n        // Handle case where index might be invalid temporarily\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>No track selected</p>\n                </div>\n            </>\n        );\n    }\n\n    // All good, display the track info\n    const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n\n    // --- Conditional UI Rendering ---\n    return (\n        <>\n            {audioTag} {/* Audio tag is always rendered */}\n\n            {isHomePage ? (\n                // --- Render Centered Player UI on HomePage ---\n                <div className=\"player-container\">\n                    <div className=\"player-ui-container\">\n                        {isLoading && <div className=\"loading-overlay\">Loading...</div>}\n                        {error && <div className=\"error-overlay\">{error}</div>}\n                        \n                        <div\n                            className=\"player-artwork\"\n                            style={{ backgroundImage: `url(${artworkUrl})` }}\n                        ></div>\n                        <div className=\"player-track-details\">\n                            <h2>{currentTrackInfo.title}</h2>\n                            {currentTrackInfo.artist && <p>{currentTrackInfo.artist}</p>}\n                            \n                            {/* Add scheduled time display if available */}\n                            {currentTrackInfo.scheduledTime && (\n                                <p className=\"scheduled-time\">\n                                    Scheduled: {new Date(currentTrackInfo.scheduledTime).toLocaleString()}\n                                </p>\n                            )}\n                        </div>\n                        <div className=\"player-controls-centered\">\n                            <button onClick={playPreviousTrack} className=\"control-button prev-button\" aria-label=\"Previous track\">\n                                ⏮\n                            </button>\n                            <button onClick={rewind15Seconds} disabled={isLoading} className=\"control-button rewind-button\" aria-label=\"Rewind 15 seconds\">\n                                ↺15\n                            </button>\n                            <button onClick={togglePlay} disabled={isLoading} className=\"control-button play-pause-main\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                                {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                            </button>\n                            <button onClick={playNextTrack} className=\"control-button next-button\" aria-label=\"Next track\">\n                                ⏭\n                            </button>\n                        </div>\n                        \n                        {/* Add progress display */}\n                        <div className=\"player-progress-container\">\n                            <div className=\"player-progress-bar\">\n                                <div \n                                    className=\"player-progress-fill\" \n                                    style={{ width: `${progress}%` }}\n                                ></div>\n                            </div>\n                            <div className=\"player-time\">\n                                <span>{formatTime(duration * (progress / 100))}</span>\n                                <span>{formatTime(duration)}</span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    {/* Add the comment section */}\n                    <div className=\"player-comment-section\">\n                        <CommentSection user={user} currentTrack={currentTrackInfo} />\n                    </div>\n                </div>\n            ) : (\n                // --- Render Bottom Player Bar on Other Pages ---\n                <div className=\"bottom-player-bar\">\n                    {/* Progress bar at the top */}\n                    <div \n                        className=\"bottom-player-progress\" \n                        style={{ width: `${progress}%` }}\n                    ></div>\n                    \n                    <img src={artworkUrl} alt=\"\" className=\"bottom-player-artwork\" />\n                    <div className=\"bottom-player-info\">\n                        <div className=\"bottom-player-title\">{currentTrackInfo.title}</div>\n                        {currentTrackInfo.artist && <div className=\"bottom-player-artist\">{currentTrackInfo.artist}</div>}\n                        {error && <div className=\"bottom-player-error\">{error}</div>}\n                    </div>\n                    <div className=\"bottom-player-controls\">\n                        <button onClick={playPreviousTrack} className=\"bottom-player-prevnext\" aria-label=\"Previous track\">\n                            ⏮\n                        </button>\n                        <button onClick={togglePlay} disabled={isLoading} className=\"bottom-player-playpause\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                            {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                        </button>\n                        <button onClick={playNextTrack} className=\"bottom-player-prevnext\" aria-label=\"Next track\">\n                            ⏭\n                        </button>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}