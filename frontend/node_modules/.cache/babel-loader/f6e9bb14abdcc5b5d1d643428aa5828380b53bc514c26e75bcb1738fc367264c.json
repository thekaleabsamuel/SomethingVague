{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\nfunction Player({\n  user\n}) {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n  const [error, setError] = useState(null); // Track errors\n  const [progress, setProgress] = useState(0); // Keep progress tracking for bottom player\n  const [duration, setDuration] = useState(0); // Keep duration tracking\n  const audioRef = useRef(null);\n  const originalBodyStyleRef = useRef(null);\n  const location = useLocation(); // Get the current location object\n\n  // Determine if we are on the homepage\n  const isHomePage = location.pathname === '/';\n\n  // Helper to ensure correct path formatting\n  const getCleanPath = path => {\n    // Remove any public prefix if it exists\n    if (path.startsWith('public/')) {\n      path = path.replace('public/', '');\n    }\n    return path;\n  };\n\n  // --- Hooks ---\n  useEffect(() => {\n    /* Load Playlist */\n    try {\n      const tracks = playlistService.getPlaylist();\n      if (tracks && tracks.length > 0) {\n        // Clean up any path issues in the loaded tracks\n        const cleanedTracks = tracks.map(track => ({\n          ...track,\n          url: getCleanPath(track.url),\n          artwork: getCleanPath(track.artwork)\n        }));\n        console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n        setPlaylist(cleanedTracks);\n        setError(null);\n      } else {\n        console.error(\"No tracks returned from playlistService\");\n        setError(\"No tracks available\");\n      }\n    } catch (err) {\n      console.error(\"Error loading playlist:\", err);\n      setError(\"Failed to load playlist\");\n    }\n  }, []);\n  useEffect(() => {\n    /* Global Background Effect */\n    // Decide if this should ONLY run on the homepage\n    if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n      // Optional: Restore original body style if navigating away from home\n      if (!isHomePage && originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n      }\n      return; // Don't apply effect if not on home or not ready\n    }\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n    // Use artwork path directly \n    const artworkUrl = currentTrackInfo.artwork;\n    console.log(\"Setting background with artwork:\", artworkUrl);\n\n    // Store original styles if not already stored (only on homepage)\n    if (originalBodyStyleRef.current === null) {\n      originalBodyStyleRef.current = {\n        backgroundImage: document.body.style.backgroundImage,\n        backgroundSize: document.body.style.backgroundSize,\n        backgroundPosition: document.body.style.backgroundPosition,\n        backgroundAttachment: document.body.style.backgroundAttachment,\n        minHeight: document.body.style.minHeight\n        // transition: document.body.style.transition // Be careful storing transition\n      };\n    }\n    // Apply new styles\n    document.body.style.backgroundImage = `url(${artworkUrl})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.minHeight = '100vh';\n    document.body.style.transition = 'background-image 1s ease-in-out';\n\n    // Cleanup: Restore styles when navigating away *or* component unmounts\n    return () => {\n      if (originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n        // Optional: Reset ref if you want it re-captured if returning to home\n        // originalBodyStyleRef.current = null;\n      }\n    };\n    // Add isHomePage to dependencies\n  }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n  useEffect(() => {\n    /* Track Loading/Playback */\n    if (playlist.length === 0 || currentTrackIndex < 0) {\n      setIsLoading(true); // Set loading if no playlist/index\n      return;\n    }\n    const audio = audioRef.current;\n    if (!audio) return;\n    const track = playlist[currentTrackIndex];\n    if (!track || !track.url) {\n      console.error(\"Invalid track data:\", track);\n      setIsLoading(true);\n      setError(\"Invalid track data\");\n      return; // Skip if track data is invalid\n    }\n    setIsLoading(true); // Set loading when changing track\n    const trackUrl = track.url;\n    console.log(\"Loading audio track:\", trackUrl);\n    setError(null); // Clear any previous errors\n    setProgress(0); // Reset progress when changing tracks\n    setDuration(0); // Reset duration\n\n    // Set src only if it's different\n    if (!audio.src.endsWith(trackUrl)) {\n      audio.src = trackUrl;\n      audio.load(); // Load the new source\n    } else if (isPlaying && audio.paused) {\n      // If src is the same but we intend to play, try playing\n      audio.play().catch(e => {\n        console.error(\"Retry play error:\", e);\n        setError(\"Failed to play track\");\n      });\n    }\n    const handleCanPlay = () => {\n      console.log(\"Audio can play:\", trackUrl);\n      setIsLoading(false); // Ready to play this track\n      setIsPlayerReady(true); // Mark that the player has loaded at least once\n      setError(null); // Clear any errors since audio is playable\n      setDuration(audio.duration || 0); // Set duration when known\n      if (isPlaying) {\n        audio.play().catch(e => {\n          console.error(\"Autoplay error:\", e);\n          setError(\"Autoplay failed - try clicking play\");\n        });\n      }\n      // Clean up this specific listener once it fires\n      audio.removeEventListener('canplay', handleCanPlay);\n    };\n    const handleEnded = () => {\n      console.log(\"Track ended\");\n      setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n      // Playback will resume via the isPlaying state in the next canplay event\n    };\n    const handleTimeUpdate = () => {\n      if (audio.duration) {\n        setProgress(audio.currentTime / audio.duration * 100);\n      }\n    };\n    const handleDurationChange = () => {\n      setDuration(audio.duration || 0);\n    };\n\n    // Clear previous listeners before adding new ones for this track\n    audio.removeEventListener('canplay', handleCanPlay);\n    audio.removeEventListener('ended', handleEnded);\n    audio.removeEventListener('timeupdate', handleTimeUpdate);\n    audio.removeEventListener('durationchange', handleDurationChange);\n    audio.addEventListener('canplay', handleCanPlay);\n    audio.addEventListener('ended', handleEnded);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('durationchange', handleDurationChange);\n    return () => {\n      // Cleanup listeners when track changes or component unmounts\n      audio.removeEventListener('canplay', handleCanPlay);\n      audio.removeEventListener('ended', handleEnded);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('durationchange', handleDurationChange);\n    };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n  }, [currentTrackIndex, playlist, isPlaying]);\n  useEffect(() => {\n    /* Audio State Sync Events */\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n    const handleError = e => {\n      var _playlist$currentTrac, _playlist$currentTrac2;\n      console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n      setIsLoading(false); // Stop loading on error\n      setIsPlaying(false);\n      setError(`Error playing track: ${(_playlist$currentTrac = playlist[currentTrackIndex]) === null || _playlist$currentTrac === void 0 ? void 0 : _playlist$currentTrac.title} - file may be missing at path: ${(_playlist$currentTrac2 = playlist[currentTrackIndex]) === null || _playlist$currentTrac2 === void 0 ? void 0 : _playlist$currentTrac2.url}`);\n      // Maybe try next track?\n      // setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    // Set initial state based on audio element (covers browser controls)\n    setIsPlaying(!audio.paused);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('error', handleError);\n    return () => {\n      // Cleanup on unmount\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('error', handleError);\n    };\n  }, [playlist.length, currentTrackIndex]); // Re-attach if playlist changes fundamentally\n\n  // --- Control Functions ---\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n    if (audio.paused) {\n      // We set isPlaying to true, the effect hook will handle the actual audio.play()\n      setIsPlaying(true);\n      audio.play().catch(error => {\n        console.error(\"Playback error:\", error);\n        setIsPlaying(false);\n        setError(\"Failed to play audio\");\n      }); // Also try direct play\n    } else {\n      audio.pause();\n      setIsPlaying(false); // Immediately reflect pause intent\n    }\n  };\n  const rewind15Seconds = () => {\n    const audio = audioRef.current;\n    if (audio) {\n      audio.currentTime = Math.max(0, audio.currentTime - 15);\n    }\n  };\n\n  // For next/prev track in bottom player\n  const playNextTrack = () => {\n    setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n  };\n  const playPreviousTrack = () => {\n    setCurrentTrackIndex(prev => prev === 0 ? playlist.length - 1 : prev - 1);\n  };\n\n  // Format time function for displaying current time and duration\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // --- Render Logic ---\n\n  // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n  const audioTag = /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    preload: \"metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 22\n  }, this);\n\n  // Handle loading state and errors\n  if (error && playlist.length === 0) {\n    // Critical error - no playlist available\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Reload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // Don't render full UI until the player has loaded something\n  if (!isPlayerReady && isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-loading\",\n        children: \"Loading Radio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // We have a playlist and player is ready, get current track info\n  const currentTrackInfo = playlist[currentTrackIndex];\n  if (!currentTrackInfo) {\n    // Handle case where index might be invalid temporarily\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No track selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // All good, display the track info\n  const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n  const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n  const trackDuration = audioRef.current ? audioRef.current.duration : 0;\n\n  // --- Conditional UI Rendering ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [audioTag, \" \", isHomePage ?\n    /*#__PURE__*/\n    // --- SoundCloud-like Player UI on HomePage ---\n    _jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-header\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 39\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-overlay\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-top-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-left-section\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: togglePlay,\n              disabled: isLoading,\n              className: \"player-play-button\",\n              \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n              children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"player-track-title\",\n              children: currentTrackInfo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"player-artist-name\",\n              children: currentTrackInfo.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-time-ago\",\n                children: \"21 days ago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-genre-tag\",\n                children: \"# Hip-hop & Rap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-playlist-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-playlist-icon\",\n                children: \"\\uD83C\\uDFB5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"In playlist: New & Hot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-artwork-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-artwork\",\n            style: {\n              backgroundImage: `url(${artworkUrl})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-waveform-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-waveform\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waveform-played\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: WAVEFORM_PLACEHOLDER,\n              alt: \"Audio waveform\",\n              className: \"waveform-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rewind15Seconds,\n            disabled: isLoading,\n            \"aria-label\": \"Rewind 15 seconds\",\n            children: \"\\u21BA15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: playPreviousTrack,\n            \"aria-label\": \"Previous track\",\n            children: \"\\u23EE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: playNextTrack,\n            \"aria-label\": \"Next track\",\n            children: \"\\u23ED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-time\",\n            children: [formatTime(currentTime), \" / \", formatTime(trackDuration)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-like-button\",\n            children: [\"\\u2764\\uFE0F \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"I love this\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-comment-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"player-comment-title\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          user: user,\n          currentTrack: currentTrackInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n    _jsxDEV(\"div\", {\n      className: \"bottom-player-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artworkUrl,\n          alt: \"\",\n          className: \"bottom-player-artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-title\",\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-artist\",\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 57\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPreviousTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Previous track\",\n          children: \"\\u23EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          disabled: isLoading,\n          className: \"bottom-player-playpause\",\n          \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n          children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNextTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Next track\",\n          children: \"\\u23ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"5yReV0Z+uk+OiwdkIy48yx2U4cU=\", false, function () {\n  return [useLocation];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","playlistService","CommentSection","jsxDEV","_jsxDEV","Fragment","_Fragment","WAVEFORM_PLACEHOLDER","Player","user","_s","playlist","setPlaylist","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","isLoading","setIsLoading","isPlayerReady","setIsPlayerReady","error","setError","progress","setProgress","duration","setDuration","audioRef","originalBodyStyleRef","location","isHomePage","pathname","getCleanPath","path","startsWith","replace","tracks","getPlaylist","length","cleanedTracks","map","track","url","artwork","console","log","err","current","Object","assign","document","body","style","currentTrackInfo","artworkUrl","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","transition","audio","trackUrl","src","endsWith","load","paused","play","catch","e","handleCanPlay","removeEventListener","handleEnded","prev","handleTimeUpdate","currentTime","handleDurationChange","addEventListener","handlePlay","handlePause","handleError","_playlist$currentTrac","_playlist$currentTrac2","title","togglePlay","pause","rewind15Seconds","Math","max","playNextTrack","playPreviousTrack","formatTime","seconds","mins","floor","secs","audioTag","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","window","reload","trackDuration","disabled","artist","width","alt","currentTrack","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\n\nfunction Player({ user }) {\n    const [playlist, setPlaylist] = useState([]);\n    const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n    const [error, setError] = useState(null); // Track errors\n    const [progress, setProgress] = useState(0); // Keep progress tracking for bottom player\n    const [duration, setDuration] = useState(0); // Keep duration tracking\n    const audioRef = useRef(null);\n    const originalBodyStyleRef = useRef(null);\n    const location = useLocation(); // Get the current location object\n\n    // Determine if we are on the homepage\n    const isHomePage = location.pathname === '/';\n\n    // Helper to ensure correct path formatting\n    const getCleanPath = (path) => {\n        // Remove any public prefix if it exists\n        if (path.startsWith('public/')) {\n            path = path.replace('public/', '');\n        }\n        return path;\n    };\n\n    // --- Hooks ---\n    useEffect(() => { /* Load Playlist */\n        try {\n            const tracks = playlistService.getPlaylist();\n            if (tracks && tracks.length > 0) {\n                // Clean up any path issues in the loaded tracks\n                const cleanedTracks = tracks.map(track => ({\n                    ...track,\n                    url: getCleanPath(track.url),\n                    artwork: getCleanPath(track.artwork)\n                }));\n                \n                console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n                setPlaylist(cleanedTracks);\n                setError(null);\n            } else {\n                console.error(\"No tracks returned from playlistService\");\n                setError(\"No tracks available\");\n            }\n        } catch (err) {\n            console.error(\"Error loading playlist:\", err);\n            setError(\"Failed to load playlist\");\n        }\n    }, []);\n\n    useEffect(() => { /* Global Background Effect */\n        // Decide if this should ONLY run on the homepage\n        if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n            // Optional: Restore original body style if navigating away from home\n             if (!isHomePage && originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n             }\n            return; // Don't apply effect if not on home or not ready\n        }\n\n        const currentTrackInfo = playlist[currentTrackIndex];\n        if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n        // Use artwork path directly \n        const artworkUrl = currentTrackInfo.artwork;\n        console.log(\"Setting background with artwork:\", artworkUrl);\n\n        // Store original styles if not already stored (only on homepage)\n        if (originalBodyStyleRef.current === null) {\n             originalBodyStyleRef.current = {\n                backgroundImage: document.body.style.backgroundImage,\n                backgroundSize: document.body.style.backgroundSize,\n                backgroundPosition: document.body.style.backgroundPosition,\n                backgroundAttachment: document.body.style.backgroundAttachment,\n                minHeight: document.body.style.minHeight,\n                // transition: document.body.style.transition // Be careful storing transition\n            };\n        }\n        // Apply new styles\n        document.body.style.backgroundImage = `url(${artworkUrl})`;\n        document.body.style.backgroundSize = 'cover';\n        document.body.style.backgroundPosition = 'center center';\n        document.body.style.backgroundAttachment = 'fixed';\n        document.body.style.minHeight = '100vh';\n        document.body.style.transition = 'background-image 1s ease-in-out';\n\n        // Cleanup: Restore styles when navigating away *or* component unmounts\n        return () => {\n             if (originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n                 // Optional: Reset ref if you want it re-captured if returning to home\n                 // originalBodyStyleRef.current = null;\n             }\n         };\n    // Add isHomePage to dependencies\n    }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n\n    useEffect(() => { /* Track Loading/Playback */\n        if (playlist.length === 0 || currentTrackIndex < 0) {\n            setIsLoading(true); // Set loading if no playlist/index\n            return;\n        }\n\n        const audio = audioRef.current; if (!audio) return;\n        const track = playlist[currentTrackIndex];\n        if (!track || !track.url) {\n            console.error(\"Invalid track data:\", track);\n            setIsLoading(true);\n            setError(\"Invalid track data\");\n            return; // Skip if track data is invalid\n        }\n\n        setIsLoading(true); // Set loading when changing track\n        const trackUrl = track.url;\n        console.log(\"Loading audio track:\", trackUrl);\n        \n        setError(null); // Clear any previous errors\n        setProgress(0); // Reset progress when changing tracks\n        setDuration(0); // Reset duration\n\n        // Set src only if it's different\n        if (!audio.src.endsWith(trackUrl)) {\n            audio.src = trackUrl;\n            audio.load(); // Load the new source\n        } else if (isPlaying && audio.paused) {\n             // If src is the same but we intend to play, try playing\n            audio.play().catch(e => {\n                console.error(\"Retry play error:\", e);\n                setError(\"Failed to play track\");\n            });\n        }\n\n        const handleCanPlay = () => {\n            console.log(\"Audio can play:\", trackUrl);\n            setIsLoading(false); // Ready to play this track\n            setIsPlayerReady(true); // Mark that the player has loaded at least once\n            setError(null); // Clear any errors since audio is playable\n            setDuration(audio.duration || 0); // Set duration when known\n             if (isPlaying) {\n                 audio.play().catch(e => {\n                     console.error(\"Autoplay error:\", e);\n                     setError(\"Autoplay failed - try clicking play\");\n                 });\n             }\n             // Clean up this specific listener once it fires\n             audio.removeEventListener('canplay', handleCanPlay);\n        };\n\n        const handleEnded = () => {\n            console.log(\"Track ended\");\n            setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n            // Playback will resume via the isPlaying state in the next canplay event\n        };\n\n        const handleTimeUpdate = () => {\n            if (audio.duration) {\n                setProgress(audio.currentTime / audio.duration * 100);\n            }\n        };\n\n        const handleDurationChange = () => {\n            setDuration(audio.duration || 0);\n        };\n\n        // Clear previous listeners before adding new ones for this track\n        audio.removeEventListener('canplay', handleCanPlay);\n        audio.removeEventListener('ended', handleEnded);\n        audio.removeEventListener('timeupdate', handleTimeUpdate);\n        audio.removeEventListener('durationchange', handleDurationChange);\n\n        audio.addEventListener('canplay', handleCanPlay);\n        audio.addEventListener('ended', handleEnded);\n        audio.addEventListener('timeupdate', handleTimeUpdate);\n        audio.addEventListener('durationchange', handleDurationChange);\n\n        return () => { // Cleanup listeners when track changes or component unmounts\n            audio.removeEventListener('canplay', handleCanPlay);\n            audio.removeEventListener('ended', handleEnded);\n            audio.removeEventListener('timeupdate', handleTimeUpdate);\n            audio.removeEventListener('durationchange', handleDurationChange);\n        };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n    }, [currentTrackIndex, playlist, isPlaying]);\n\n\n    useEffect(() => { /* Audio State Sync Events */\n        const audio = audioRef.current; if (!audio) return;\n\n        const handlePlay = () => setIsPlaying(true);\n        const handlePause = () => setIsPlaying(false);\n        const handleError = (e) => {\n            console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n            setIsLoading(false); // Stop loading on error\n            setIsPlaying(false);\n            setError(`Error playing track: ${playlist[currentTrackIndex]?.title} - file may be missing at path: ${playlist[currentTrackIndex]?.url}`);\n            // Maybe try next track?\n            // setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n        };\n\n        // Set initial state based on audio element (covers browser controls)\n        setIsPlaying(!audio.paused);\n\n        audio.addEventListener('play', handlePlay);\n        audio.addEventListener('pause', handlePause);\n        audio.addEventListener('error', handleError);\n\n        return () => { // Cleanup on unmount\n            audio.removeEventListener('play', handlePlay);\n            audio.removeEventListener('pause', handlePause);\n            audio.removeEventListener('error', handleError);\n        };\n    }, [playlist.length, currentTrackIndex]); // Re-attach if playlist changes fundamentally\n\n    // --- Control Functions ---\n    const togglePlay = () => {\n        const audio = audioRef.current;\n        if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n        if (audio.paused) {\n             // We set isPlaying to true, the effect hook will handle the actual audio.play()\n            setIsPlaying(true);\n            audio.play().catch(error => { \n                console.error(\"Playback error:\", error); \n                setIsPlaying(false); \n                setError(\"Failed to play audio\");\n            }); // Also try direct play\n        } else {\n            audio.pause();\n            setIsPlaying(false); // Immediately reflect pause intent\n        }\n    };\n\n    const rewind15Seconds = () => {\n        const audio = audioRef.current;\n        if (audio) {\n            audio.currentTime = Math.max(0, audio.currentTime - 15);\n        }\n    };\n\n    // For next/prev track in bottom player\n    const playNextTrack = () => {\n        setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    const playPreviousTrack = () => {\n        setCurrentTrackIndex(prev => \n            prev === 0 ? playlist.length - 1 : prev - 1\n        );\n    };\n\n    // Format time function for displaying current time and duration\n    const formatTime = (seconds) => {\n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n    };\n\n    // --- Render Logic ---\n\n    // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n    const audioTag = <audio ref={audioRef} preload=\"metadata\" />;\n\n    // Handle loading state and errors\n    if (error && playlist.length === 0) {\n        // Critical error - no playlist available\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>{error}</p>\n                    <button onClick={() => window.location.reload()}>Reload Page</button>\n                </div>\n            </>\n        );\n    }\n\n    // Don't render full UI until the player has loaded something\n    if (!isPlayerReady && isLoading) {\n        return (\n            <>\n                {audioTag}\n                <div className=\"initial-loading\">Loading Radio...</div>\n            </>\n        );\n    }\n\n    // We have a playlist and player is ready, get current track info\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo) {\n        // Handle case where index might be invalid temporarily\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>No track selected</p>\n                </div>\n            </>\n        );\n    }\n\n    // All good, display the track info\n    const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n    const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n    const trackDuration = audioRef.current ? audioRef.current.duration : 0;\n\n    // --- Conditional UI Rendering ---\n    return (\n        <>\n            {audioTag} {/* Audio tag is always rendered */}\n\n            {isHomePage ? (\n                // --- SoundCloud-like Player UI on HomePage ---\n                <div className=\"player-container\">\n                    <div className=\"player-header\">\n                        {isLoading && <div className=\"loading-overlay\">Loading...</div>}\n                        {error && <div className=\"error-overlay\">{error}</div>}\n                        \n                        <div className=\"player-top-section\">\n                            <div className=\"player-left-section\">\n                                <button \n                                    onClick={togglePlay} \n                                    disabled={isLoading} \n                                    className=\"player-play-button\" \n                                    aria-label={isPlaying ? \"Pause\" : \"Play\"}\n                                >\n                                    {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                                </button>\n                            </div>\n                            \n                            <div className=\"player-info\">\n                                <h2 className=\"player-track-title\">{currentTrackInfo.title}</h2>\n                                {currentTrackInfo.artist && <p className=\"player-artist-name\">{currentTrackInfo.artist}</p>}\n                                \n                                <div className=\"player-meta\">\n                                    <span className=\"player-time-ago\">21 days ago</span>\n                                    <span className=\"player-genre-tag\"># Hip-hop & Rap</span>\n                                </div>\n                                \n                                <div className=\"player-playlist-info\">\n                                    <span className=\"player-playlist-icon\">🎵</span>\n                                    <span>In playlist: New & Hot</span>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        {/* Centered artwork section */}\n                        <div className=\"player-artwork-container\">\n                            <div \n                                className=\"player-artwork\"\n                                style={{ backgroundImage: `url(${artworkUrl})` }}\n                            ></div>\n                        </div>\n                        \n                        {/* Waveform visualization */}\n                        <div className=\"player-waveform-container\">\n                            <div className=\"player-waveform\">\n                                <div \n                                    className=\"waveform-played\" \n                                    style={{ width: `${progress}%` }}\n                                ></div>\n                                <img \n                                    src={WAVEFORM_PLACEHOLDER} \n                                    alt=\"Audio waveform\" \n                                    className=\"waveform-image\" \n                                />\n                            </div>\n                        </div>\n                        \n                        <div className=\"player-controls\">\n                            <button onClick={rewind15Seconds} disabled={isLoading} aria-label=\"Rewind 15 seconds\">\n                                ↺15\n                            </button>\n                            <button onClick={playPreviousTrack} aria-label=\"Previous track\">\n                                ⏮\n                            </button>\n                            <button onClick={playNextTrack} aria-label=\"Next track\">\n                                ⏭\n                            </button>\n                            \n                            <div className=\"player-time\">\n                                {formatTime(currentTime)} / {formatTime(trackDuration)}\n                            </div>\n                            \n                            <div className=\"player-like-button\">\n                                ❤️ <span>I love this</span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    {/* Comment section below the player */}\n                    <div className=\"player-comment-section\">\n                        <div className=\"player-comment-header\">\n                            <h3 className=\"player-comment-title\">Comments</h3>\n                        </div>\n                        <CommentSection user={user} currentTrack={currentTrackInfo} />\n                    </div>\n                </div>\n            ) : (\n                // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n                <div className=\"bottom-player-bar\">\n                    {/* Progress bar at the top */}\n                    <div \n                        className=\"bottom-player-progress\" \n                        style={{ width: `${progress}%` }}\n                    ></div>\n                    \n                    <div className=\"bottom-player-left\">\n                        <img src={artworkUrl} alt=\"\" className=\"bottom-player-artwork\" />\n                        <div className=\"bottom-player-info\">\n                            <div className=\"bottom-player-title\">{currentTrackInfo.title}</div>\n                            {currentTrackInfo.artist && <div className=\"bottom-player-artist\">{currentTrackInfo.artist}</div>}\n                            {error && <div className=\"bottom-player-error\">{error}</div>}\n                        </div>\n                    </div>\n                    <div className=\"bottom-player-controls\">\n                        <button onClick={playPreviousTrack} className=\"bottom-player-prevnext\" aria-label=\"Previous track\">\n                            ⏮\n                        </button>\n                        <button onClick={togglePlay} disabled={isLoading} className=\"bottom-player-playpause\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                            {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                        </button>\n                        <button onClick={playNextTrack} className=\"bottom-player-prevnext\" aria-label=\"Next track\">\n                            ⏭\n                        </button>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}