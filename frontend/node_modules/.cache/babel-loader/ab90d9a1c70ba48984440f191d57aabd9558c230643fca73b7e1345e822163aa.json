{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport playlistService from \"../services/playlistService\"; // Import playlist service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Player() {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n\n  // Load playlist from service\n  useEffect(() => {\n    const tracks = playlistService.getPlaylist();\n    setPlaylist(tracks);\n  }, []);\n  useEffect(() => {\n    if (playlist.length === 0) return;\n    const audio = audioRef.current;\n    if (!audio) return;\n    audio.src = playlist[currentTrack].url; // Set correct track src\n    audio.load(); // Reloads the audio file\n\n    if (isPlaying) {\n      audio.play().catch(error => {\n        console.error(\"Playback failed:\", error);\n      });\n    }\n  }, [currentTrack]);\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play().catch(error => console.error(\"Error playing:\", error));\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const nextTrack = () => {\n    if (playlist.length === 0) return;\n    setCurrentTrack(prev => (prev + 1) % playlist.length);\n    setIsPlaying(true); // Auto-play next track\n  };\n\n  // Sync play/pause UI with actual audio element state\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n    audio.addEventListener(\"play\", handlePlay);\n    audio.addEventListener(\"pause\", handlePause);\n    return () => {\n      audio.removeEventListener(\"play\", handlePlay);\n      audio.removeEventListener(\"pause\", handlePause);\n    };\n  }, []);\n  if (playlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading playlist or no tracks available...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  const currentTrackInfo = playlist[currentTrack];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    style: {\n      backgroundImage: `url(${currentTrackInfo.artwork})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onEnded: nextTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTrackInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentTrackInfo.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlay,\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextTrack,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"91JxXmyBlR+lmuAPUh2BJtzcnQk=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","playlistService","jsxDEV","_jsxDEV","Player","_s","playlist","setPlaylist","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","audioRef","tracks","getPlaylist","length","audio","current","src","url","load","play","catch","error","console","togglePlay","pause","nextTrack","prev","handlePlay","handlePause","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","currentTrackInfo","className","style","backgroundImage","artwork","backgroundSize","backgroundPosition","ref","onEnded","title","artist","onClick","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport playlistService from \"../services/playlistService\"; // Import playlist service\n\nfunction Player() {\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n\n  // Load playlist from service\n  useEffect(() => {\n    const tracks = playlistService.getPlaylist();\n    setPlaylist(tracks);\n  }, []);\n\n  useEffect(() => {\n    if (playlist.length === 0) return;\n\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    audio.src = playlist[currentTrack].url; // Set correct track src\n    audio.load(); // Reloads the audio file\n\n    if (isPlaying) {\n      audio.play().catch((error) => {\n        console.error(\"Playback failed:\", error);\n      });\n    }\n  }, [currentTrack]);\n\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play().catch((error) => console.error(\"Error playing:\", error));\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const nextTrack = () => {\n    if (playlist.length === 0) return;\n\n    setCurrentTrack((prev) => (prev + 1) % playlist.length);\n    setIsPlaying(true); // Auto-play next track\n  };\n\n  // Sync play/pause UI with actual audio element state\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n\n    audio.addEventListener(\"play\", handlePlay);\n    audio.addEventListener(\"pause\", handlePause);\n\n    return () => {\n      audio.removeEventListener(\"play\", handlePlay);\n      audio.removeEventListener(\"pause\", handlePause);\n    };\n  }, []);\n\n  if (playlist.length === 0) {\n    return <p>Loading playlist or no tracks available...</p>;\n  }\n\n  const currentTrackInfo = playlist[currentTrack];\n\n  return (\n    <div\n      className=\"player-container\"\n      style={{\n        backgroundImage: `url(${currentTrackInfo.artwork})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <audio ref={audioRef} onEnded={nextTrack} />\n      \n      <div className=\"track-info\">\n        <h2>{currentTrackInfo.title}</h2>\n        <p>{currentTrackInfo.artist}</p>\n      </div>\n\n      <div className=\"player-controls\">\n        <button onClick={togglePlay}>\n          {isPlaying ? \"Pause\" : \"Play\"}\n        </button>\n        <button onClick={nextTrack}>Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}