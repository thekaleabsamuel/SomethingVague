{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/AuthSystem/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../../styles/auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setUser\n}) {\n  _s();\n  var _location$state, _location$state$from;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check if we were redirected from another page\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // For admin login\n      if (email === 'admin@radiostation.com' && password === 'admin123') {\n        const adminUser = {\n          email: 'admin@radiostation.com',\n          displayName: 'Admin',\n          isAdmin: true,\n          role: 'ADMIN'\n        };\n\n        // Generate a mock token for admin\n        const mockToken = 'admin_token_' + Date.now();\n        localStorage.setItem('token', mockToken);\n        localStorage.setItem('user', JSON.stringify(adminUser));\n        setUser(adminUser);\n        navigate('/profile');\n        return;\n      }\n\n      // For regular users\n      const response = await fetch('http://localhost:5001/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n\n      // Store both token and user data\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setUser(data.user);\n      navigate(from);\n    } catch (err) {\n      setError('Login failed: ' + (err.message || 'Unknown error'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"HLFa9giwmnBuaVkJH4kzW6+KQqQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","Login","setUser","_s","_location$state","_location$state$from","email","setEmail","password","setPassword","error","setError","navigate","location","from","state","pathname","handleLogin","e","preventDefault","adminUser","displayName","isAdmin","role","mockToken","Date","now","localStorage","setItem","JSON","stringify","response","fetch","method","headers","body","data","json","ok","Error","message","token","user","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/AuthSystem/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../../styles/auth.css';\n\nfunction Login({ setUser }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check if we were redirected from another page\n  const from = location.state?.from?.pathname || '/';\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // For admin login\n      if (email === 'admin@radiostation.com' && password === 'admin123') {\n        const adminUser = {\n          email: 'admin@radiostation.com',\n          displayName: 'Admin',\n          isAdmin: true,\n          role: 'ADMIN'\n        };\n        \n        // Generate a mock token for admin\n        const mockToken = 'admin_token_' + Date.now();\n        localStorage.setItem('token', mockToken);\n        localStorage.setItem('user', JSON.stringify(adminUser));\n        setUser(adminUser);\n        navigate('/profile');\n        return;\n      }\n\n      // For regular users\n      const response = await fetch('http://localhost:5001/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n\n      // Store both token and user data\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setUser(data.user);\n      navigate(from);\n    } catch (err) {\n      setError('Login failed: ' + (err.message || 'Unknown error'));\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <form onSubmit={handleLogin}>\n        <h2>Login</h2>\n        \n        {error && <p className=\"error-message\">{error}</p>}\n        \n        <input \n          type=\"email\" \n          placeholder=\"Email\" \n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required \n        />\n        <input \n          type=\"password\" \n          placeholder=\"Password\" \n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required \n        />\n        <button type=\"submit\">Login</button>\n        <p>Don't have an account? <a href=\"/register\">Register</a></p>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}