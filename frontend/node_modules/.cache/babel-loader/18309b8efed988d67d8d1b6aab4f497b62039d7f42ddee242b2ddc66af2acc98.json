{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport WaveSurfer from \"wavesurfer.js\"; // Import directly from wavesurfer.js instead of the React wrapper\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\nfunction Player({\n  user\n}) {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n  const [error, setError] = useState(null); // Track errors\n  const [progress, setProgress] = useState(0); // Keep progress tracking for bottom player\n  const [duration, setDuration] = useState(0); // Keep duration tracking\n  const [wavesurferInstance, setWavesurferInstance] = useState(null);\n  const audioRef = useRef(null);\n  const waveformRef = useRef(null);\n  const originalBodyStyleRef = useRef(null);\n  const location = useLocation(); // Get the current location object\n\n  // Determine if we are on the homepage\n  const isHomePage = location.pathname === '/';\n\n  // Helper to ensure correct path formatting\n  const getCleanPath = path => {\n    // Remove any public prefix if it exists\n    if (path.startsWith('public/')) {\n      path = path.replace('public/', '');\n    }\n    return path;\n  };\n\n  // --- Hooks ---\n  useEffect(() => {\n    /* Load Playlist */\n    try {\n      const tracks = playlistService.getPlaylist();\n      if (tracks && tracks.length > 0) {\n        // Clean up any path issues in the loaded tracks\n        const cleanedTracks = tracks.map(track => ({\n          ...track,\n          url: getCleanPath(track.url),\n          artwork: getCleanPath(track.artwork)\n        }));\n        console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n        setPlaylist(cleanedTracks);\n        setError(null);\n      } else {\n        console.error(\"No tracks returned from playlistService\");\n        setError(\"No tracks available\");\n      }\n    } catch (err) {\n      console.error(\"Error loading playlist:\", err);\n      setError(\"Failed to load playlist\");\n    }\n  }, []);\n\n  // Initialize WaveSurfer\n  useEffect(() => {\n    if (!isHomePage || !waveformRef.current) return;\n\n    // Cleanup previous instance if it exists\n    if (wavesurferInstance) {\n      wavesurferInstance.destroy();\n    }\n    console.log(\"Initializing WaveSurfer\");\n    const wavesurfer = WaveSurfer.create({\n      container: waveformRef.current,\n      waveColor: '#999',\n      progressColor: '#f50',\n      cursorColor: 'transparent',\n      barWidth: 2,\n      barHeight: 1,\n      responsive: true,\n      height: 80,\n      barGap: 2,\n      normalize: true,\n      partialRender: true,\n      hideScrollbar: true\n    });\n    wavesurfer.setMute(true); // Mute WaveSurfer since we're using the audio element for playback\n\n    // Load current track if available\n    if (playlist.length > 0 && currentTrackIndex >= 0) {\n      var _playlist$currentTrac;\n      const trackUrl = (_playlist$currentTrac = playlist[currentTrackIndex]) === null || _playlist$currentTrac === void 0 ? void 0 : _playlist$currentTrac.url;\n      if (trackUrl) {\n        console.log(\"Loading track into WaveSurfer:\", trackUrl);\n        wavesurfer.load(trackUrl);\n      }\n    }\n\n    // Handle WaveSurfer events\n    wavesurfer.on('ready', () => {\n      console.log('WaveSurfer is ready');\n      if (audioRef.current && audioRef.current.duration) {\n        const currentProgress = audioRef.current.currentTime / audioRef.current.duration;\n        wavesurfer.seekTo(currentProgress);\n      }\n\n      // Match play state with audio element\n      if (isPlaying) {\n        wavesurfer.play();\n      }\n    });\n    wavesurfer.on('error', err => {\n      console.error('WaveSurfer error:', err);\n    });\n\n    // Handle clicks on waveform to seek\n    wavesurfer.on('seek', function (position) {\n      if (audioRef.current && audioRef.current.duration) {\n        audioRef.current.currentTime = position * audioRef.current.duration;\n      }\n    });\n    setWavesurferInstance(wavesurfer);\n\n    // Cleanup on unmount\n    return () => {\n      if (wavesurfer) {\n        wavesurfer.destroy();\n      }\n    };\n  }, [isHomePage, playlist.length]); // Only recreate when homepage status changes or playlist loads\n\n  // Handle track changes in WaveSurfer\n  useEffect(() => {\n    var _playlist$currentTrac2;\n    if (!wavesurferInstance || !isHomePage || playlist.length === 0) return;\n    const trackUrl = (_playlist$currentTrac2 = playlist[currentTrackIndex]) === null || _playlist$currentTrac2 === void 0 ? void 0 : _playlist$currentTrac2.url;\n    if (trackUrl) {\n      console.log(\"Updating WaveSurfer track:\", trackUrl);\n      wavesurferInstance.load(trackUrl);\n\n      // Update play state\n      if (isPlaying) {\n        wavesurferInstance.play();\n      } else {\n        wavesurferInstance.pause();\n      }\n    }\n  }, [currentTrackIndex, isHomePage, wavesurferInstance, playlist]);\n\n  // Update WaveSurfer playback state\n  useEffect(() => {\n    if (!wavesurferInstance || !isHomePage) return;\n    if (isPlaying) {\n      wavesurferInstance.play();\n    } else {\n      wavesurferInstance.pause();\n    }\n  }, [isPlaying, wavesurferInstance, isHomePage]);\n  useEffect(() => {\n    /* Global Background Effect */\n    // Decide if this should ONLY run on the homepage\n    if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n      // Optional: Restore original body style if navigating away from home\n      if (!isHomePage && originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n      }\n      return; // Don't apply effect if not on home or not ready\n    }\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n    // Use artwork path directly \n    const artworkUrl = currentTrackInfo.artwork;\n    console.log(\"Setting background with artwork:\", artworkUrl);\n\n    // Store original styles if not already stored (only on homepage)\n    if (originalBodyStyleRef.current === null) {\n      originalBodyStyleRef.current = {\n        backgroundImage: document.body.style.backgroundImage,\n        backgroundSize: document.body.style.backgroundSize,\n        backgroundPosition: document.body.style.backgroundPosition,\n        backgroundAttachment: document.body.style.backgroundAttachment,\n        minHeight: document.body.style.minHeight\n        // transition: document.body.style.transition // Be careful storing transition\n      };\n    }\n    // Apply new styles\n    document.body.style.backgroundImage = `url(${artworkUrl})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.minHeight = '100vh';\n    document.body.style.transition = 'background-image 1s ease-in-out';\n\n    // Cleanup: Restore styles when navigating away *or* component unmounts\n    return () => {\n      if (originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n        // Optional: Reset ref if you want it re-captured if returning to home\n        // originalBodyStyleRef.current = null;\n      }\n    };\n    // Add isHomePage to dependencies\n  }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n  useEffect(() => {\n    /* Track Loading/Playback */\n    if (playlist.length === 0 || currentTrackIndex < 0) {\n      setIsLoading(true); // Set loading if no playlist/index\n      return;\n    }\n    const audio = audioRef.current;\n    if (!audio) return;\n    const track = playlist[currentTrackIndex];\n    if (!track || !track.url) {\n      console.error(\"Invalid track data:\", track);\n      setIsLoading(true);\n      setError(\"Invalid track data\");\n      return; // Skip if track data is invalid\n    }\n    setIsLoading(true); // Set loading when changing track\n    const trackUrl = track.url;\n    console.log(\"Loading audio track:\", trackUrl);\n    setError(null); // Clear any previous errors\n    setProgress(0); // Reset progress when changing tracks\n    setDuration(0); // Reset duration\n\n    // Set src only if it's different\n    if (!audio.src.endsWith(trackUrl)) {\n      audio.src = trackUrl;\n      audio.load(); // Load the new source\n    } else if (isPlaying && audio.paused) {\n      // If src is the same but we intend to play, try playing\n      audio.play().catch(e => {\n        console.error(\"Retry play error:\", e);\n        setError(\"Failed to play track\");\n      });\n    }\n    const handleCanPlay = () => {\n      console.log(\"Audio can play:\", trackUrl);\n      setIsLoading(false); // Ready to play this track\n      setIsPlayerReady(true); // Mark that the player has loaded at least once\n      setError(null); // Clear any errors since audio is playable\n      setDuration(audio.duration || 0); // Set duration when known\n      if (isPlaying) {\n        audio.play().catch(e => {\n          console.error(\"Autoplay error:\", e);\n          setError(\"Autoplay failed - try clicking play\");\n        });\n      }\n      // Clean up this specific listener once it fires\n      audio.removeEventListener('canplay', handleCanPlay);\n    };\n    const handleEnded = () => {\n      console.log(\"Track ended\");\n      setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n      // Playback will resume via the isPlaying state in the next canplay event\n    };\n    const handleTimeUpdate = () => {\n      if (audio.duration) {\n        const currentProgress = audio.currentTime / audio.duration * 100;\n        setProgress(currentProgress);\n\n        // Update wavesurfer progress if available\n        if (wavesurferInstance && isHomePage) {\n          wavesurferInstance.seekTo(audio.currentTime / audio.duration);\n        }\n      }\n    };\n    const handleDurationChange = () => {\n      setDuration(audio.duration || 0);\n    };\n\n    // Clear previous listeners before adding new ones for this track\n    audio.removeEventListener('canplay', handleCanPlay);\n    audio.removeEventListener('ended', handleEnded);\n    audio.removeEventListener('timeupdate', handleTimeUpdate);\n    audio.removeEventListener('durationchange', handleDurationChange);\n    audio.addEventListener('canplay', handleCanPlay);\n    audio.addEventListener('ended', handleEnded);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('durationchange', handleDurationChange);\n    return () => {\n      // Cleanup listeners when track changes or component unmounts\n      audio.removeEventListener('canplay', handleCanPlay);\n      audio.removeEventListener('ended', handleEnded);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('durationchange', handleDurationChange);\n    };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n  }, [currentTrackIndex, playlist, isPlaying, wavesurferInstance, isHomePage]);\n  useEffect(() => {\n    /* Audio State Sync Events */\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => {\n      setIsPlaying(true);\n    };\n    const handlePause = () => {\n      setIsPlaying(false);\n    };\n    const handleError = e => {\n      var _playlist$currentTrac3, _playlist$currentTrac4;\n      console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n      setIsLoading(false); // Stop loading on error\n      setIsPlaying(false);\n      setError(`Error playing track: ${(_playlist$currentTrac3 = playlist[currentTrackIndex]) === null || _playlist$currentTrac3 === void 0 ? void 0 : _playlist$currentTrac3.title} - file may be missing at path: ${(_playlist$currentTrac4 = playlist[currentTrackIndex]) === null || _playlist$currentTrac4 === void 0 ? void 0 : _playlist$currentTrac4.url}`);\n    };\n\n    // Set initial state based on audio element (covers browser controls)\n    setIsPlaying(!audio.paused);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('error', handleError);\n    return () => {\n      // Cleanup on unmount\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('error', handleError);\n    };\n  }, [playlist.length, currentTrackIndex]);\n\n  // --- Control Functions ---\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n    if (audio.paused) {\n      // We set isPlaying to true, the effect hook will handle the actual audio.play()\n      setIsPlaying(true);\n      audio.play().catch(error => {\n        console.error(\"Playback error:\", error);\n        setIsPlaying(false);\n        setError(\"Failed to play audio\");\n      }); // Also try direct play\n    } else {\n      audio.pause();\n      setIsPlaying(false); // Immediately reflect pause intent\n    }\n  };\n\n  // For next/prev track in bottom player\n  const playNextTrack = () => {\n    setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n  };\n  const playPreviousTrack = () => {\n    setCurrentTrackIndex(prev => prev === 0 ? playlist.length - 1 : prev - 1);\n  };\n\n  // Format time function for displaying current time and duration\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // --- Render Logic ---\n\n  // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n  const audioTag = /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    preload: \"metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 22\n  }, this);\n\n  // Handle loading state and errors\n  if (error && playlist.length === 0) {\n    // Critical error - no playlist available\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Reload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // Don't render full UI until the player has loaded something\n  if (!isPlayerReady && isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-loading\",\n        children: \"Loading Radio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // We have a playlist and player is ready, get current track info\n  const currentTrackInfo = playlist[currentTrackIndex];\n  if (!currentTrackInfo) {\n    // Handle case where index might be invalid temporarily\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No track selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // All good, display the track info\n  const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n  const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n\n  // --- Conditional UI Rendering ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [audioTag, \" \", isHomePage ?\n    /*#__PURE__*/\n    // --- Main Player UI on HomePage (more like original with waveform) ---\n    _jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-ui-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 39\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-overlay\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-artwork\",\n          style: {\n            backgroundImage: `url(${artworkUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-track-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 57\n          }, this), currentTrackInfo.scheduledTime && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"scheduled-time\",\n            children: [\"Scheduled: \", new Date(currentTrackInfo.scheduledTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-waveform-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: waveformRef,\n            className: \"waveform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls-centered\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-button-placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlay,\n            disabled: isLoading,\n            className: \"control-button play-pause-main\",\n            \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n            children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-button-placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-time\",\n          children: [formatTime(currentTime), \" / Live Radio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-comment-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"player-comment-title\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          user: user,\n          currentTrack: currentTrackInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n    _jsxDEV(\"div\", {\n      className: \"bottom-player-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artworkUrl,\n          alt: \"\",\n          className: \"bottom-player-artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-title\",\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-artist\",\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 57\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPreviousTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Previous track\",\n          children: \"\\u23EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          disabled: isLoading,\n          className: \"bottom-player-playpause\",\n          \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n          children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNextTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Next track\",\n          children: \"\\u23ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"xqLok8X7A83MvGWNoRwBqKOJXTQ=\", false, function () {\n  return [useLocation];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useLocation","playlistService","CommentSection","WaveSurfer","jsxDEV","_jsxDEV","Fragment","_Fragment","WAVEFORM_PLACEHOLDER","Player","user","_s","playlist","setPlaylist","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","isLoading","setIsLoading","isPlayerReady","setIsPlayerReady","error","setError","progress","setProgress","duration","setDuration","wavesurferInstance","setWavesurferInstance","audioRef","waveformRef","originalBodyStyleRef","location","isHomePage","pathname","getCleanPath","path","startsWith","replace","tracks","getPlaylist","length","cleanedTracks","map","track","url","artwork","console","log","err","current","destroy","wavesurfer","create","container","waveColor","progressColor","cursorColor","barWidth","barHeight","responsive","height","barGap","normalize","partialRender","hideScrollbar","setMute","_playlist$currentTrac","trackUrl","load","on","currentProgress","currentTime","seekTo","play","position","_playlist$currentTrac2","pause","Object","assign","document","body","style","currentTrackInfo","artworkUrl","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","transition","audio","src","endsWith","paused","catch","e","handleCanPlay","removeEventListener","handleEnded","prev","handleTimeUpdate","handleDurationChange","addEventListener","handlePlay","handlePause","handleError","_playlist$currentTrac3","_playlist$currentTrac4","title","togglePlay","playNextTrack","playPreviousTrack","formatTime","seconds","mins","Math","floor","secs","audioTag","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","window","reload","artist","scheduledTime","Date","toLocaleString","disabled","currentTrack","width","alt","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport WaveSurfer from \"wavesurfer.js\"; // Import directly from wavesurfer.js instead of the React wrapper\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\n\nfunction Player({ user }) {\n    const [playlist, setPlaylist] = useState([]);\n    const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n    const [error, setError] = useState(null); // Track errors\n    const [progress, setProgress] = useState(0); // Keep progress tracking for bottom player\n    const [duration, setDuration] = useState(0); // Keep duration tracking\n    const [wavesurferInstance, setWavesurferInstance] = useState(null);\n    const audioRef = useRef(null);\n    const waveformRef = useRef(null);\n    const originalBodyStyleRef = useRef(null);\n    const location = useLocation(); // Get the current location object\n\n    // Determine if we are on the homepage\n    const isHomePage = location.pathname === '/';\n\n    // Helper to ensure correct path formatting\n    const getCleanPath = (path) => {\n        // Remove any public prefix if it exists\n        if (path.startsWith('public/')) {\n            path = path.replace('public/', '');\n        }\n        return path;\n    };\n\n    // --- Hooks ---\n    useEffect(() => { /* Load Playlist */\n        try {\n            const tracks = playlistService.getPlaylist();\n            if (tracks && tracks.length > 0) {\n                // Clean up any path issues in the loaded tracks\n                const cleanedTracks = tracks.map(track => ({\n                    ...track,\n                    url: getCleanPath(track.url),\n                    artwork: getCleanPath(track.artwork)\n                }));\n                \n                console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n                setPlaylist(cleanedTracks);\n                setError(null);\n            } else {\n                console.error(\"No tracks returned from playlistService\");\n                setError(\"No tracks available\");\n            }\n        } catch (err) {\n            console.error(\"Error loading playlist:\", err);\n            setError(\"Failed to load playlist\");\n        }\n    }, []);\n\n    // Initialize WaveSurfer\n    useEffect(() => {\n        if (!isHomePage || !waveformRef.current) return;\n        \n        // Cleanup previous instance if it exists\n        if (wavesurferInstance) {\n            wavesurferInstance.destroy();\n        }\n        \n        console.log(\"Initializing WaveSurfer\");\n        \n        const wavesurfer = WaveSurfer.create({\n            container: waveformRef.current,\n            waveColor: '#999',\n            progressColor: '#f50',\n            cursorColor: 'transparent',\n            barWidth: 2,\n            barHeight: 1,\n            responsive: true,\n            height: 80,\n            barGap: 2,\n            normalize: true,\n            partialRender: true,\n            hideScrollbar: true\n        });\n        \n        wavesurfer.setMute(true); // Mute WaveSurfer since we're using the audio element for playback\n        \n        // Load current track if available\n        if (playlist.length > 0 && currentTrackIndex >= 0) {\n            const trackUrl = playlist[currentTrackIndex]?.url;\n            if (trackUrl) {\n                console.log(\"Loading track into WaveSurfer:\", trackUrl);\n                wavesurfer.load(trackUrl);\n            }\n        }\n        \n        // Handle WaveSurfer events\n        wavesurfer.on('ready', () => {\n            console.log('WaveSurfer is ready');\n            if (audioRef.current && audioRef.current.duration) {\n                const currentProgress = (audioRef.current.currentTime / audioRef.current.duration);\n                wavesurfer.seekTo(currentProgress);\n            }\n            \n            // Match play state with audio element\n            if (isPlaying) {\n                wavesurfer.play();\n            }\n        });\n        \n        wavesurfer.on('error', err => {\n            console.error('WaveSurfer error:', err);\n        });\n        \n        // Handle clicks on waveform to seek\n        wavesurfer.on('seek', function(position) {\n            if (audioRef.current && audioRef.current.duration) {\n                audioRef.current.currentTime = position * audioRef.current.duration;\n            }\n        });\n        \n        setWavesurferInstance(wavesurfer);\n        \n        // Cleanup on unmount\n        return () => {\n            if (wavesurfer) {\n                wavesurfer.destroy();\n            }\n        };\n    }, [isHomePage, playlist.length]); // Only recreate when homepage status changes or playlist loads\n\n    // Handle track changes in WaveSurfer\n    useEffect(() => {\n        if (!wavesurferInstance || !isHomePage || playlist.length === 0) return;\n        \n        const trackUrl = playlist[currentTrackIndex]?.url;\n        if (trackUrl) {\n            console.log(\"Updating WaveSurfer track:\", trackUrl);\n            wavesurferInstance.load(trackUrl);\n            \n            // Update play state\n            if (isPlaying) {\n                wavesurferInstance.play();\n            } else {\n                wavesurferInstance.pause();\n            }\n        }\n    }, [currentTrackIndex, isHomePage, wavesurferInstance, playlist]);\n\n    // Update WaveSurfer playback state\n    useEffect(() => {\n        if (!wavesurferInstance || !isHomePage) return;\n        \n        if (isPlaying) {\n            wavesurferInstance.play();\n        } else {\n            wavesurferInstance.pause();\n        }\n    }, [isPlaying, wavesurferInstance, isHomePage]);\n\n    useEffect(() => { /* Global Background Effect */\n        // Decide if this should ONLY run on the homepage\n        if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n            // Optional: Restore original body style if navigating away from home\n             if (!isHomePage && originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n             }\n            return; // Don't apply effect if not on home or not ready\n        }\n\n        const currentTrackInfo = playlist[currentTrackIndex];\n        if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n        // Use artwork path directly \n        const artworkUrl = currentTrackInfo.artwork;\n        console.log(\"Setting background with artwork:\", artworkUrl);\n\n        // Store original styles if not already stored (only on homepage)\n        if (originalBodyStyleRef.current === null) {\n             originalBodyStyleRef.current = {\n                backgroundImage: document.body.style.backgroundImage,\n                backgroundSize: document.body.style.backgroundSize,\n                backgroundPosition: document.body.style.backgroundPosition,\n                backgroundAttachment: document.body.style.backgroundAttachment,\n                minHeight: document.body.style.minHeight,\n                // transition: document.body.style.transition // Be careful storing transition\n            };\n        }\n        // Apply new styles\n        document.body.style.backgroundImage = `url(${artworkUrl})`;\n        document.body.style.backgroundSize = 'cover';\n        document.body.style.backgroundPosition = 'center center';\n        document.body.style.backgroundAttachment = 'fixed';\n        document.body.style.minHeight = '100vh';\n        document.body.style.transition = 'background-image 1s ease-in-out';\n\n        // Cleanup: Restore styles when navigating away *or* component unmounts\n        return () => {\n             if (originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n                 // Optional: Reset ref if you want it re-captured if returning to home\n                 // originalBodyStyleRef.current = null;\n             }\n         };\n    // Add isHomePage to dependencies\n    }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n\n    useEffect(() => { /* Track Loading/Playback */\n        if (playlist.length === 0 || currentTrackIndex < 0) {\n            setIsLoading(true); // Set loading if no playlist/index\n            return;\n        }\n\n        const audio = audioRef.current; if (!audio) return;\n        const track = playlist[currentTrackIndex];\n        if (!track || !track.url) {\n            console.error(\"Invalid track data:\", track);\n            setIsLoading(true);\n            setError(\"Invalid track data\");\n            return; // Skip if track data is invalid\n        }\n\n        setIsLoading(true); // Set loading when changing track\n        const trackUrl = track.url;\n        console.log(\"Loading audio track:\", trackUrl);\n        \n        setError(null); // Clear any previous errors\n        setProgress(0); // Reset progress when changing tracks\n        setDuration(0); // Reset duration\n\n        // Set src only if it's different\n        if (!audio.src.endsWith(trackUrl)) {\n            audio.src = trackUrl;\n            audio.load(); // Load the new source\n        } else if (isPlaying && audio.paused) {\n             // If src is the same but we intend to play, try playing\n            audio.play().catch(e => {\n                console.error(\"Retry play error:\", e);\n                setError(\"Failed to play track\");\n            });\n        }\n\n        const handleCanPlay = () => {\n            console.log(\"Audio can play:\", trackUrl);\n            setIsLoading(false); // Ready to play this track\n            setIsPlayerReady(true); // Mark that the player has loaded at least once\n            setError(null); // Clear any errors since audio is playable\n            setDuration(audio.duration || 0); // Set duration when known\n             if (isPlaying) {\n                 audio.play().catch(e => {\n                     console.error(\"Autoplay error:\", e);\n                     setError(\"Autoplay failed - try clicking play\");\n                 });\n             }\n             // Clean up this specific listener once it fires\n             audio.removeEventListener('canplay', handleCanPlay);\n        };\n\n        const handleEnded = () => {\n            console.log(\"Track ended\");\n            setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n            // Playback will resume via the isPlaying state in the next canplay event\n        };\n\n        const handleTimeUpdate = () => {\n            if (audio.duration) {\n                const currentProgress = (audio.currentTime / audio.duration) * 100;\n                setProgress(currentProgress);\n                \n                // Update wavesurfer progress if available\n                if (wavesurferInstance && isHomePage) {\n                    wavesurferInstance.seekTo(audio.currentTime / audio.duration);\n                }\n            }\n        };\n\n        const handleDurationChange = () => {\n            setDuration(audio.duration || 0);\n        };\n\n        // Clear previous listeners before adding new ones for this track\n        audio.removeEventListener('canplay', handleCanPlay);\n        audio.removeEventListener('ended', handleEnded);\n        audio.removeEventListener('timeupdate', handleTimeUpdate);\n        audio.removeEventListener('durationchange', handleDurationChange);\n\n        audio.addEventListener('canplay', handleCanPlay);\n        audio.addEventListener('ended', handleEnded);\n        audio.addEventListener('timeupdate', handleTimeUpdate);\n        audio.addEventListener('durationchange', handleDurationChange);\n\n        return () => { // Cleanup listeners when track changes or component unmounts\n            audio.removeEventListener('canplay', handleCanPlay);\n            audio.removeEventListener('ended', handleEnded);\n            audio.removeEventListener('timeupdate', handleTimeUpdate);\n            audio.removeEventListener('durationchange', handleDurationChange);\n        };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n    }, [currentTrackIndex, playlist, isPlaying, wavesurferInstance, isHomePage]);\n\n\n    useEffect(() => { /* Audio State Sync Events */\n        const audio = audioRef.current; if (!audio) return;\n\n        const handlePlay = () => {\n            setIsPlaying(true);\n        };\n        \n        const handlePause = () => {\n            setIsPlaying(false);\n        };\n        \n        const handleError = (e) => {\n            console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n            setIsLoading(false); // Stop loading on error\n            setIsPlaying(false);\n            setError(`Error playing track: ${playlist[currentTrackIndex]?.title} - file may be missing at path: ${playlist[currentTrackIndex]?.url}`);\n        };\n\n        // Set initial state based on audio element (covers browser controls)\n        setIsPlaying(!audio.paused);\n\n        audio.addEventListener('play', handlePlay);\n        audio.addEventListener('pause', handlePause);\n        audio.addEventListener('error', handleError);\n\n        return () => { // Cleanup on unmount\n            audio.removeEventListener('play', handlePlay);\n            audio.removeEventListener('pause', handlePause);\n            audio.removeEventListener('error', handleError);\n        };\n    }, [playlist.length, currentTrackIndex]); \n\n    // --- Control Functions ---\n    const togglePlay = () => {\n        const audio = audioRef.current;\n        if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n        if (audio.paused) {\n             // We set isPlaying to true, the effect hook will handle the actual audio.play()\n            setIsPlaying(true);\n            audio.play().catch(error => { \n                console.error(\"Playback error:\", error); \n                setIsPlaying(false); \n                setError(\"Failed to play audio\");\n            }); // Also try direct play\n        } else {\n            audio.pause();\n            setIsPlaying(false); // Immediately reflect pause intent\n        }\n    };\n\n    // For next/prev track in bottom player\n    const playNextTrack = () => {\n        setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    const playPreviousTrack = () => {\n        setCurrentTrackIndex(prev => \n            prev === 0 ? playlist.length - 1 : prev - 1\n        );\n    };\n\n    // Format time function for displaying current time and duration\n    const formatTime = (seconds) => {\n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n    };\n\n    // --- Render Logic ---\n\n    // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n    const audioTag = <audio ref={audioRef} preload=\"metadata\" />;\n\n    // Handle loading state and errors\n    if (error && playlist.length === 0) {\n        // Critical error - no playlist available\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>{error}</p>\n                    <button onClick={() => window.location.reload()}>Reload Page</button>\n                </div>\n            </>\n        );\n    }\n\n    // Don't render full UI until the player has loaded something\n    if (!isPlayerReady && isLoading) {\n        return (\n            <>\n                {audioTag}\n                <div className=\"initial-loading\">Loading Radio...</div>\n            </>\n        );\n    }\n\n    // We have a playlist and player is ready, get current track info\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo) {\n        // Handle case where index might be invalid temporarily\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>No track selected</p>\n                </div>\n            </>\n        );\n    }\n\n    // All good, display the track info\n    const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n    const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n\n    // --- Conditional UI Rendering ---\n    return (\n        <>\n            {audioTag} {/* Audio tag is always rendered */}\n\n            {isHomePage ? (\n                // --- Main Player UI on HomePage (more like original with waveform) ---\n                <div className=\"player-container\">\n                    <div className=\"player-ui-container\">\n                        {isLoading && <div className=\"loading-overlay\">Loading...</div>}\n                        {error && <div className=\"error-overlay\">{error}</div>}\n                        \n                        {/* Centered artwork section */}\n                        <div \n                            className=\"player-artwork\"\n                            style={{ backgroundImage: `url(${artworkUrl})` }}\n                        ></div>\n                        \n                        <div className=\"player-track-details\">\n                            <h2>{currentTrackInfo.title}</h2>\n                            {currentTrackInfo.artist && <p>{currentTrackInfo.artist}</p>}\n                            \n                            {/* Add scheduled time display if available */}\n                            {currentTrackInfo.scheduledTime && (\n                                <p className=\"scheduled-time\">\n                                    Scheduled: {new Date(currentTrackInfo.scheduledTime).toLocaleString()}\n                                </p>\n                            )}\n                        </div>\n                        \n                        {/* Waveform visualization with native WaveSurfer */}\n                        <div className=\"player-waveform-container\">\n                            <div ref={waveformRef} className=\"waveform\"></div>\n                        </div>\n                        \n                        <div className=\"player-controls-centered\">\n                            <div className=\"control-button-placeholder\"></div>\n                            <button onClick={togglePlay} disabled={isLoading} className=\"control-button play-pause-main\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                                {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                            </button>\n                            <div className=\"control-button-placeholder\"></div>\n                        </div>\n                        \n                        {/* Time display */}\n                        <div className=\"player-time\">\n                            {formatTime(currentTime)} / Live Radio\n                        </div>\n                    </div>\n                    \n                    {/* Comment section below the player */}\n                    <div className=\"player-comment-section\">\n                        <div className=\"player-comment-header\">\n                            <h3 className=\"player-comment-title\">Comments</h3>\n                        </div>\n                        <CommentSection user={user} currentTrack={currentTrackInfo} />\n                    </div>\n                </div>\n            ) : (\n                // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n                <div className=\"bottom-player-bar\">\n                    {/* Progress bar at the top */}\n                    <div \n                        className=\"bottom-player-progress\" \n                        style={{ width: `${progress}%` }}\n                    ></div>\n                    \n                    <div className=\"bottom-player-left\">\n                        <img src={artworkUrl} alt=\"\" className=\"bottom-player-artwork\" />\n                        <div className=\"bottom-player-info\">\n                            <div className=\"bottom-player-title\">{currentTrackInfo.title}</div>\n                            {currentTrackInfo.artist && <div className=\"bottom-player-artist\">{currentTrackInfo.artist}</div>}\n                            {error && <div className=\"bottom-player-error\">{error}</div>}\n                        </div>\n                    </div>\n                    <div className=\"bottom-player-controls\">\n                        <button onClick={playPreviousTrack} className=\"bottom-player-prevnext\" aria-label=\"Previous track\">\n                            ⏮\n                        </button>\n                        <button onClick={togglePlay} disabled={isLoading} className=\"bottom-player-playpause\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                            {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                        </button>\n                        <button onClick={playNextTrack} className=\"bottom-player-prevnext\" aria-label=\"Next track\">\n                            ⏭\n                        </button>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Player;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAC/C,OAAOC,UAAU,MAAM,eAAe,CAAC,CAAC;AACxC,OAAO,sBAAsB,CAAC,CAAC;AAC/B,OAAO,+BAA+B,CAAC,CAAC;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,oBAAoB,GAAG,iCAAiC;AAE9D,SAASC,MAAMA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAMkC,QAAQ,GAAGjC,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMkC,WAAW,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMmC,oBAAoB,GAAGnC,MAAM,CAAC,IAAI,CAAC;EACzC,MAAMoC,QAAQ,GAAGjC,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMkC,UAAU,GAAGD,QAAQ,CAACE,QAAQ,KAAK,GAAG;;EAE5C;EACA,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC3B;IACA,IAAIA,IAAI,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;MAC5BD,IAAI,GAAGA,IAAI,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IACtC;IACA,OAAOF,IAAI;EACf,CAAC;;EAED;EACAvC,SAAS,CAAC,MAAM;IAAE;IACd,IAAI;MACA,MAAM0C,MAAM,GAAGvC,eAAe,CAACwC,WAAW,CAAC,CAAC;MAC5C,IAAID,MAAM,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;QAC7B;QACA,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAG,CAACC,KAAK,KAAK;UACvC,GAAGA,KAAK;UACRC,GAAG,EAAEV,YAAY,CAACS,KAAK,CAACC,GAAG,CAAC;UAC5BC,OAAO,EAAEX,YAAY,CAACS,KAAK,CAACE,OAAO;QACvC,CAAC,CAAC,CAAC;QAEHC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,aAAa,CAACD,MAAM,EAAE,QAAQ,EAAEC,aAAa,CAAC;QAC9E9B,WAAW,CAAC8B,aAAa,CAAC;QAC1BpB,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACHyB,OAAO,CAAC1B,KAAK,CAAC,yCAAyC,CAAC;QACxDC,QAAQ,CAAC,qBAAqB,CAAC;MACnC;IACJ,CAAC,CAAC,OAAO2B,GAAG,EAAE;MACVF,OAAO,CAAC1B,KAAK,CAAC,yBAAyB,EAAE4B,GAAG,CAAC;MAC7C3B,QAAQ,CAAC,yBAAyB,CAAC;IACvC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACoC,UAAU,IAAI,CAACH,WAAW,CAACoB,OAAO,EAAE;;IAEzC;IACA,IAAIvB,kBAAkB,EAAE;MACpBA,kBAAkB,CAACwB,OAAO,CAAC,CAAC;IAChC;IAEAJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAEtC,MAAMI,UAAU,GAAGlD,UAAU,CAACmD,MAAM,CAAC;MACjCC,SAAS,EAAExB,WAAW,CAACoB,OAAO;MAC9BK,SAAS,EAAE,MAAM;MACjBC,aAAa,EAAE,MAAM;MACrBC,WAAW,EAAE,aAAa;MAC1BC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,CAAC;MACTC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE,IAAI;MACnBC,aAAa,EAAE;IACnB,CAAC,CAAC;IAEFb,UAAU,CAACc,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;;IAE1B;IACA,IAAIvD,QAAQ,CAAC8B,MAAM,GAAG,CAAC,IAAI5B,iBAAiB,IAAI,CAAC,EAAE;MAAA,IAAAsD,qBAAA;MAC/C,MAAMC,QAAQ,IAAAD,qBAAA,GAAGxD,QAAQ,CAACE,iBAAiB,CAAC,cAAAsD,qBAAA,uBAA3BA,qBAAA,CAA6BtB,GAAG;MACjD,IAAIuB,QAAQ,EAAE;QACVrB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEoB,QAAQ,CAAC;QACvDhB,UAAU,CAACiB,IAAI,CAACD,QAAQ,CAAC;MAC7B;IACJ;;IAEA;IACAhB,UAAU,CAACkB,EAAE,CAAC,OAAO,EAAE,MAAM;MACzBvB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,IAAInB,QAAQ,CAACqB,OAAO,IAAIrB,QAAQ,CAACqB,OAAO,CAACzB,QAAQ,EAAE;QAC/C,MAAM8C,eAAe,GAAI1C,QAAQ,CAACqB,OAAO,CAACsB,WAAW,GAAG3C,QAAQ,CAACqB,OAAO,CAACzB,QAAS;QAClF2B,UAAU,CAACqB,MAAM,CAACF,eAAe,CAAC;MACtC;;MAEA;MACA,IAAIxD,SAAS,EAAE;QACXqC,UAAU,CAACsB,IAAI,CAAC,CAAC;MACrB;IACJ,CAAC,CAAC;IAEFtB,UAAU,CAACkB,EAAE,CAAC,OAAO,EAAErB,GAAG,IAAI;MAC1BF,OAAO,CAAC1B,KAAK,CAAC,mBAAmB,EAAE4B,GAAG,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACAG,UAAU,CAACkB,EAAE,CAAC,MAAM,EAAE,UAASK,QAAQ,EAAE;MACrC,IAAI9C,QAAQ,CAACqB,OAAO,IAAIrB,QAAQ,CAACqB,OAAO,CAACzB,QAAQ,EAAE;QAC/CI,QAAQ,CAACqB,OAAO,CAACsB,WAAW,GAAGG,QAAQ,GAAG9C,QAAQ,CAACqB,OAAO,CAACzB,QAAQ;MACvE;IACJ,CAAC,CAAC;IAEFG,qBAAqB,CAACwB,UAAU,CAAC;;IAEjC;IACA,OAAO,MAAM;MACT,IAAIA,UAAU,EAAE;QACZA,UAAU,CAACD,OAAO,CAAC,CAAC;MACxB;IACJ,CAAC;EACL,CAAC,EAAE,CAAClB,UAAU,EAAEtB,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEnC;EACA5C,SAAS,CAAC,MAAM;IAAA,IAAA+E,sBAAA;IACZ,IAAI,CAACjD,kBAAkB,IAAI,CAACM,UAAU,IAAItB,QAAQ,CAAC8B,MAAM,KAAK,CAAC,EAAE;IAEjE,MAAM2B,QAAQ,IAAAQ,sBAAA,GAAGjE,QAAQ,CAACE,iBAAiB,CAAC,cAAA+D,sBAAA,uBAA3BA,sBAAA,CAA6B/B,GAAG;IACjD,IAAIuB,QAAQ,EAAE;MACVrB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEoB,QAAQ,CAAC;MACnDzC,kBAAkB,CAAC0C,IAAI,CAACD,QAAQ,CAAC;;MAEjC;MACA,IAAIrD,SAAS,EAAE;QACXY,kBAAkB,CAAC+C,IAAI,CAAC,CAAC;MAC7B,CAAC,MAAM;QACH/C,kBAAkB,CAACkD,KAAK,CAAC,CAAC;MAC9B;IACJ;EACJ,CAAC,EAAE,CAAChE,iBAAiB,EAAEoB,UAAU,EAAEN,kBAAkB,EAAEhB,QAAQ,CAAC,CAAC;;EAEjE;EACAd,SAAS,CAAC,MAAM;IACZ,IAAI,CAAC8B,kBAAkB,IAAI,CAACM,UAAU,EAAE;IAExC,IAAIlB,SAAS,EAAE;MACXY,kBAAkB,CAAC+C,IAAI,CAAC,CAAC;IAC7B,CAAC,MAAM;MACH/C,kBAAkB,CAACkD,KAAK,CAAC,CAAC;IAC9B;EACJ,CAAC,EAAE,CAAC9D,SAAS,EAAEY,kBAAkB,EAAEM,UAAU,CAAC,CAAC;EAE/CpC,SAAS,CAAC,MAAM;IAAE;IACd;IACA,IAAI,CAACoC,UAAU,IAAItB,QAAQ,CAAC8B,MAAM,KAAK,CAAC,IAAIxB,SAAS,IAAIJ,iBAAiB,GAAG,CAAC,EAAE;MAC5E;MACC,IAAI,CAACoB,UAAU,IAAIF,oBAAoB,CAACmB,OAAO,EAAE;QAC7C4B,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAEnD,oBAAoB,CAACmB,OAAO,CAAC;MACpE;MACD,OAAO,CAAC;IACZ;IAEA,MAAMiC,gBAAgB,GAAGxE,QAAQ,CAACE,iBAAiB,CAAC;IACpD,IAAI,CAACsE,gBAAgB,IAAI,CAACA,gBAAgB,CAACrC,OAAO,EAAE,OAAO,CAAC;;IAE5D;IACA,MAAMsC,UAAU,GAAGD,gBAAgB,CAACrC,OAAO;IAC3CC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEoC,UAAU,CAAC;;IAE3D;IACA,IAAIrD,oBAAoB,CAACmB,OAAO,KAAK,IAAI,EAAE;MACtCnB,oBAAoB,CAACmB,OAAO,GAAG;QAC5BmC,eAAe,EAAEL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,eAAe;QACpDC,cAAc,EAAEN,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACI,cAAc;QAClDC,kBAAkB,EAAEP,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACK,kBAAkB;QAC1DC,oBAAoB,EAAER,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACM,oBAAoB;QAC9DC,SAAS,EAAET,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACO;QAC/B;MACJ,CAAC;IACL;IACA;IACAT,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,eAAe,GAAG,OAAOD,UAAU,GAAG;IAC1DJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACI,cAAc,GAAG,OAAO;IAC5CN,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACK,kBAAkB,GAAG,eAAe;IACxDP,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACM,oBAAoB,GAAG,OAAO;IAClDR,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACO,SAAS,GAAG,OAAO;IACvCT,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACQ,UAAU,GAAG,iCAAiC;;IAElE;IACA,OAAO,MAAM;MACR,IAAI3D,oBAAoB,CAACmB,OAAO,EAAE;QAC9B4B,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAEnD,oBAAoB,CAACmB,OAAO,CAAC;QAChE;QACA;MACJ;IACJ,CAAC;IACN;EACA,CAAC,EAAE,CAACrC,iBAAiB,EAAEF,QAAQ,EAAEM,SAAS,EAAEgB,UAAU,CAAC,CAAC;EAExDpC,SAAS,CAAC,MAAM;IAAE;IACd,IAAIc,QAAQ,CAAC8B,MAAM,KAAK,CAAC,IAAI5B,iBAAiB,GAAG,CAAC,EAAE;MAChDK,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB;IACJ;IAEA,MAAMyE,KAAK,GAAG9D,QAAQ,CAACqB,OAAO;IAAE,IAAI,CAACyC,KAAK,EAAE;IAC5C,MAAM/C,KAAK,GAAGjC,QAAQ,CAACE,iBAAiB,CAAC;IACzC,IAAI,CAAC+B,KAAK,IAAI,CAACA,KAAK,CAACC,GAAG,EAAE;MACtBE,OAAO,CAAC1B,KAAK,CAAC,qBAAqB,EAAEuB,KAAK,CAAC;MAC3C1B,YAAY,CAAC,IAAI,CAAC;MAClBI,QAAQ,CAAC,oBAAoB,CAAC;MAC9B,OAAO,CAAC;IACZ;IAEAJ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,MAAMkD,QAAQ,GAAGxB,KAAK,CAACC,GAAG;IAC1BE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEoB,QAAQ,CAAC;IAE7C9C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChBE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAChBE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEhB;IACA,IAAI,CAACiE,KAAK,CAACC,GAAG,CAACC,QAAQ,CAACzB,QAAQ,CAAC,EAAE;MAC/BuB,KAAK,CAACC,GAAG,GAAGxB,QAAQ;MACpBuB,KAAK,CAACtB,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM,IAAItD,SAAS,IAAI4E,KAAK,CAACG,MAAM,EAAE;MACjC;MACDH,KAAK,CAACjB,IAAI,CAAC,CAAC,CAACqB,KAAK,CAACC,CAAC,IAAI;QACpBjD,OAAO,CAAC1B,KAAK,CAAC,mBAAmB,EAAE2E,CAAC,CAAC;QACrC1E,QAAQ,CAAC,sBAAsB,CAAC;MACpC,CAAC,CAAC;IACN;IAEA,MAAM2E,aAAa,GAAGA,CAAA,KAAM;MACxBlD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEoB,QAAQ,CAAC;MACxClD,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACrBE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;MACxBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChBI,WAAW,CAACiE,KAAK,CAAClE,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;MACjC,IAAIV,SAAS,EAAE;QACX4E,KAAK,CAACjB,IAAI,CAAC,CAAC,CAACqB,KAAK,CAACC,CAAC,IAAI;UACpBjD,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,EAAE2E,CAAC,CAAC;UACnC1E,QAAQ,CAAC,qCAAqC,CAAC;QACnD,CAAC,CAAC;MACN;MACA;MACAqE,KAAK,CAACO,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;IACxD,CAAC;IAED,MAAME,WAAW,GAAGA,CAAA,KAAM;MACtBpD,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BlC,oBAAoB,CAACsF,IAAI,IAAI,CAACA,IAAI,GAAG,CAAC,IAAIzF,QAAQ,CAAC8B,MAAM,CAAC;MAC1D;IACJ,CAAC;IAED,MAAM4D,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,IAAIV,KAAK,CAAClE,QAAQ,EAAE;QAChB,MAAM8C,eAAe,GAAIoB,KAAK,CAACnB,WAAW,GAAGmB,KAAK,CAAClE,QAAQ,GAAI,GAAG;QAClED,WAAW,CAAC+C,eAAe,CAAC;;QAE5B;QACA,IAAI5C,kBAAkB,IAAIM,UAAU,EAAE;UAClCN,kBAAkB,CAAC8C,MAAM,CAACkB,KAAK,CAACnB,WAAW,GAAGmB,KAAK,CAAClE,QAAQ,CAAC;QACjE;MACJ;IACJ,CAAC;IAED,MAAM6E,oBAAoB,GAAGA,CAAA,KAAM;MAC/B5E,WAAW,CAACiE,KAAK,CAAClE,QAAQ,IAAI,CAAC,CAAC;IACpC,CAAC;;IAED;IACAkE,KAAK,CAACO,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;IACnDN,KAAK,CAACO,mBAAmB,CAAC,OAAO,EAAEC,WAAW,CAAC;IAC/CR,KAAK,CAACO,mBAAmB,CAAC,YAAY,EAAEG,gBAAgB,CAAC;IACzDV,KAAK,CAACO,mBAAmB,CAAC,gBAAgB,EAAEI,oBAAoB,CAAC;IAEjEX,KAAK,CAACY,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IAChDN,KAAK,CAACY,gBAAgB,CAAC,OAAO,EAAEJ,WAAW,CAAC;IAC5CR,KAAK,CAACY,gBAAgB,CAAC,YAAY,EAAEF,gBAAgB,CAAC;IACtDV,KAAK,CAACY,gBAAgB,CAAC,gBAAgB,EAAED,oBAAoB,CAAC;IAE9D,OAAO,MAAM;MAAE;MACXX,KAAK,CAACO,mBAAmB,CAAC,SAAS,EAAED,aAAa,CAAC;MACnDN,KAAK,CAACO,mBAAmB,CAAC,OAAO,EAAEC,WAAW,CAAC;MAC/CR,KAAK,CAACO,mBAAmB,CAAC,YAAY,EAAEG,gBAAgB,CAAC;MACzDV,KAAK,CAACO,mBAAmB,CAAC,gBAAgB,EAAEI,oBAAoB,CAAC;IACrE,CAAC;IACL;EACA,CAAC,EAAE,CAACzF,iBAAiB,EAAEF,QAAQ,EAAEI,SAAS,EAAEY,kBAAkB,EAAEM,UAAU,CAAC,CAAC;EAG5EpC,SAAS,CAAC,MAAM;IAAE;IACd,MAAM8F,KAAK,GAAG9D,QAAQ,CAACqB,OAAO;IAAE,IAAI,CAACyC,KAAK,EAAE;IAE5C,MAAMa,UAAU,GAAGA,CAAA,KAAM;MACrBxF,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC;IAED,MAAMyF,WAAW,GAAGA,CAAA,KAAM;MACtBzF,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,MAAM0F,WAAW,GAAIV,CAAC,IAAK;MAAA,IAAAW,sBAAA,EAAAC,sBAAA;MACvB7D,OAAO,CAAC1B,KAAK,CAAC,cAAc,EAAE2E,CAAC,EAAE,gBAAgB,EAAErF,QAAQ,CAACE,iBAAiB,CAAC,CAAC;MAC/EK,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACrBF,YAAY,CAAC,KAAK,CAAC;MACnBM,QAAQ,CAAC,yBAAAqF,sBAAA,GAAwBhG,QAAQ,CAACE,iBAAiB,CAAC,cAAA8F,sBAAA,uBAA3BA,sBAAA,CAA6BE,KAAK,oCAAAD,sBAAA,GAAmCjG,QAAQ,CAACE,iBAAiB,CAAC,cAAA+F,sBAAA,uBAA3BA,sBAAA,CAA6B/D,GAAG,EAAE,CAAC;IAC7I,CAAC;;IAED;IACA7B,YAAY,CAAC,CAAC2E,KAAK,CAACG,MAAM,CAAC;IAE3BH,KAAK,CAACY,gBAAgB,CAAC,MAAM,EAAEC,UAAU,CAAC;IAC1Cb,KAAK,CAACY,gBAAgB,CAAC,OAAO,EAAEE,WAAW,CAAC;IAC5Cd,KAAK,CAACY,gBAAgB,CAAC,OAAO,EAAEG,WAAW,CAAC;IAE5C,OAAO,MAAM;MAAE;MACXf,KAAK,CAACO,mBAAmB,CAAC,MAAM,EAAEM,UAAU,CAAC;MAC7Cb,KAAK,CAACO,mBAAmB,CAAC,OAAO,EAAEO,WAAW,CAAC;MAC/Cd,KAAK,CAACO,mBAAmB,CAAC,OAAO,EAAEQ,WAAW,CAAC;IACnD,CAAC;EACL,CAAC,EAAE,CAAC/F,QAAQ,CAAC8B,MAAM,EAAE5B,iBAAiB,CAAC,CAAC;;EAExC;EACA,MAAMiG,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMnB,KAAK,GAAG9D,QAAQ,CAACqB,OAAO;IAC9B,IAAI,CAACyC,KAAK,IAAIhF,QAAQ,CAAC8B,MAAM,KAAK,CAAC,IAAIxB,SAAS,EAAE,OAAO,CAAC;;IAE1D,IAAI0E,KAAK,CAACG,MAAM,EAAE;MACb;MACD9E,YAAY,CAAC,IAAI,CAAC;MAClB2E,KAAK,CAACjB,IAAI,CAAC,CAAC,CAACqB,KAAK,CAAC1E,KAAK,IAAI;QACxB0B,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvCL,YAAY,CAAC,KAAK,CAAC;QACnBM,QAAQ,CAAC,sBAAsB,CAAC;MACpC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,MAAM;MACHqE,KAAK,CAACd,KAAK,CAAC,CAAC;MACb7D,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;;EAED;EACA,MAAM+F,aAAa,GAAGA,CAAA,KAAM;IACxBjG,oBAAoB,CAACsF,IAAI,IAAI,CAACA,IAAI,GAAG,CAAC,IAAIzF,QAAQ,CAAC8B,MAAM,CAAC;EAC9D,CAAC;EAED,MAAMuE,iBAAiB,GAAGA,CAAA,KAAM;IAC5BlG,oBAAoB,CAACsF,IAAI,IACrBA,IAAI,KAAK,CAAC,GAAGzF,QAAQ,CAAC8B,MAAM,GAAG,CAAC,GAAG2D,IAAI,GAAG,CAC9C,CAAC;EACL,CAAC;;EAED;EACA,MAAMa,UAAU,GAAIC,OAAO,IAAK;IAC5B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACrC,MAAMI,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACrC,OAAO,GAAGC,IAAI,IAAIG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE;EACnD,CAAC;;EAED;;EAEA;EACA,MAAMC,QAAQ,gBAAGnH,OAAA;IAAOoH,GAAG,EAAE3F,QAAS;IAAC4F,OAAO,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;;EAE5D;EACA,IAAIxG,KAAK,IAAIV,QAAQ,CAAC8B,MAAM,KAAK,CAAC,EAAE;IAChC;IACA,oBACIrC,OAAA,CAAAE,SAAA;MAAAwH,QAAA,GACKP,QAAQ,eACTnH,OAAA;QAAK2H,SAAS,EAAC,cAAc;QAAAD,QAAA,gBACzB1H,OAAA;UAAA0H,QAAA,EAAIzG;QAAK;UAAAqG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdzH,OAAA;UAAQ4H,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACjG,QAAQ,CAACkG,MAAM,CAAC,CAAE;UAAAJ,QAAA,EAAC;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC;IAAA,eACR,CAAC;EAEX;;EAEA;EACA,IAAI,CAAC1G,aAAa,IAAIF,SAAS,EAAE;IAC7B,oBACIb,OAAA,CAAAE,SAAA;MAAAwH,QAAA,GACKP,QAAQ,eACTnH,OAAA;QAAK2H,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eACzD,CAAC;EAEX;;EAEA;EACA,MAAM1C,gBAAgB,GAAGxE,QAAQ,CAACE,iBAAiB,CAAC;EACpD,IAAI,CAACsE,gBAAgB,EAAE;IACnB;IACA,oBACI/E,OAAA,CAAAE,SAAA;MAAAwH,QAAA,GACKP,QAAQ,eACTnH,OAAA;QAAK2H,SAAS,EAAC,cAAc;QAAAD,QAAA,eACzB1H,OAAA;UAAA0H,QAAA,EAAG;QAAiB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA,eACR,CAAC;EAEX;;EAEA;EACA,MAAMzC,UAAU,GAAGD,gBAAgB,CAACrC,OAAO,IAAI,6BAA6B,CAAC,CAAC;EAC9E,MAAM0B,WAAW,GAAG3C,QAAQ,CAACqB,OAAO,GAAGrB,QAAQ,CAACqB,OAAO,CAACsB,WAAW,GAAG,CAAC;;EAEvE;EACA,oBACIpE,OAAA,CAAAE,SAAA;IAAAwH,QAAA,GACKP,QAAQ,EAAC,GAAC,EAEVtF,UAAU;IAAA;IACP;IACA7B,OAAA;MAAK2H,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7B1H,OAAA;QAAK2H,SAAS,EAAC,qBAAqB;QAAAD,QAAA,GAC/B7G,SAAS,iBAAIb,OAAA;UAAK2H,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAAU;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC9DxG,KAAK,iBAAIjB,OAAA;UAAK2H,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAEzG;QAAK;UAAAqG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAGtDzH,OAAA;UACI2H,SAAS,EAAC,gBAAgB;UAC1B7C,KAAK,EAAE;YAAEG,eAAe,EAAE,OAAOD,UAAU;UAAI;QAAE;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eAEPzH,OAAA;UAAK2H,SAAS,EAAC,sBAAsB;UAAAD,QAAA,gBACjC1H,OAAA;YAAA0H,QAAA,EAAK3C,gBAAgB,CAAC0B;UAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAChC1C,gBAAgB,CAACgD,MAAM,iBAAI/H,OAAA;YAAA0H,QAAA,EAAI3C,gBAAgB,CAACgD;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAG3D1C,gBAAgB,CAACiD,aAAa,iBAC3BhI,OAAA;YAAG2H,SAAS,EAAC,gBAAgB;YAAAD,QAAA,GAAC,aACf,EAAC,IAAIO,IAAI,CAAClD,gBAAgB,CAACiD,aAAa,CAAC,CAACE,cAAc,CAAC,CAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAGNzH,OAAA;UAAK2H,SAAS,EAAC,2BAA2B;UAAAD,QAAA,eACtC1H,OAAA;YAAKoH,GAAG,EAAE1F,WAAY;YAACiG,SAAS,EAAC;UAAU;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eAENzH,OAAA;UAAK2H,SAAS,EAAC,0BAA0B;UAAAD,QAAA,gBACrC1H,OAAA;YAAK2H,SAAS,EAAC;UAA4B;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClDzH,OAAA;YAAQ4H,OAAO,EAAElB,UAAW;YAACyB,QAAQ,EAAEtH,SAAU;YAAC8G,SAAS,EAAC,gCAAgC;YAAC,cAAYhH,SAAS,GAAG,OAAO,GAAG,MAAO;YAAA+G,QAAA,EACjI7G,SAAS,GAAG,KAAK,GAAIF,SAAS,GAAG,IAAI,GAAG;UAAI;YAAA2G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACTzH,OAAA;YAAK2H,SAAS,EAAC;UAA4B;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eAGNzH,OAAA;UAAK2H,SAAS,EAAC,aAAa;UAAAD,QAAA,GACvBb,UAAU,CAACzC,WAAW,CAAC,EAAC,eAC7B;QAAA;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGNzH,OAAA;QAAK2H,SAAS,EAAC,wBAAwB;QAAAD,QAAA,gBACnC1H,OAAA;UAAK2H,SAAS,EAAC,uBAAuB;UAAAD,QAAA,eAClC1H,OAAA;YAAI2H,SAAS,EAAC,sBAAsB;YAAAD,QAAA,EAAC;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACNzH,OAAA,CAACH,cAAc;UAACQ,IAAI,EAAEA,IAAK;UAAC+H,YAAY,EAAErD;QAAiB;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;IAAA;IAEN;IACAzH,OAAA;MAAK2H,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBAE9B1H,OAAA;QACI2H,SAAS,EAAC,wBAAwB;QAClC7C,KAAK,EAAE;UAAEuD,KAAK,EAAE,GAAGlH,QAAQ;QAAI;MAAE;QAAAmG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eAEPzH,OAAA;QAAK2H,SAAS,EAAC,oBAAoB;QAAAD,QAAA,gBAC/B1H,OAAA;UAAKwF,GAAG,EAAER,UAAW;UAACsD,GAAG,EAAC,EAAE;UAACX,SAAS,EAAC;QAAuB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjEzH,OAAA;UAAK2H,SAAS,EAAC,oBAAoB;UAAAD,QAAA,gBAC/B1H,OAAA;YAAK2H,SAAS,EAAC,qBAAqB;YAAAD,QAAA,EAAE3C,gBAAgB,CAAC0B;UAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAClE1C,gBAAgB,CAACgD,MAAM,iBAAI/H,OAAA;YAAK2H,SAAS,EAAC,sBAAsB;YAAAD,QAAA,EAAE3C,gBAAgB,CAACgD;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAChGxG,KAAK,iBAAIjB,OAAA;YAAK2H,SAAS,EAAC,qBAAqB;YAAAD,QAAA,EAAEzG;UAAK;YAAAqG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNzH,OAAA;QAAK2H,SAAS,EAAC,wBAAwB;QAAAD,QAAA,gBACnC1H,OAAA;UAAQ4H,OAAO,EAAEhB,iBAAkB;UAACe,SAAS,EAAC,wBAAwB;UAAC,cAAW,gBAAgB;UAAAD,QAAA,EAAC;QAEnG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzH,OAAA;UAAQ4H,OAAO,EAAElB,UAAW;UAACyB,QAAQ,EAAEtH,SAAU;UAAC8G,SAAS,EAAC,yBAAyB;UAAC,cAAYhH,SAAS,GAAG,OAAO,GAAG,MAAO;UAAA+G,QAAA,EAC1H7G,SAAS,GAAG,KAAK,GAAIF,SAAS,GAAG,IAAI,GAAG;QAAI;UAAA2G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACTzH,OAAA;UAAQ4H,OAAO,EAAEjB,aAAc;UAACgB,SAAS,EAAC,wBAAwB;UAAC,cAAW,YAAY;UAAAD,QAAA,EAAC;QAE3F;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA,eACH,CAAC;AAEX;AAACnH,EAAA,CAnfQF,MAAM;EAAA,QAaMT,WAAW;AAAA;AAAA4I,EAAA,GAbvBnI,MAAM;AAqff,eAAeA,MAAM;AAAC,IAAAmI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}