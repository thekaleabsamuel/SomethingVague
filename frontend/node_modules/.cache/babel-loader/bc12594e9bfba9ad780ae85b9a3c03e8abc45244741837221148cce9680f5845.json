{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/commentSection.css'; // Create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentSection({\n  user,\n  currentTrack\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const commentsContainerRef = useRef(null);\n\n  // Safely extract track ID\n  const trackId = (currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.id) || 'unknown';\n\n  // Fetch comments for the current track\n  useEffect(() => {\n    const fetchComments = async () => {\n      if (!currentTrack) return;\n      try {\n        const response = await fetch(`http://localhost:5001/api/tracks/${trackId}/comments`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        const data = await response.json();\n        console.log('Fetched comments:', data);\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [trackId, currentTrack]);\n\n  // Auto-scroll to bottom when new comments are added\n  useEffect(() => {\n    if (commentsContainerRef.current) {\n      const container = commentsContainerRef.current;\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [comments.length]);\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim() || !user) return;\n    setIsSubmitting(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('You must be logged in to comment');\n      }\n      const response = await fetch(`http://localhost:5001/api/tracks/${trackId}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: newComment\n        })\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          // Clear invalid token and user data\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          throw new Error('Your session has expired. Please log in again.');\n        }\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to post comment');\n      }\n      const data = await response.json();\n      console.log('New comment response:', data);\n      setComments(prevComments => [...prevComments, data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Failed to post comment:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Format timestamp to show how long ago the comment was posted\n  const formatTimestamp = timestamp => {\n    if (!timestamp) return 'just now';\n    const commentDate = new Date(timestamp);\n    const now = new Date();\n    const diffSeconds = Math.floor((now - commentDate) / 1000);\n    if (diffSeconds < 60) return 'just now';\n    if (diffSeconds < 3600) return `${Math.floor(diffSeconds / 60)} min ago`;\n    if (diffSeconds < 86400) return `${Math.floor(diffSeconds / 3600)} hr ago`;\n    return `${Math.floor(diffSeconds / 86400)} day(s) ago`;\n  };\n\n  // If no track is available, show a placeholder message\n  if (!currentTrack) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"comment-section-title\",\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-comments\",\n          children: \"Track information is loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comment-section-title\",\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      ref: commentsContainerRef,\n      children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"Be the first to comment on this track!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : comments.map(comment => {\n        // Safely access comment data with defaults\n        const content = (comment === null || comment === void 0 ? void 0 : comment.content) || '';\n        const createdAt = (comment === null || comment === void 0 ? void 0 : comment.createdAt) || new Date().toISOString();\n        const author = (comment === null || comment === void 0 ? void 0 : comment.author) || {};\n        const profilePicture = (author === null || author === void 0 ? void 0 : author.profilePicture) || 'https://via.placeholder.com/40';\n        const username = (author === null || author === void 0 ? void 0 : author.username) || 'Anonymous';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profilePicture,\n              alt: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-author\",\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-time\",\n                children: formatTimestamp(createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comment-text\",\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)]\n        }, comment._id || Date.now(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\",\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting || !newComment.trim(),\n        children: isSubmitting ? '...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-login-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), \" to join the conversation\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentSection, \"Gibhncv8bz2wRjbbtdvnVipD82c=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","CommentSection","user","currentTrack","_s","comments","setComments","newComment","setNewComment","isSubmitting","setIsSubmitting","commentsContainerRef","trackId","id","fetchComments","response","fetch","ok","Error","data","json","console","log","error","current","container","scrollTop","scrollHeight","length","handleSubmitComment","e","preventDefault","trim","token","localStorage","getItem","method","headers","body","JSON","stringify","content","status","removeItem","errorData","message","prevComments","formatTimestamp","timestamp","commentDate","Date","now","diffSeconds","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","comment","createdAt","toISOString","author","profilePicture","username","src","alt","_id","onSubmit","type","value","onChange","target","placeholder","disabled","to","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/commentSection.css'; // Create this CSS file\n\nfunction CommentSection({ user, currentTrack }) {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const commentsContainerRef = useRef(null);\n\n  // Safely extract track ID\n  const trackId = currentTrack?.id || 'unknown';\n\n  // Fetch comments for the current track\n  useEffect(() => {\n    const fetchComments = async () => {\n      if (!currentTrack) return;\n      \n      try {\n        const response = await fetch(`http://localhost:5001/api/tracks/${trackId}/comments`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        const data = await response.json();\n        console.log('Fetched comments:', data);\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n\n    fetchComments();\n  }, [trackId, currentTrack]);\n\n  // Auto-scroll to bottom when new comments are added\n  useEffect(() => {\n    if (commentsContainerRef.current) {\n      const container = commentsContainerRef.current;\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [comments.length]);\n\n  const handleSubmitComment = async (e) => {\n    e.preventDefault();\n    if (!newComment.trim() || !user) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('You must be logged in to comment');\n      }\n\n      const response = await fetch(`http://localhost:5001/api/tracks/${trackId}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: newComment\n        })\n      });\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          // Clear invalid token and user data\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          throw new Error('Your session has expired. Please log in again.');\n        }\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to post comment');\n      }\n\n      const data = await response.json();\n      console.log('New comment response:', data);\n      \n      setComments(prevComments => [...prevComments, data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Failed to post comment:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Format timestamp to show how long ago the comment was posted\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) return 'just now';\n    \n    const commentDate = new Date(timestamp);\n    const now = new Date();\n    const diffSeconds = Math.floor((now - commentDate) / 1000);\n    \n    if (diffSeconds < 60) return 'just now';\n    if (diffSeconds < 3600) return `${Math.floor(diffSeconds / 60)} min ago`;\n    if (diffSeconds < 86400) return `${Math.floor(diffSeconds / 3600)} hr ago`;\n    return `${Math.floor(diffSeconds / 86400)} day(s) ago`;\n  };\n\n  // If no track is available, show a placeholder message\n  if (!currentTrack) {\n    return (\n      <div className=\"comment-section\">\n        <h3 className=\"comment-section-title\">Live Chat</h3>\n        <div className=\"comments-container\">\n          <p className=\"no-comments\">Track information is loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"comment-section\">\n      <h3 className=\"comment-section-title\">Live Chat</h3>\n      \n      <div className=\"comments-container\" ref={commentsContainerRef}>\n        {comments.length === 0 ? (\n          <p className=\"no-comments\">Be the first to comment on this track!</p>\n        ) : (\n          comments.map(comment => {\n            // Safely access comment data with defaults\n            const content = comment?.content || '';\n            const createdAt = comment?.createdAt || new Date().toISOString();\n            const author = comment?.author || {};\n            const profilePicture = author?.profilePicture || 'https://via.placeholder.com/40';\n            const username = author?.username || 'Anonymous';\n            \n            return (\n              <div key={comment._id || Date.now()} className=\"comment\">\n                <div className=\"comment-avatar\">\n                  <img \n                    src={profilePicture} \n                    alt={username} \n                  />\n                </div>\n                <div className=\"comment-content\">\n                  <div className=\"comment-header\">\n                    <span className=\"comment-author\">{username}</span>\n                    <span className=\"comment-time\">{formatTimestamp(createdAt)}</span>\n                  </div>\n                  <p className=\"comment-text\">{content}</p>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      \n      {user ? (\n        <form onSubmit={handleSubmitComment} className=\"comment-form\">\n          <input\n            type=\"text\"\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"Add a comment...\"\n            disabled={isSubmitting}\n          />\n          <button type=\"submit\" disabled={isSubmitting || !newComment.trim()}>\n            {isSubmitting ? '...' : 'Send'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"comment-login-prompt\">\n          <Link to=\"/login\">Log in</Link> to join the conversation\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CommentSection;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}