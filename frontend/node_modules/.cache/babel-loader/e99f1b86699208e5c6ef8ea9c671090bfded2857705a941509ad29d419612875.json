{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation and useNavigate\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport WaveSurfer from \"wavesurfer.js\"; // Import directly from wavesurfer.js instead of the React wrapper\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\nimport { useAudio } from '../context/AudioContext';\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\n\n// Get absolute path to file\nconst getAbsolutePath = relativePath => {\n  // Create full URL by resolving against window.location\n  return new URL(relativePath, window.location.origin).href;\n};\n\n// Helper to check if file is a WAV file\nconst isWavFile = filename => {\n  return filename.toLowerCase().endsWith('.wav');\n};\nfunction Player({\n  user\n}) {\n  _s();\n  const {\n    playlist,\n    currentTrackIndex,\n    currentTrack,\n    isPlaying,\n    progress,\n    duration,\n    error,\n    isLoading,\n    handlePlayPause,\n    handleNextTrack,\n    handlePreviousTrack,\n    audioRef\n  } = useAudio();\n  const waveformRef = useRef(null);\n  const originalBodyStyleRef = useRef(null);\n  const location = useLocation();\n  const isHomePage = location.pathname === '/';\n  const [wavesurferInstance, setWavesurferInstance] = useState(null);\n  const [isPlayerReady, setIsPlayerReady] = useState(false);\n  const navigate = useNavigate();\n\n  // Helper to ensure correct path formatting\n  const getCleanPath = path => {\n    // Remove any public prefix if it exists\n    if (path.startsWith('public/')) {\n      path = path.replace('public/', '');\n    }\n    return path;\n  };\n\n  // --- Hooks ---\n  useEffect(() => {\n    /* Load Playlist */\n    try {\n      const tracks = playlistService.getPlaylist();\n      if (tracks && tracks.length > 0) {\n        // Clean up any path issues in the loaded tracks\n        const cleanedTracks = tracks.map(track => ({\n          ...track,\n          url: getCleanPath(track.url),\n          artwork: getCleanPath(track.artwork)\n        }));\n        console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n        setPlaylist(cleanedTracks);\n        setError(null);\n      } else {\n        console.error(\"No tracks returned from playlistService\");\n        setError(\"No tracks available\");\n      }\n    } catch (err) {\n      console.error(\"Error loading playlist:\", err);\n      setError(\"Failed to load playlist\");\n    }\n  }, []);\n\n  // Initialize WaveSurfer\n  useEffect(() => {\n    if (isHomePage && waveformRef.current && currentTrack) {\n      const wavesurfer = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: '#4a4a4a',\n        progressColor: '#ff6b00',\n        cursorColor: '#ff6b00',\n        barWidth: 2,\n        barRadius: 3,\n        cursorWidth: 1,\n        height: 80,\n        barGap: 3,\n        responsive: true,\n        backend: 'WebAudio'\n      });\n      const audioUrl = new URL(currentTrack.url, window.location.origin).href;\n      wavesurfer.load(audioUrl);\n      wavesurfer.on('ready', () => {\n        setIsPlayerReady(true);\n        if (isPlaying) {\n          wavesurfer.play();\n        }\n      });\n      setWavesurferInstance(wavesurfer);\n      return () => {\n        if (wavesurfer) {\n          wavesurfer.destroy();\n        }\n      };\n    }\n  }, [isHomePage, currentTrack, isPlaying]);\n\n  // Sync WaveSurfer with audio element\n  useEffect(() => {\n    if (wavesurferInstance) {\n      if (isPlaying) {\n        wavesurferInstance.play();\n      } else {\n        wavesurferInstance.pause();\n      }\n    }\n  }, [isPlaying, wavesurferInstance]);\n  useEffect(() => {\n    /* Global Background Effect */\n    // Decide if this should ONLY run on the homepage\n    if (!isHomePage || !currentTrack || isLoading) {\n      // Optional: Restore original body style if navigating away from home\n      if (!isHomePage && originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n      }\n      return; // Don't apply effect if not on home or not ready\n    }\n\n    // Use artwork path directly \n    const artworkUrl = currentTrack.artwork;\n    console.log(\"Setting background with artwork:\", artworkUrl);\n\n    // Store original styles if not already stored (only on homepage)\n    if (originalBodyStyleRef.current === null) {\n      originalBodyStyleRef.current = {\n        backgroundImage: document.body.style.backgroundImage,\n        backgroundSize: document.body.style.backgroundSize,\n        backgroundPosition: document.body.style.backgroundPosition,\n        backgroundAttachment: document.body.style.backgroundAttachment,\n        minHeight: document.body.style.minHeight\n        // transition: document.body.style.transition // Be careful storing transition\n      };\n    }\n    // Apply new styles\n    document.body.style.backgroundImage = `url(${artworkUrl})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.minHeight = '100vh';\n    document.body.style.transition = 'background-image 1s ease-in-out';\n\n    // Cleanup: Restore styles when navigating away *or* component unmounts\n    return () => {\n      if (originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n        // Optional: Reset ref if you want it re-captured if returning to home\n        // originalBodyStyleRef.current = null;\n      }\n    };\n    // Add isHomePage to dependencies\n  }, [currentTrack, isLoading, isHomePage]);\n  useEffect(() => {\n    /* Track Loading/Playback */\n    if (playlist.length === 0 || currentTrackIndex < 0) {\n      setIsLoading(true); // Set loading if no playlist/index\n      return;\n    }\n    const audio = audioRef.current;\n    if (!audio) return;\n    const track = playlist[currentTrackIndex];\n    if (!track || !track.url) {\n      console.error(\"Invalid track data:\", track);\n      setIsLoading(true);\n      setError(\"Invalid track data\");\n      return; // Skip if track data is invalid\n    }\n    setIsLoading(true); // Set loading when changing track\n    const trackUrl = track.url;\n    console.log(\"Loading audio track:\", trackUrl);\n    setError(null); // Clear any previous errors\n    setProgress(0); // Reset progress when changing tracks\n    setDuration(0); // Reset duration\n\n    // Set src only if it's different\n    if (!audio.src.endsWith(trackUrl)) {\n      audio.src = trackUrl;\n      audio.load(); // Load the new source\n    } else if (isPlaying && audio.paused) {\n      // If src is the same but we intend to play, try playing\n      audio.play().catch(e => {\n        console.error(\"Retry play error:\", e);\n        setError(\"Failed to play track\");\n      });\n    }\n    const handleCanPlay = () => {\n      console.log(\"Audio can play:\", trackUrl);\n      setIsLoading(false); // Ready to play this track\n      setIsPlayerReady(true); // Mark that the player has loaded at least once\n      setError(null); // Clear any errors since audio is playable\n      setDuration(audio.duration || 0); // Set duration when known\n      if (isPlaying) {\n        audio.play().catch(e => {\n          console.error(\"Autoplay error:\", e);\n          setError(\"Autoplay failed - try clicking play\");\n        });\n      }\n      // Clean up this specific listener once it fires\n      audio.removeEventListener('canplay', handleCanPlay);\n    };\n    const handleEnded = () => {\n      console.log(\"Track ended\");\n      setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n      // Playback will resume via the isPlaying state in the next canplay event\n    };\n    const handleTimeUpdate = () => {\n      if (audio.duration) {\n        const currentProgress = audio.currentTime / audio.duration * 100;\n        setProgress(currentProgress);\n\n        // Update wavesurfer progress if available\n        if (wavesurferInstance && isHomePage) {\n          wavesurferInstance.seekTo(audio.currentTime / audio.duration);\n        }\n      }\n    };\n    const handleDurationChange = () => {\n      setDuration(audio.duration || 0);\n    };\n\n    // Clear previous listeners before adding new ones for this track\n    audio.removeEventListener('canplay', handleCanPlay);\n    audio.removeEventListener('ended', handleEnded);\n    audio.removeEventListener('timeupdate', handleTimeUpdate);\n    audio.removeEventListener('durationchange', handleDurationChange);\n    audio.addEventListener('canplay', handleCanPlay);\n    audio.addEventListener('ended', handleEnded);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('durationchange', handleDurationChange);\n    return () => {\n      // Cleanup listeners when track changes or component unmounts\n      audio.removeEventListener('canplay', handleCanPlay);\n      audio.removeEventListener('ended', handleEnded);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('durationchange', handleDurationChange);\n    };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n  }, [currentTrackIndex, playlist, isPlaying, wavesurferInstance, isHomePage]);\n  useEffect(() => {\n    /* Audio State Sync Events */\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => {\n      setIsPlaying(true);\n    };\n    const handlePause = () => {\n      setIsPlaying(false);\n    };\n    const handleError = e => {\n      var _playlist$currentTrac, _playlist$currentTrac2;\n      console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n      setIsLoading(false); // Stop loading on error\n      setIsPlaying(false);\n      setError(`Error playing track: ${(_playlist$currentTrac = playlist[currentTrackIndex]) === null || _playlist$currentTrac === void 0 ? void 0 : _playlist$currentTrac.title} - file may be missing at path: ${(_playlist$currentTrac2 = playlist[currentTrackIndex]) === null || _playlist$currentTrac2 === void 0 ? void 0 : _playlist$currentTrac2.url}`);\n    };\n\n    // Set initial state based on audio element (covers browser controls)\n    setIsPlaying(!audio.paused);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('error', handleError);\n    return () => {\n      // Cleanup on unmount\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('error', handleError);\n    };\n  }, [playlist.length, currentTrackIndex]);\n\n  // Debugging helper for tracks\n  useEffect(() => {\n    if (isHomePage && playlist.length > 0 && currentTrackIndex >= 0) {\n      const track = playlist[currentTrackIndex];\n      if (track) {\n        console.log(\"Current track details:\", {\n          title: track.title,\n          artist: track.artist,\n          url: track.url,\n          absoluteUrl: getAbsolutePath(track.url),\n          artwork: track.artwork\n        });\n\n        // Log the audio element state\n        if (audioRef.current) {\n          console.log(\"Audio element state:\", {\n            src: audioRef.current.src,\n            paused: audioRef.current.paused,\n            currentTime: audioRef.current.currentTime,\n            duration: audioRef.current.duration\n          });\n        }\n\n        // Check the WaveSurfer container\n        if (waveformRef.current) {\n          console.log(\"WaveSurfer container:\", {\n            element: waveformRef.current,\n            width: waveformRef.current.offsetWidth,\n            height: waveformRef.current.offsetHeight,\n            children: waveformRef.current.children.length\n          });\n        }\n      }\n    }\n  }, [isHomePage, playlist, currentTrackIndex, wavesurferInstance]);\n\n  // --- Control Functions ---\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n    if (audio.paused) {\n      // We set isPlaying to true, the effect hook will handle the actual audio.play()\n      setIsPlaying(true);\n      audio.play().catch(error => {\n        console.error(\"Playback error:\", error);\n        setIsPlaying(false);\n        setError(\"Failed to play audio\");\n      }); // Also try direct play\n    } else {\n      audio.pause();\n      setIsPlaying(false); // Immediately reflect pause intent\n    }\n  };\n\n  // For next/prev track in bottom player\n  const playNextTrack = () => {\n    setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n  };\n  const playPreviousTrack = () => {\n    setCurrentTrackIndex(prev => prev === 0 ? playlist.length - 1 : prev - 1);\n  };\n\n  // Format time function for displaying current time and duration\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // --- Render Logic ---\n\n  // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n  const audioTag = /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    preload: \"metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 22\n  }, this);\n\n  // Handle loading state and errors\n  if (error && playlist.length === 0) {\n    // Critical error - no playlist available\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Reload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // Don't render full UI until the player has loaded something\n  if (!isPlayerReady && isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-loading\",\n        children: \"Loading Radio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // We have a playlist and player is ready, get current track info\n  const currentTrackInfo = playlist[currentTrackIndex];\n  if (!currentTrackInfo) {\n    // Handle case where index might be invalid temporarily\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No track selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // All good, display the track info\n  const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n  const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n\n  // --- Conditional UI Rendering ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [audioTag, \" \", isHomePage ?\n    /*#__PURE__*/\n    // --- Main Player UI on HomePage (more like original with waveform) ---\n    _jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-ui-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 39\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-overlay\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-artwork\",\n          style: {\n            backgroundImage: `url(${artworkUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-track-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 57\n          }, this), currentTrackInfo.scheduledTime && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"scheduled-time\",\n            children: [\"Scheduled: \", new Date(currentTrackInfo.scheduledTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-waveform-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: waveformRef,\n            className: \"waveform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls-centered\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-button-placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlay,\n            disabled: isLoading,\n            className: \"control-button play-pause-main\",\n            \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n            children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-button-placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-time\",\n          children: [formatTime(currentTime), \" / Live Radio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-comment-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"player-comment-title\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          user: user,\n          currentTrack: currentTrackInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n    _jsxDEV(\"div\", {\n      className: \"bottom-player-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artworkUrl,\n          alt: \"\",\n          className: \"bottom-player-artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-title\",\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-artist\",\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 57\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPreviousTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Previous track\",\n          children: \"\\u23EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          disabled: isLoading,\n          className: \"bottom-player-playpause\",\n          \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n          children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNextTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Next track\",\n          children: \"\\u23ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"ZxEHN4THSwb3SR7Gz8LjjKHCL2c=\", false, function () {\n  return [useAudio, useLocation, useNavigate];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useLocation","useNavigate","playlistService","CommentSection","WaveSurfer","useAudio","jsxDEV","_jsxDEV","Fragment","_Fragment","WAVEFORM_PLACEHOLDER","getAbsolutePath","relativePath","URL","window","location","origin","href","isWavFile","filename","toLowerCase","endsWith","Player","user","_s","playlist","currentTrackIndex","currentTrack","isPlaying","progress","duration","error","isLoading","handlePlayPause","handleNextTrack","handlePreviousTrack","audioRef","waveformRef","originalBodyStyleRef","isHomePage","pathname","wavesurferInstance","setWavesurferInstance","isPlayerReady","setIsPlayerReady","navigate","getCleanPath","path","startsWith","replace","tracks","getPlaylist","length","cleanedTracks","map","track","url","artwork","console","log","setPlaylist","setError","err","current","wavesurfer","create","container","waveColor","progressColor","cursorColor","barWidth","barRadius","cursorWidth","height","barGap","responsive","backend","audioUrl","load","on","play","destroy","pause","Object","assign","document","body","style","artworkUrl","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","transition","setIsLoading","audio","trackUrl","setProgress","setDuration","src","paused","catch","e","handleCanPlay","removeEventListener","handleEnded","setCurrentTrackIndex","prev","handleTimeUpdate","currentProgress","currentTime","seekTo","handleDurationChange","addEventListener","handlePlay","setIsPlaying","handlePause","handleError","_playlist$currentTrac","_playlist$currentTrac2","title","artist","absoluteUrl","element","width","offsetWidth","offsetHeight","children","togglePlay","playNextTrack","playPreviousTrack","formatTime","seconds","mins","Math","floor","secs","audioTag","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","reload","currentTrackInfo","scheduledTime","Date","toLocaleString","disabled","alt","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation and useNavigate\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport WaveSurfer from \"wavesurfer.js\"; // Import directly from wavesurfer.js instead of the React wrapper\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\nimport { useAudio } from '../context/AudioContext';\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\n\n// Get absolute path to file\nconst getAbsolutePath = (relativePath) => {\n    // Create full URL by resolving against window.location\n    return new URL(relativePath, window.location.origin).href;\n};\n\n// Helper to check if file is a WAV file\nconst isWavFile = (filename) => {\n    return filename.toLowerCase().endsWith('.wav');\n};\n\nfunction Player({ user }) {\n    const {\n        playlist,\n        currentTrackIndex,\n        currentTrack,\n        isPlaying,\n        progress,\n        duration,\n        error,\n        isLoading,\n        handlePlayPause,\n        handleNextTrack,\n        handlePreviousTrack,\n        audioRef\n    } = useAudio();\n\n    const waveformRef = useRef(null);\n    const originalBodyStyleRef = useRef(null);\n    const location = useLocation();\n    const isHomePage = location.pathname === '/';\n    const [wavesurferInstance, setWavesurferInstance] = useState(null);\n    const [isPlayerReady, setIsPlayerReady] = useState(false);\n    const navigate = useNavigate();\n\n    // Helper to ensure correct path formatting\n    const getCleanPath = (path) => {\n        // Remove any public prefix if it exists\n        if (path.startsWith('public/')) {\n            path = path.replace('public/', '');\n        }\n        return path;\n    };\n\n    // --- Hooks ---\n    useEffect(() => { /* Load Playlist */\n        try {\n            const tracks = playlistService.getPlaylist();\n            if (tracks && tracks.length > 0) {\n                // Clean up any path issues in the loaded tracks\n                const cleanedTracks = tracks.map(track => ({\n                    ...track,\n                    url: getCleanPath(track.url),\n                    artwork: getCleanPath(track.artwork)\n                }));\n                \n                console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n                setPlaylist(cleanedTracks);\n                setError(null);\n            } else {\n                console.error(\"No tracks returned from playlistService\");\n                setError(\"No tracks available\");\n            }\n        } catch (err) {\n            console.error(\"Error loading playlist:\", err);\n            setError(\"Failed to load playlist\");\n        }\n    }, []);\n\n    // Initialize WaveSurfer\n    useEffect(() => {\n        if (isHomePage && waveformRef.current && currentTrack) {\n            const wavesurfer = WaveSurfer.create({\n                container: waveformRef.current,\n                waveColor: '#4a4a4a',\n                progressColor: '#ff6b00',\n                cursorColor: '#ff6b00',\n                barWidth: 2,\n                barRadius: 3,\n                cursorWidth: 1,\n                height: 80,\n                barGap: 3,\n                responsive: true,\n                backend: 'WebAudio'\n            });\n\n            const audioUrl = new URL(currentTrack.url, window.location.origin).href;\n            wavesurfer.load(audioUrl);\n\n            wavesurfer.on('ready', () => {\n                setIsPlayerReady(true);\n                if (isPlaying) {\n                    wavesurfer.play();\n                }\n            });\n\n            setWavesurferInstance(wavesurfer);\n\n            return () => {\n                if (wavesurfer) {\n                    wavesurfer.destroy();\n                }\n            };\n        }\n    }, [isHomePage, currentTrack, isPlaying]);\n\n    // Sync WaveSurfer with audio element\n    useEffect(() => {\n        if (wavesurferInstance) {\n            if (isPlaying) {\n                wavesurferInstance.play();\n            } else {\n                wavesurferInstance.pause();\n            }\n        }\n    }, [isPlaying, wavesurferInstance]);\n\n    useEffect(() => { /* Global Background Effect */\n        // Decide if this should ONLY run on the homepage\n        if (!isHomePage || !currentTrack || isLoading) {\n            // Optional: Restore original body style if navigating away from home\n             if (!isHomePage && originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n             }\n            return; // Don't apply effect if not on home or not ready\n        }\n\n        // Use artwork path directly \n        const artworkUrl = currentTrack.artwork;\n        console.log(\"Setting background with artwork:\", artworkUrl);\n\n        // Store original styles if not already stored (only on homepage)\n        if (originalBodyStyleRef.current === null) {\n             originalBodyStyleRef.current = {\n                backgroundImage: document.body.style.backgroundImage,\n                backgroundSize: document.body.style.backgroundSize,\n                backgroundPosition: document.body.style.backgroundPosition,\n                backgroundAttachment: document.body.style.backgroundAttachment,\n                minHeight: document.body.style.minHeight,\n                // transition: document.body.style.transition // Be careful storing transition\n            };\n        }\n        // Apply new styles\n        document.body.style.backgroundImage = `url(${artworkUrl})`;\n        document.body.style.backgroundSize = 'cover';\n        document.body.style.backgroundPosition = 'center center';\n        document.body.style.backgroundAttachment = 'fixed';\n        document.body.style.minHeight = '100vh';\n        document.body.style.transition = 'background-image 1s ease-in-out';\n\n        // Cleanup: Restore styles when navigating away *or* component unmounts\n        return () => {\n             if (originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n                 // Optional: Reset ref if you want it re-captured if returning to home\n                 // originalBodyStyleRef.current = null;\n             }\n         };\n    // Add isHomePage to dependencies\n    }, [currentTrack, isLoading, isHomePage]);\n\n    useEffect(() => { /* Track Loading/Playback */\n        if (playlist.length === 0 || currentTrackIndex < 0) {\n            setIsLoading(true); // Set loading if no playlist/index\n            return;\n        }\n\n        const audio = audioRef.current; if (!audio) return;\n        const track = playlist[currentTrackIndex];\n        if (!track || !track.url) {\n            console.error(\"Invalid track data:\", track);\n            setIsLoading(true);\n            setError(\"Invalid track data\");\n            return; // Skip if track data is invalid\n        }\n\n        setIsLoading(true); // Set loading when changing track\n        const trackUrl = track.url;\n        console.log(\"Loading audio track:\", trackUrl);\n        \n        setError(null); // Clear any previous errors\n        setProgress(0); // Reset progress when changing tracks\n        setDuration(0); // Reset duration\n\n        // Set src only if it's different\n        if (!audio.src.endsWith(trackUrl)) {\n            audio.src = trackUrl;\n            audio.load(); // Load the new source\n        } else if (isPlaying && audio.paused) {\n             // If src is the same but we intend to play, try playing\n            audio.play().catch(e => {\n                console.error(\"Retry play error:\", e);\n                setError(\"Failed to play track\");\n            });\n        }\n\n        const handleCanPlay = () => {\n            console.log(\"Audio can play:\", trackUrl);\n            setIsLoading(false); // Ready to play this track\n            setIsPlayerReady(true); // Mark that the player has loaded at least once\n            setError(null); // Clear any errors since audio is playable\n            setDuration(audio.duration || 0); // Set duration when known\n             if (isPlaying) {\n                 audio.play().catch(e => {\n                     console.error(\"Autoplay error:\", e);\n                     setError(\"Autoplay failed - try clicking play\");\n                 });\n             }\n             // Clean up this specific listener once it fires\n             audio.removeEventListener('canplay', handleCanPlay);\n        };\n\n        const handleEnded = () => {\n            console.log(\"Track ended\");\n            setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n            // Playback will resume via the isPlaying state in the next canplay event\n        };\n\n        const handleTimeUpdate = () => {\n            if (audio.duration) {\n                const currentProgress = (audio.currentTime / audio.duration) * 100;\n                setProgress(currentProgress);\n                \n                // Update wavesurfer progress if available\n                if (wavesurferInstance && isHomePage) {\n                    wavesurferInstance.seekTo(audio.currentTime / audio.duration);\n                }\n            }\n        };\n\n        const handleDurationChange = () => {\n            setDuration(audio.duration || 0);\n        };\n\n        // Clear previous listeners before adding new ones for this track\n        audio.removeEventListener('canplay', handleCanPlay);\n        audio.removeEventListener('ended', handleEnded);\n        audio.removeEventListener('timeupdate', handleTimeUpdate);\n        audio.removeEventListener('durationchange', handleDurationChange);\n\n        audio.addEventListener('canplay', handleCanPlay);\n        audio.addEventListener('ended', handleEnded);\n        audio.addEventListener('timeupdate', handleTimeUpdate);\n        audio.addEventListener('durationchange', handleDurationChange);\n\n        return () => { // Cleanup listeners when track changes or component unmounts\n            audio.removeEventListener('canplay', handleCanPlay);\n            audio.removeEventListener('ended', handleEnded);\n            audio.removeEventListener('timeupdate', handleTimeUpdate);\n            audio.removeEventListener('durationchange', handleDurationChange);\n        };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n    }, [currentTrackIndex, playlist, isPlaying, wavesurferInstance, isHomePage]);\n\n\n    useEffect(() => { /* Audio State Sync Events */\n        const audio = audioRef.current; if (!audio) return;\n\n        const handlePlay = () => {\n            setIsPlaying(true);\n        };\n        \n        const handlePause = () => {\n            setIsPlaying(false);\n        };\n        \n        const handleError = (e) => {\n            console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n            setIsLoading(false); // Stop loading on error\n            setIsPlaying(false);\n            setError(`Error playing track: ${playlist[currentTrackIndex]?.title} - file may be missing at path: ${playlist[currentTrackIndex]?.url}`);\n        };\n\n        // Set initial state based on audio element (covers browser controls)\n        setIsPlaying(!audio.paused);\n\n        audio.addEventListener('play', handlePlay);\n        audio.addEventListener('pause', handlePause);\n        audio.addEventListener('error', handleError);\n\n        return () => { // Cleanup on unmount\n            audio.removeEventListener('play', handlePlay);\n            audio.removeEventListener('pause', handlePause);\n            audio.removeEventListener('error', handleError);\n        };\n    }, [playlist.length, currentTrackIndex]); \n\n    // Debugging helper for tracks\n    useEffect(() => {\n        if (isHomePage && playlist.length > 0 && currentTrackIndex >= 0) {\n            const track = playlist[currentTrackIndex];\n            if (track) {\n                console.log(\"Current track details:\", {\n                    title: track.title,\n                    artist: track.artist,\n                    url: track.url,\n                    absoluteUrl: getAbsolutePath(track.url),\n                    artwork: track.artwork\n                });\n                \n                // Log the audio element state\n                if (audioRef.current) {\n                    console.log(\"Audio element state:\", {\n                        src: audioRef.current.src,\n                        paused: audioRef.current.paused,\n                        currentTime: audioRef.current.currentTime,\n                        duration: audioRef.current.duration\n                    });\n                }\n                \n                // Check the WaveSurfer container\n                if (waveformRef.current) {\n                    console.log(\"WaveSurfer container:\", {\n                        element: waveformRef.current,\n                        width: waveformRef.current.offsetWidth,\n                        height: waveformRef.current.offsetHeight,\n                        children: waveformRef.current.children.length\n                    });\n                }\n            }\n        }\n    }, [isHomePage, playlist, currentTrackIndex, wavesurferInstance]);\n\n    // --- Control Functions ---\n    const togglePlay = () => {\n        const audio = audioRef.current;\n        if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n        if (audio.paused) {\n             // We set isPlaying to true, the effect hook will handle the actual audio.play()\n            setIsPlaying(true);\n            audio.play().catch(error => { \n                console.error(\"Playback error:\", error); \n                setIsPlaying(false); \n                setError(\"Failed to play audio\");\n            }); // Also try direct play\n        } else {\n            audio.pause();\n            setIsPlaying(false); // Immediately reflect pause intent\n        }\n    };\n\n    // For next/prev track in bottom player\n    const playNextTrack = () => {\n        setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    const playPreviousTrack = () => {\n        setCurrentTrackIndex(prev => \n            prev === 0 ? playlist.length - 1 : prev - 1\n        );\n    };\n\n    // Format time function for displaying current time and duration\n    const formatTime = (seconds) => {\n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n    };\n\n    // --- Render Logic ---\n\n    // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n    const audioTag = <audio ref={audioRef} preload=\"metadata\" />;\n\n    // Handle loading state and errors\n    if (error && playlist.length === 0) {\n        // Critical error - no playlist available\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>{error}</p>\n                    <button onClick={() => window.location.reload()}>Reload Page</button>\n                </div>\n            </>\n        );\n    }\n\n    // Don't render full UI until the player has loaded something\n    if (!isPlayerReady && isLoading) {\n        return (\n            <>\n                {audioTag}\n                <div className=\"initial-loading\">Loading Radio...</div>\n            </>\n        );\n    }\n\n    // We have a playlist and player is ready, get current track info\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo) {\n        // Handle case where index might be invalid temporarily\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>No track selected</p>\n                </div>\n            </>\n        );\n    }\n\n    // All good, display the track info\n    const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n    const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n\n    // --- Conditional UI Rendering ---\n    return (\n        <>\n            {audioTag} {/* Audio tag is always rendered */}\n\n            {isHomePage ? (\n                // --- Main Player UI on HomePage (more like original with waveform) ---\n                <div className=\"player-container\">\n                    <div className=\"player-ui-container\">\n                        {isLoading && <div className=\"loading-overlay\">Loading...</div>}\n                        {error && <div className=\"error-overlay\">{error}</div>}\n                        \n                        {/* Centered artwork section */}\n                        <div \n                            className=\"player-artwork\"\n                            style={{ backgroundImage: `url(${artworkUrl})` }}\n                        ></div>\n                        \n                        <div className=\"player-track-details\">\n                            <h2>{currentTrackInfo.title}</h2>\n                            {currentTrackInfo.artist && <p>{currentTrackInfo.artist}</p>}\n                            \n                            {/* Add scheduled time display if available */}\n                            {currentTrackInfo.scheduledTime && (\n                                <p className=\"scheduled-time\">\n                                    Scheduled: {new Date(currentTrackInfo.scheduledTime).toLocaleString()}\n                                </p>\n                            )}\n                        </div>\n                        \n                        {/* Waveform visualization with native WaveSurfer */}\n                        <div className=\"player-waveform-container\">\n                            <div ref={waveformRef} className=\"waveform\"></div>\n                        </div>\n                        \n                        <div className=\"player-controls-centered\">\n                            <div className=\"control-button-placeholder\"></div>\n                            <button onClick={togglePlay} disabled={isLoading} className=\"control-button play-pause-main\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                                {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                            </button>\n                            <div className=\"control-button-placeholder\"></div>\n                        </div>\n                        \n                        {/* Time display */}\n                        <div className=\"player-time\">\n                            {formatTime(currentTime)} / Live Radio\n                        </div>\n                    </div>\n                    \n                    {/* Comment section below the player */}\n                    <div className=\"player-comment-section\">\n                        <div className=\"player-comment-header\">\n                            <h3 className=\"player-comment-title\">Comments</h3>\n                        </div>\n                        <CommentSection user={user} currentTrack={currentTrackInfo} />\n                    </div>\n                </div>\n            ) : (\n                // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n                <div className=\"bottom-player-bar\">\n                    {/* Progress bar at the top */}\n                    <div \n                        className=\"bottom-player-progress\" \n                        style={{ width: `${progress}%` }}\n                    ></div>\n                    \n                    <div className=\"bottom-player-left\">\n                        <img src={artworkUrl} alt=\"\" className=\"bottom-player-artwork\" />\n                        <div className=\"bottom-player-info\">\n                            <div className=\"bottom-player-title\">{currentTrackInfo.title}</div>\n                            {currentTrackInfo.artist && <div className=\"bottom-player-artist\">{currentTrackInfo.artist}</div>}\n                            {error && <div className=\"bottom-player-error\">{error}</div>}\n                        </div>\n                    </div>\n                    <div className=\"bottom-player-controls\">\n                        <button onClick={playPreviousTrack} className=\"bottom-player-prevnext\" aria-label=\"Previous track\">\n                            ⏮\n                        </button>\n                        <button onClick={togglePlay} disabled={isLoading} className=\"bottom-player-playpause\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                            {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                        </button>\n                        <button onClick={playNextTrack} className=\"bottom-player-prevnext\" aria-label=\"Next track\">\n                            ⏭\n                        </button>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}