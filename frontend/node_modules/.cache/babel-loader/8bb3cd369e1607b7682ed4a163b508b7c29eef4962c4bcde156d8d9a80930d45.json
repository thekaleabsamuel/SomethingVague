{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/commentSection.css'; // Create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentSection({\n  user,\n  currentTrack\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const commentsContainerRef = useRef(null);\n\n  // Safely extract track ID\n  const trackId = (currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.id) || 'unknown';\n\n  // Mock data for demonstration\n  useEffect(() => {\n    // In a real app, you would fetch comments for the current track\n    // from your backend API\n    if (!currentTrack) return; // Skip if no track data\n\n    // Generate mock comments for this track\n    const mockComments = [{\n      id: 1,\n      text: \"This track is amazing!\",\n      timestamp: new Date(Date.now() - 120000).toISOString(),\n      user: {\n        id: 'user1',\n        displayName: 'MusicLover',\n        profilePicture: 'https://via.placeholder.com/40'\n      }\n    }, {\n      id: 2,\n      text: \"Great beat and production\",\n      timestamp: new Date(Date.now() - 60000).toISOString(),\n      user: {\n        id: 'user2',\n        displayName: 'BeatMaker',\n        profilePicture: 'https://via.placeholder.com/40'\n      }\n    }, {\n      id: 3,\n      text: `I'd love to hear more from ${currentTrack.artist || 'this artist'}!`,\n      timestamp: new Date().toISOString(),\n      user: {\n        id: 'user3',\n        displayName: 'RadioFan',\n        profilePicture: 'https://via.placeholder.com/40'\n      }\n    }];\n    setComments(mockComments);\n  }, [trackId, currentTrack]); // Reload comments when track changes\n\n  // Auto-scroll to bottom when new comments are added\n  useEffect(() => {\n    if (commentsContainerRef.current) {\n      const container = commentsContainerRef.current;\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [comments.length]);\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim() || !user) return;\n    setIsSubmitting(true);\n    try {\n      // In a real app, you would send the comment to your backend API\n      // const response = await fetch('/api/comments', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({\n      //     trackId: currentTrack.id,\n      //     text: newComment,\n      //     userId: user.id\n      //   })\n      // });\n      // const data = await response.json();\n\n      // For demonstration, we'll create a mock comment\n      const mockNewComment = {\n        id: Date.now(),\n        text: newComment,\n        timestamp: new Date().toISOString(),\n        user: {\n          id: user.id || 'current-user',\n          displayName: user.displayName || user.email || 'Anonymous',\n          profilePicture: user.profilePicture || 'https://via.placeholder.com/40'\n        }\n      };\n      setComments(prevComments => [...prevComments, mockNewComment]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Failed to post comment:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Format timestamp to show how long ago the comment was posted\n  const formatTimestamp = timestamp => {\n    const commentDate = new Date(timestamp);\n    const now = new Date();\n    const diffSeconds = Math.floor((now - commentDate) / 1000);\n    if (diffSeconds < 60) return 'just now';\n    if (diffSeconds < 3600) return `${Math.floor(diffSeconds / 60)} min ago`;\n    if (diffSeconds < 86400) return `${Math.floor(diffSeconds / 3600)} hr ago`;\n    return `${Math.floor(diffSeconds / 86400)} day(s) ago`;\n  };\n\n  // If no track is available, show a placeholder message\n  if (!currentTrack) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"comment-section-title\",\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-comments\",\n          children: \"Track information is loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comment-section-title\",\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      ref: commentsContainerRef,\n      children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"Be the first to comment on this track!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: comment.user.profilePicture,\n            alt: comment.user.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-author\",\n              children: comment.user.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-time\",\n              children: formatTimestamp(comment.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment-text\",\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\",\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting || !newComment.trim(),\n        children: isSubmitting ? '...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-login-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), \" to join the conversation\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentSection, \"Gibhncv8bz2wRjbbtdvnVipD82c=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","CommentSection","user","currentTrack","_s","comments","setComments","newComment","setNewComment","isSubmitting","setIsSubmitting","commentsContainerRef","trackId","id","mockComments","text","timestamp","Date","now","toISOString","displayName","profilePicture","artist","current","container","scrollTop","scrollHeight","length","handleSubmitComment","e","preventDefault","trim","mockNewComment","email","prevComments","error","console","formatTimestamp","commentDate","diffSeconds","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","comment","src","alt","onSubmit","type","value","onChange","target","placeholder","disabled","to","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/commentSection.css'; // Create this CSS file\n\nfunction CommentSection({ user, currentTrack }) {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const commentsContainerRef = useRef(null);\n\n  // Safely extract track ID\n  const trackId = currentTrack?.id || 'unknown';\n\n  // Mock data for demonstration\n  useEffect(() => {\n    // In a real app, you would fetch comments for the current track\n    // from your backend API\n    if (!currentTrack) return; // Skip if no track data\n    \n    // Generate mock comments for this track\n    const mockComments = [\n      {\n        id: 1,\n        text: \"This track is amazing!\",\n        timestamp: new Date(Date.now() - 120000).toISOString(),\n        user: {\n          id: 'user1',\n          displayName: 'MusicLover',\n          profilePicture: 'https://via.placeholder.com/40'\n        }\n      },\n      {\n        id: 2,\n        text: \"Great beat and production\",\n        timestamp: new Date(Date.now() - 60000).toISOString(),\n        user: {\n          id: 'user2',\n          displayName: 'BeatMaker',\n          profilePicture: 'https://via.placeholder.com/40'\n        }\n      },\n      {\n        id: 3,\n        text: `I'd love to hear more from ${currentTrack.artist || 'this artist'}!`,\n        timestamp: new Date().toISOString(),\n        user: {\n          id: 'user3',\n          displayName: 'RadioFan',\n          profilePicture: 'https://via.placeholder.com/40'\n        }\n      },\n    ];\n\n    setComments(mockComments);\n  }, [trackId, currentTrack]); // Reload comments when track changes\n\n  // Auto-scroll to bottom when new comments are added\n  useEffect(() => {\n    if (commentsContainerRef.current) {\n      const container = commentsContainerRef.current;\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [comments.length]);\n\n  const handleSubmitComment = async (e) => {\n    e.preventDefault();\n    if (!newComment.trim() || !user) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      // In a real app, you would send the comment to your backend API\n      // const response = await fetch('/api/comments', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({\n      //     trackId: currentTrack.id,\n      //     text: newComment,\n      //     userId: user.id\n      //   })\n      // });\n      // const data = await response.json();\n      \n      // For demonstration, we'll create a mock comment\n      const mockNewComment = {\n        id: Date.now(),\n        text: newComment,\n        timestamp: new Date().toISOString(),\n        user: {\n          id: user.id || 'current-user',\n          displayName: user.displayName || user.email || 'Anonymous',\n          profilePicture: user.profilePicture || 'https://via.placeholder.com/40'\n        }\n      };\n      \n      setComments(prevComments => [...prevComments, mockNewComment]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Failed to post comment:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Format timestamp to show how long ago the comment was posted\n  const formatTimestamp = (timestamp) => {\n    const commentDate = new Date(timestamp);\n    const now = new Date();\n    const diffSeconds = Math.floor((now - commentDate) / 1000);\n    \n    if (diffSeconds < 60) return 'just now';\n    if (diffSeconds < 3600) return `${Math.floor(diffSeconds / 60)} min ago`;\n    if (diffSeconds < 86400) return `${Math.floor(diffSeconds / 3600)} hr ago`;\n    return `${Math.floor(diffSeconds / 86400)} day(s) ago`;\n  };\n\n  // If no track is available, show a placeholder message\n  if (!currentTrack) {\n    return (\n      <div className=\"comment-section\">\n        <h3 className=\"comment-section-title\">Live Chat</h3>\n        <div className=\"comments-container\">\n          <p className=\"no-comments\">Track information is loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"comment-section\">\n      <h3 className=\"comment-section-title\">Live Chat</h3>\n      \n      <div className=\"comments-container\" ref={commentsContainerRef}>\n        {comments.length === 0 ? (\n          <p className=\"no-comments\">Be the first to comment on this track!</p>\n        ) : (\n          comments.map(comment => (\n            <div key={comment.id} className=\"comment\">\n              <div className=\"comment-avatar\">\n                <img src={comment.user.profilePicture} alt={comment.user.displayName} />\n              </div>\n              <div className=\"comment-content\">\n                <div className=\"comment-header\">\n                  <span className=\"comment-author\">{comment.user.displayName}</span>\n                  <span className=\"comment-time\">{formatTimestamp(comment.timestamp)}</span>\n                </div>\n                <p className=\"comment-text\">{comment.text}</p>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n      \n      {user ? (\n        <form onSubmit={handleSubmitComment} className=\"comment-form\">\n          <input\n            type=\"text\"\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"Add a comment...\"\n            disabled={isSubmitting}\n          />\n          <button type=\"submit\" disabled={isSubmitting || !newComment.trim()}>\n            {isSubmitting ? '...' : 'Send'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"comment-login-prompt\">\n          <Link to=\"/login\">Log in</Link> to join the conversation\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CommentSection;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}