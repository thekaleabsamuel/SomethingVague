{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/pages/Home.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// --- STEP 1: Define the @font-face rule as a CSS string ---\n// Make sure the path '/fonts/Daydream.ttf' is correct relative to your public folder\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fontFaceStyles = `\n  @font-face {\n    font-family: 'Daydream';\n    src: url('/fonts/Daydream.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n  }\n`;\n// --- End of CSS String ---\n\nfunction Home() {\n  return (\n    /*#__PURE__*/\n    // --- STEP 2: Use a Fragment to wrap style and content ---\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        dangerouslySetInnerHTML: {\n          __html: fontFaceStyles\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.hero,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: styles.title,\n            children: \"Something Vague\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.subtitle,\n            children: \"Hear something new\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) // --- End of Fragment ---\n  );\n}\n_c = Home;\nconst styles = {\n  container: {\n    backgroundColor: '#ffffff',\n    minHeight: '10vh',\n    padding: '0 2rem',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  hero: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    maxWidth: '600px',\n    margin: '0 auto'\n  },\n  title: {\n    // --- STEP 4: Apply the custom font using fontFamily ---\n    fontFamily: \"'Daydream', sans-serif\",\n    // Use the defined name, add fallback\n    fontSize: '3rem',\n    // Adjust size as needed for the new font\n    fontWeight: 'normal',\n    // Often needed for custom fonts (instead of '300')\n    color: '#333',\n    marginBottom: '0.5rem',\n    letterSpacing: '1px'\n  },\n  subtitle: {\n    fontSize: '1.1rem',\n    color: '#666',\n    marginBottom: '3rem',\n    lineHeight: '1.6',\n    fontWeight: '300'\n  },\n  // ... (rest of your styles object remains the same)\n  ctaContainer: {\n    margin: '2rem 0 3rem'\n  },\n  primaryButton: {\n    backgroundColor: '#000',\n    color: '#fff',\n    padding: '1rem 3rem',\n    borderRadius: '0',\n    textDecoration: 'none',\n    fontWeight: '400',\n    letterSpacing: '1px',\n    fontSize: '1rem',\n    transition: 'all 0.2s ease',\n    display: 'inline-block'\n  },\n  nowPlaying: {\n    marginTop: '3rem',\n    padding: '1.5rem 2rem',\n    borderTop: '1px solid #eee',\n    borderBottom: '1px solid #eee'\n  },\n  nowPlayingText: {\n    color: '#999',\n    fontSize: '0.9rem',\n    marginBottom: '0.5rem',\n    letterSpacing: '1px'\n  },\n  currentTrack: {\n    fontSize: '1.2rem',\n    fontWeight: '400',\n    color: '#333',\n    margin: '0 0 0.25rem 0'\n  },\n  genre: {\n    color: '#999',\n    fontSize: '0.9rem',\n    margin: 0,\n    fontStyle: 'italic'\n  }\n};\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","fontFaceStyles","Home","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","hero","title","subtitle","_c","backgroundColor","minHeight","padding","display","flexDirection","justifyContent","alignItems","textAlign","maxWidth","margin","fontFamily","fontSize","fontWeight","color","marginBottom","letterSpacing","lineHeight","ctaContainer","primaryButton","borderRadius","textDecoration","transition","nowPlaying","marginTop","borderTop","borderBottom","nowPlayingText","currentTrack","genre","fontStyle","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/pages/Home.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// --- STEP 1: Define the @font-face rule as a CSS string ---\n// Make sure the path '/fonts/Daydream.ttf' is correct relative to your public folder\nconst fontFaceStyles = `\n  @font-face {\n    font-family: 'Daydream';\n    src: url('/fonts/Daydream.ttf') format('truetype');\n    font-weight: normal;\n    font-style: normal;\n  }\n`;\n// --- End of CSS String ---\n\nfunction Home() {\n  return (\n    // --- STEP 2: Use a Fragment to wrap style and content ---\n    <>\n      {/* --- STEP 3: Inject the @font-face rule --- */}\n      <style dangerouslySetInnerHTML={{ __html: fontFaceStyles }} />\n\n      {/* Your existing component structure */}\n      <div style={styles.container}>\n        <div style={styles.hero}>\n          {/* The title style is updated below in the styles object */}\n          <h1 style={styles.title}>Something Vague</h1>\n          <p style={styles.subtitle}>Hear something new</p>\n\n          {/* Commented out sections remain */}\n          {/* <div style={styles.ctaContainer}> ... </div> */}\n          {/* <div style={styles.nowPlaying}> ... </div> */}\n        </div>\n      </div>\n    </> // --- End of Fragment ---\n  );\n}\n\nconst styles = {\n  container: {\n    backgroundColor: '#ffffff',\n    minHeight: '10vh',\n    padding: '0 2rem',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  hero: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    maxWidth: '600px',\n    margin: '0 auto',\n  },\n  title: {\n    // --- STEP 4: Apply the custom font using fontFamily ---\n    fontFamily: \"'Daydream', sans-serif\", // Use the defined name, add fallback\n    fontSize: '3rem', // Adjust size as needed for the new font\n    fontWeight: 'normal', // Often needed for custom fonts (instead of '300')\n    color: '#333',\n    marginBottom: '0.5rem',\n    letterSpacing: '1px',\n  },\n  subtitle: {\n    fontSize: '1.1rem',\n    color: '#666',\n    marginBottom: '3rem',\n    lineHeight: '1.6',\n    fontWeight: '300',\n  },\n  // ... (rest of your styles object remains the same)\n  ctaContainer: {\n    margin: '2rem 0 3rem',\n  },\n  primaryButton: {\n    backgroundColor: '#000',\n    color: '#fff',\n    padding: '1rem 3rem',\n    borderRadius: '0',\n    textDecoration: 'none',\n    fontWeight: '400',\n    letterSpacing: '1px',\n    fontSize: '1rem',\n    transition: 'all 0.2s ease',\n    display: 'inline-block',\n  },\n  nowPlaying: {\n    marginTop: '3rem',\n    padding: '1.5rem 2rem',\n    borderTop: '1px solid #eee',\n    borderBottom: '1px solid #eee',\n  },\n  nowPlayingText: {\n    color: '#999',\n    fontSize: '0.9rem',\n    marginBottom: '0.5rem',\n    letterSpacing: '1px',\n  },\n  currentTrack: {\n    fontSize: '1.2rem',\n    fontWeight: '400',\n    color: '#333',\n    margin: '0 0 0.25rem 0',\n  },\n  genre: {\n    color: '#999',\n    fontSize: '0.9rem',\n    margin: 0,\n    fontStyle: 'italic',\n  },\n};\n\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}