{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/AuthSystem/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport '../../styles/auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile({\n  user,\n  updateUser\n}) {\n  _s();\n  const [displayName, setDisplayName] = useState((user === null || user === void 0 ? void 0 : user.displayName) || '');\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState((user === null || user === void 0 ? void 0 : user.profilePicture) || '');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  // Handle profile image upload\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n    if (!file.type.startsWith('image/')) {\n      setError('Please upload an image file');\n      return;\n    }\n    setProfilePicture(file);\n    setPreviewUrl(URL.createObjectURL(file));\n    setError('');\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif']\n    },\n    maxFiles: 1\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setMessage('');\n    setError('');\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock file upload\n      let profilePictureUrl = user === null || user === void 0 ? void 0 : user.profilePicture;\n      if (profilePicture) {\n        // This would be your actual upload logic\n        // const formData = new FormData();\n        // formData.append('file', profilePicture);\n        // const response = await fetch('/api/upload', { method: 'POST', body: formData });\n        // const data = await response.json();\n        // profilePictureUrl = data.url;\n\n        // Mock URL for now\n        profilePictureUrl = URL.createObjectURL(profilePicture);\n      }\n\n      // Update user profile\n      const updatedUser = {\n        ...user,\n        displayName: displayName || (user === null || user === void 0 ? void 0 : user.displayName),\n        profilePicture: profilePictureUrl\n      };\n      if (updateUser) {\n        updateUser(updatedUser);\n      }\n      setMessage('Profile updated successfully');\n    } catch (err) {\n      setError('Failed to update profile: ' + (err.message || 'Unknown error'));\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to view your profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"profile-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-picture-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-profile-picture\",\n          children: previewUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewUrl,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-profile-picture\",\n            children: \"No Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"profile-picture-dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & drop a profile picture or click to select one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"displayName\",\n          children: \"Display Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"displayName\",\n          value: displayName,\n          onChange: e => setDisplayName(e.target.value),\n          placeholder: \"How you want to appear in comments\",\n          disabled: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: \"profile-update-button\",\n        children: isSubmitting ? 'Updating...' : 'Update Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"NyO23CCB6jcoq1zhGjm07Udibx8=\", false, function () {\n  return [useDropzone];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","jsxDEV","_jsxDEV","Profile","user","updateUser","_s","displayName","setDisplayName","profilePicture","setProfilePicture","previewUrl","setPreviewUrl","isSubmitting","setIsSubmitting","message","setMessage","error","setError","onDrop","acceptedFiles","length","file","type","startsWith","URL","createObjectURL","getRootProps","getInputProps","accept","maxFiles","handleSubmit","e","preventDefault","Promise","resolve","setTimeout","profilePictureUrl","updatedUser","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","src","alt","htmlFor","id","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/AuthSystem/Profile.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport '../../styles/auth.css';\n\nfunction Profile({ user, updateUser }) {\n  const [displayName, setDisplayName] = useState(user?.displayName || '');\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(user?.profilePicture || '');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  // Handle profile image upload\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    \n    const file = acceptedFiles[0];\n    if (!file.type.startsWith('image/')) {\n      setError('Please upload an image file');\n      return;\n    }\n\n    setProfilePicture(file);\n    setPreviewUrl(URL.createObjectURL(file));\n    setError('');\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif']\n    },\n    maxFiles: 1\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setMessage('');\n    setError('');\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock file upload\n      let profilePictureUrl = user?.profilePicture;\n      \n      if (profilePicture) {\n        // This would be your actual upload logic\n        // const formData = new FormData();\n        // formData.append('file', profilePicture);\n        // const response = await fetch('/api/upload', { method: 'POST', body: formData });\n        // const data = await response.json();\n        // profilePictureUrl = data.url;\n        \n        // Mock URL for now\n        profilePictureUrl = URL.createObjectURL(profilePicture);\n      }\n\n      // Update user profile\n      const updatedUser = {\n        ...user,\n        displayName: displayName || user?.displayName,\n        profilePicture: profilePictureUrl\n      };\n\n      if (updateUser) {\n        updateUser(updatedUser);\n      }\n\n      setMessage('Profile updated successfully');\n    } catch (err) {\n      setError('Failed to update profile: ' + (err.message || 'Unknown error'));\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!user) {\n    return <p>Please log in to view your profile</p>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <h2>Your Profile</h2>\n      \n      <form onSubmit={handleSubmit} className=\"profile-form\">\n        <div className=\"profile-picture-section\">\n          <div className=\"current-profile-picture\">\n            {previewUrl ? (\n              <img src={previewUrl} alt=\"Profile\" />\n            ) : (\n              <div className=\"no-profile-picture\">No Image</div>\n            )}\n          </div>\n          \n          <div {...getRootProps()} className=\"profile-picture-dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag & drop a profile picture or click to select one</p>\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"displayName\">Display Name</label>\n          <input\n            type=\"text\"\n            id=\"displayName\"\n            value={displayName}\n            onChange={(e) => setDisplayName(e.target.value)}\n            placeholder=\"How you want to appear in comments\"\n            disabled={isSubmitting}\n          />\n        </div>\n        \n        {message && <p className=\"success-message\">{message}</p>}\n        {error && <p className=\"error-message\">{error}</p>}\n        \n        <button \n          type=\"submit\" \n          disabled={isSubmitting} \n          className=\"profile-update-button\"\n        >\n          {isSubmitting ? 'Updating...' : 'Update Profile'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Profile;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}