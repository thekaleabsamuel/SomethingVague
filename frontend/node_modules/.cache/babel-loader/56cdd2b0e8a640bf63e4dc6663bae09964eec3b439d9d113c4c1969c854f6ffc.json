{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation and useNavigate\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport WaveSurfer from \"wavesurfer.js\"; // Import directly from wavesurfer.js instead of the React wrapper\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\nimport { useAudio } from '../context/AudioContext';\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\n\n// Get absolute path to file\nconst getAbsolutePath = relativePath => {\n  // Create full URL by resolving against window.location\n  return new URL(relativePath, window.location.origin).href;\n};\n\n// Helper to check if file is a WAV file\nconst isWavFile = filename => {\n  return filename.toLowerCase().endsWith('.wav');\n};\nfunction Player({\n  user\n}) {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n  const [error, setError] = useState(null); // Track errors\n  const [progress, setProgress] = useState(0); // Keep progress tracking for bottom player\n  const [duration, setDuration] = useState(0); // Keep duration tracking\n  const [wavesurferInstance, setWavesurferInstance] = useState(null);\n  const audioRef = useRef(null);\n  const waveformRef = useRef(null);\n  const originalBodyStyleRef = useRef(null);\n  const location = useLocation(); // Get the current location object\n  const navigate = useNavigate();\n\n  // Determine if we are on the homepage\n  const isHomePage = location.pathname === '/';\n\n  // Helper to ensure correct path formatting\n  const getCleanPath = path => {\n    // Remove any public prefix if it exists\n    if (path.startsWith('public/')) {\n      path = path.replace('public/', '');\n    }\n    return path;\n  };\n\n  // --- Hooks ---\n  useEffect(() => {\n    /* Load Playlist */\n    try {\n      const tracks = playlistService.getPlaylist();\n      if (tracks && tracks.length > 0) {\n        // Clean up any path issues in the loaded tracks\n        const cleanedTracks = tracks.map(track => ({\n          ...track,\n          url: getCleanPath(track.url),\n          artwork: getCleanPath(track.artwork)\n        }));\n        console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n        setPlaylist(cleanedTracks);\n        setError(null);\n      } else {\n        console.error(\"No tracks returned from playlistService\");\n        setError(\"No tracks available\");\n      }\n    } catch (err) {\n      console.error(\"Error loading playlist:\", err);\n      setError(\"Failed to load playlist\");\n    }\n  }, []);\n\n  // Initialize WaveSurfer\n  useEffect(() => {\n    if (!isHomePage || !waveformRef.current || !audioRef.current) return;\n\n    // Cleanup previous instance if it exists\n    if (wavesurferInstance) {\n      wavesurferInstance.destroy();\n    }\n    console.log(\"Initializing WaveSurfer\");\n    try {\n      const wavesurfer = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: '#999',\n        progressColor: '#f50',\n        cursorColor: 'transparent',\n        barWidth: 2,\n        barHeight: 1,\n        responsive: true,\n        height: 80,\n        barGap: 2,\n        normalize: true,\n        partialRender: true,\n        hideScrollbar: true,\n        backend: 'WebAudio',\n        // Try WebAudio backend instead\n        xhr: {\n          cache: 'default',\n          mode: 'cors',\n          method: 'GET',\n          credentials: 'same-origin',\n          headers: [{\n            key: 'Cache-Control',\n            value: 'no-cache'\n          }]\n        }\n      });\n      console.log(\"WaveSurfer created:\", wavesurfer);\n\n      // Handle WaveSurfer events\n      wavesurfer.on('ready', () => {\n        console.log('WaveSurfer is ready, waveform should be visible');\n        if (audioRef.current && audioRef.current.duration) {\n          const currentProgress = audioRef.current.currentTime / audioRef.current.duration;\n          wavesurfer.seekTo(currentProgress);\n        }\n\n        // Match play state with audio element\n        if (isPlaying && !wavesurfer.isPlaying()) {\n          wavesurfer.play();\n        }\n      });\n      wavesurfer.on('error', err => {\n        console.error('WaveSurfer error:', err);\n      });\n\n      // Handle clicks on waveform to seek\n      wavesurfer.on('seek', function (position) {\n        if (audioRef.current && audioRef.current.duration) {\n          audioRef.current.currentTime = position * audioRef.current.duration;\n        }\n      });\n\n      // Add additional debug listeners\n      wavesurfer.on('loading', progress => {\n        console.log(`WaveSurfer loading: ${progress}%`);\n      });\n      wavesurfer.on('waveform-ready', () => {\n        console.log('WaveSurfer waveform-ready event fired');\n      });\n      setWavesurferInstance(wavesurfer);\n\n      // If we already have a loaded track, load it into WaveSurfer\n      if (playlist.length > 0 && currentTrackIndex >= 0) {\n        var _playlist$currentTrac;\n        // Try loading the track URL directly\n        const trackUrl = (_playlist$currentTrac = playlist[currentTrackIndex]) === null || _playlist$currentTrac === void 0 ? void 0 : _playlist$currentTrac.url;\n        if (trackUrl) {\n          const fullUrl = getAbsolutePath(trackUrl);\n          console.log(\"Loading track URL directly into WaveSurfer:\", fullUrl);\n\n          // Adjust settings for WAV files\n          if (isWavFile(trackUrl)) {\n            console.log(\"WAV file detected, adjusting settings...\");\n            wavesurfer.params.backend = 'WebAudio';\n            wavesurfer.params.minPxPerSec = 50; // More detailed display for WAV\n          }\n\n          // Set a timeout to ensure DOM is ready\n          setTimeout(() => {\n            try {\n              wavesurfer.load(fullUrl);\n            } catch (err) {\n              console.error(\"Error loading track into WaveSurfer:\", err);\n            }\n          }, 100);\n        }\n      }\n\n      // Cleanup on unmount\n      return () => {\n        if (wavesurfer) {\n          wavesurfer.destroy();\n        }\n      };\n    } catch (err) {\n      console.error(\"Error creating WaveSurfer instance:\", err);\n      return undefined;\n    }\n  }, [isHomePage, playlist.length, audioRef, currentTrackIndex, playlist, isPlaying]);\n\n  // Handle track changes in WaveSurfer\n  useEffect(() => {\n    var _playlist$currentTrac2;\n    if (!wavesurferInstance || !isHomePage || playlist.length === 0) return;\n    console.log(\"Track change detected, current track index:\", currentTrackIndex);\n\n    // Get the track URL directly from the playlist\n    const trackUrl = (_playlist$currentTrac2 = playlist[currentTrackIndex]) === null || _playlist$currentTrac2 === void 0 ? void 0 : _playlist$currentTrac2.url;\n    if (trackUrl) {\n      // Create full URL\n      const fullUrl = getAbsolutePath(trackUrl);\n      console.log(\"Loading track directly into WaveSurfer:\", fullUrl);\n\n      // Add a small delay to ensure everything is ready\n      setTimeout(() => {\n        try {\n          // Load the track directly\n          wavesurferInstance.load(fullUrl);\n\n          // Update play state after loading\n          wavesurferInstance.on('ready', () => {\n            console.log(\"WaveSurfer ready after track change\");\n            if (isPlaying) {\n              console.log(\"Auto-playing after waveform load\");\n              wavesurferInstance.play();\n            }\n          });\n        } catch (err) {\n          console.error(\"Error loading track into WaveSurfer on track change:\", err);\n        }\n      }, 100);\n    }\n  }, [currentTrackIndex, isHomePage, wavesurferInstance, playlist, isPlaying]);\n\n  // Update WaveSurfer playback state\n  useEffect(() => {\n    if (!wavesurferInstance || !isHomePage) return;\n    if (isPlaying) {\n      wavesurferInstance.play();\n    } else {\n      wavesurferInstance.pause();\n    }\n  }, [isPlaying, wavesurferInstance, isHomePage]);\n  useEffect(() => {\n    /* Global Background Effect */\n    // Decide if this should ONLY run on the homepage\n    if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n      // Optional: Restore original body style if navigating away from home\n      if (!isHomePage && originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n      }\n      return; // Don't apply effect if not on home or not ready\n    }\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n    // Use artwork path directly \n    const artworkUrl = currentTrackInfo.artwork;\n    console.log(\"Setting background with artwork:\", artworkUrl);\n\n    // Store original styles if not already stored (only on homepage)\n    if (originalBodyStyleRef.current === null) {\n      originalBodyStyleRef.current = {\n        backgroundImage: document.body.style.backgroundImage,\n        backgroundSize: document.body.style.backgroundSize,\n        backgroundPosition: document.body.style.backgroundPosition,\n        backgroundAttachment: document.body.style.backgroundAttachment,\n        minHeight: document.body.style.minHeight\n        // transition: document.body.style.transition // Be careful storing transition\n      };\n    }\n    // Apply new styles\n    document.body.style.backgroundImage = `url(${artworkUrl})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.minHeight = '100vh';\n    document.body.style.transition = 'background-image 1s ease-in-out';\n\n    // Cleanup: Restore styles when navigating away *or* component unmounts\n    return () => {\n      if (originalBodyStyleRef.current) {\n        Object.assign(document.body.style, originalBodyStyleRef.current);\n        // Optional: Reset ref if you want it re-captured if returning to home\n        // originalBodyStyleRef.current = null;\n      }\n    };\n    // Add isHomePage to dependencies\n  }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n  useEffect(() => {\n    /* Track Loading/Playback */\n    if (playlist.length === 0 || currentTrackIndex < 0) {\n      setIsLoading(true); // Set loading if no playlist/index\n      return;\n    }\n    const audio = audioRef.current;\n    if (!audio) return;\n    const track = playlist[currentTrackIndex];\n    if (!track || !track.url) {\n      console.error(\"Invalid track data:\", track);\n      setIsLoading(true);\n      setError(\"Invalid track data\");\n      return; // Skip if track data is invalid\n    }\n    setIsLoading(true); // Set loading when changing track\n    const trackUrl = track.url;\n    console.log(\"Loading audio track:\", trackUrl);\n    setError(null); // Clear any previous errors\n    setProgress(0); // Reset progress when changing tracks\n    setDuration(0); // Reset duration\n\n    // Set src only if it's different\n    if (!audio.src.endsWith(trackUrl)) {\n      audio.src = trackUrl;\n      audio.load(); // Load the new source\n    } else if (isPlaying && audio.paused) {\n      // If src is the same but we intend to play, try playing\n      audio.play().catch(e => {\n        console.error(\"Retry play error:\", e);\n        setError(\"Failed to play track\");\n      });\n    }\n    const handleCanPlay = () => {\n      console.log(\"Audio can play:\", trackUrl);\n      setIsLoading(false); // Ready to play this track\n      setIsPlayerReady(true); // Mark that the player has loaded at least once\n      setError(null); // Clear any errors since audio is playable\n      setDuration(audio.duration || 0); // Set duration when known\n      if (isPlaying) {\n        audio.play().catch(e => {\n          console.error(\"Autoplay error:\", e);\n          setError(\"Autoplay failed - try clicking play\");\n        });\n      }\n      // Clean up this specific listener once it fires\n      audio.removeEventListener('canplay', handleCanPlay);\n    };\n    const handleEnded = () => {\n      console.log(\"Track ended\");\n      setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n      // Playback will resume via the isPlaying state in the next canplay event\n    };\n    const handleTimeUpdate = () => {\n      if (audio.duration) {\n        const currentProgress = audio.currentTime / audio.duration * 100;\n        setProgress(currentProgress);\n\n        // Update wavesurfer progress if available\n        if (wavesurferInstance && isHomePage) {\n          wavesurferInstance.seekTo(audio.currentTime / audio.duration);\n        }\n      }\n    };\n    const handleDurationChange = () => {\n      setDuration(audio.duration || 0);\n    };\n\n    // Clear previous listeners before adding new ones for this track\n    audio.removeEventListener('canplay', handleCanPlay);\n    audio.removeEventListener('ended', handleEnded);\n    audio.removeEventListener('timeupdate', handleTimeUpdate);\n    audio.removeEventListener('durationchange', handleDurationChange);\n    audio.addEventListener('canplay', handleCanPlay);\n    audio.addEventListener('ended', handleEnded);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('durationchange', handleDurationChange);\n    return () => {\n      // Cleanup listeners when track changes or component unmounts\n      audio.removeEventListener('canplay', handleCanPlay);\n      audio.removeEventListener('ended', handleEnded);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('durationchange', handleDurationChange);\n    };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n  }, [currentTrackIndex, playlist, isPlaying, wavesurferInstance, isHomePage]);\n  useEffect(() => {\n    /* Audio State Sync Events */\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => {\n      setIsPlaying(true);\n    };\n    const handlePause = () => {\n      setIsPlaying(false);\n    };\n    const handleError = e => {\n      var _playlist$currentTrac3, _playlist$currentTrac4;\n      console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n      setIsLoading(false); // Stop loading on error\n      setIsPlaying(false);\n      setError(`Error playing track: ${(_playlist$currentTrac3 = playlist[currentTrackIndex]) === null || _playlist$currentTrac3 === void 0 ? void 0 : _playlist$currentTrac3.title} - file may be missing at path: ${(_playlist$currentTrac4 = playlist[currentTrackIndex]) === null || _playlist$currentTrac4 === void 0 ? void 0 : _playlist$currentTrac4.url}`);\n    };\n\n    // Set initial state based on audio element (covers browser controls)\n    setIsPlaying(!audio.paused);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('error', handleError);\n    return () => {\n      // Cleanup on unmount\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('error', handleError);\n    };\n  }, [playlist.length, currentTrackIndex]);\n\n  // Debugging helper for tracks\n  useEffect(() => {\n    if (isHomePage && playlist.length > 0 && currentTrackIndex >= 0) {\n      const track = playlist[currentTrackIndex];\n      if (track) {\n        console.log(\"Current track details:\", {\n          title: track.title,\n          artist: track.artist,\n          url: track.url,\n          absoluteUrl: getAbsolutePath(track.url),\n          artwork: track.artwork\n        });\n\n        // Log the audio element state\n        if (audioRef.current) {\n          console.log(\"Audio element state:\", {\n            src: audioRef.current.src,\n            paused: audioRef.current.paused,\n            currentTime: audioRef.current.currentTime,\n            duration: audioRef.current.duration\n          });\n        }\n\n        // Check the WaveSurfer container\n        if (waveformRef.current) {\n          console.log(\"WaveSurfer container:\", {\n            element: waveformRef.current,\n            width: waveformRef.current.offsetWidth,\n            height: waveformRef.current.offsetHeight,\n            children: waveformRef.current.children.length\n          });\n        }\n      }\n    }\n  }, [isHomePage, playlist, currentTrackIndex, wavesurferInstance]);\n\n  // --- Control Functions ---\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n    if (audio.paused) {\n      // We set isPlaying to true, the effect hook will handle the actual audio.play()\n      setIsPlaying(true);\n      audio.play().catch(error => {\n        console.error(\"Playback error:\", error);\n        setIsPlaying(false);\n        setError(\"Failed to play audio\");\n      }); // Also try direct play\n    } else {\n      audio.pause();\n      setIsPlaying(false); // Immediately reflect pause intent\n    }\n  };\n\n  // For next/prev track in bottom player\n  const playNextTrack = () => {\n    setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n  };\n  const playPreviousTrack = () => {\n    setCurrentTrackIndex(prev => prev === 0 ? playlist.length - 1 : prev - 1);\n  };\n\n  // Format time function for displaying current time and duration\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // --- Render Logic ---\n\n  // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n  const audioTag = /*#__PURE__*/_jsxDEV(\"audio\", {\n    ref: audioRef,\n    preload: \"metadata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 484,\n    columnNumber: 22\n  }, this);\n\n  // Handle loading state and errors\n  if (error && playlist.length === 0) {\n    // Critical error - no playlist available\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          children: \"Reload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // Don't render full UI until the player has loaded something\n  if (!isPlayerReady && isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-loading\",\n        children: \"Loading Radio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // We have a playlist and player is ready, get current track info\n  const currentTrackInfo = playlist[currentTrackIndex];\n  if (!currentTrackInfo) {\n    // Handle case where index might be invalid temporarily\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [audioTag, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No track selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  // All good, display the track info\n  const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n  const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n\n  // --- Conditional UI Rendering ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [audioTag, \" \", isHomePage ?\n    /*#__PURE__*/\n    // --- Main Player UI on HomePage (more like original with waveform) ---\n    _jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-ui-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 39\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-overlay\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-artwork\",\n          style: {\n            backgroundImage: `url(${artworkUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-track-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 57\n          }, this), currentTrackInfo.scheduledTime && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"scheduled-time\",\n            children: [\"Scheduled: \", new Date(currentTrackInfo.scheduledTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-waveform-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: waveformRef,\n            className: \"waveform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls-centered\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-button-placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlay,\n            disabled: isLoading,\n            className: \"control-button play-pause-main\",\n            \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n            children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-button-placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-time\",\n          children: [formatTime(currentTime), \" / Live Radio\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-comment-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"player-comment-title\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          user: user,\n          currentTrack: currentTrackInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n    _jsxDEV(\"div\", {\n      className: \"bottom-player-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-progress\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artworkUrl,\n          alt: \"\",\n          className: \"bottom-player-artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-title\",\n            children: currentTrackInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 29\n          }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-artist\",\n            children: currentTrackInfo.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 57\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-player-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPreviousTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Previous track\",\n          children: \"\\u23EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          disabled: isLoading,\n          className: \"bottom-player-playpause\",\n          \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n          children: isLoading ? '...' : isPlaying ? '❙❙' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNextTrack,\n          className: \"bottom-player-prevnext\",\n          \"aria-label\": \"Next track\",\n          children: \"\\u23ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"dIierMlkV/on/cQnD5OTvXWuzEk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useLocation","useNavigate","playlistService","CommentSection","WaveSurfer","useAudio","jsxDEV","_jsxDEV","Fragment","_Fragment","WAVEFORM_PLACEHOLDER","getAbsolutePath","relativePath","URL","window","location","origin","href","isWavFile","filename","toLowerCase","endsWith","Player","user","_s","playlist","setPlaylist","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","isLoading","setIsLoading","isPlayerReady","setIsPlayerReady","error","setError","progress","setProgress","duration","setDuration","wavesurferInstance","setWavesurferInstance","audioRef","waveformRef","originalBodyStyleRef","navigate","isHomePage","pathname","getCleanPath","path","startsWith","replace","tracks","getPlaylist","length","cleanedTracks","map","track","url","artwork","console","log","err","current","destroy","wavesurfer","create","container","waveColor","progressColor","cursorColor","barWidth","barHeight","responsive","height","barGap","normalize","partialRender","hideScrollbar","backend","xhr","cache","mode","method","credentials","headers","key","value","on","currentProgress","currentTime","seekTo","play","position","_playlist$currentTrac","trackUrl","fullUrl","params","minPxPerSec","setTimeout","load","undefined","_playlist$currentTrac2","pause","Object","assign","document","body","style","currentTrackInfo","artworkUrl","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","transition","audio","src","paused","catch","e","handleCanPlay","removeEventListener","handleEnded","prev","handleTimeUpdate","handleDurationChange","addEventListener","handlePlay","handlePause","handleError","_playlist$currentTrac3","_playlist$currentTrac4","title","artist","absoluteUrl","element","width","offsetWidth","offsetHeight","children","togglePlay","playNextTrack","playPreviousTrack","formatTime","seconds","mins","Math","floor","secs","audioTag","ref","preload","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","reload","scheduledTime","Date","toLocaleString","disabled","currentTrack","alt","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocation, useNavigate } from 'react-router-dom'; // Import useLocation and useNavigate\nimport playlistService from \"../services/playlistService\";\nimport CommentSection from \"./CommentSection\"; // Import the CommentSection\nimport WaveSurfer from \"wavesurfer.js\"; // Import directly from wavesurfer.js instead of the React wrapper\nimport '../styles/player.css'; // Keep this for the large player styles\nimport '../styles/bottomPlayerBar.css'; // Create and import this for the small player\nimport { useAudio } from '../context/AudioContext';\n\n// Waveform placeholder image - you would replace this with actual audio waveform visualization\nconst WAVEFORM_PLACEHOLDER = \"https://i.imgur.com/EHzuWTo.png\";\n\n// Get absolute path to file\nconst getAbsolutePath = (relativePath) => {\n    // Create full URL by resolving against window.location\n    return new URL(relativePath, window.location.origin).href;\n};\n\n// Helper to check if file is a WAV file\nconst isWavFile = (filename) => {\n    return filename.toLowerCase().endsWith('.wav');\n};\n\nfunction Player({ user }) {\n    const [playlist, setPlaylist] = useState([]);\n    const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isPlayerReady, setIsPlayerReady] = useState(false); // Track if initial load is done\n    const [error, setError] = useState(null); // Track errors\n    const [progress, setProgress] = useState(0); // Keep progress tracking for bottom player\n    const [duration, setDuration] = useState(0); // Keep duration tracking\n    const [wavesurferInstance, setWavesurferInstance] = useState(null);\n    const audioRef = useRef(null);\n    const waveformRef = useRef(null);\n    const originalBodyStyleRef = useRef(null);\n    const location = useLocation(); // Get the current location object\n    const navigate = useNavigate();\n\n    // Determine if we are on the homepage\n    const isHomePage = location.pathname === '/';\n\n    // Helper to ensure correct path formatting\n    const getCleanPath = (path) => {\n        // Remove any public prefix if it exists\n        if (path.startsWith('public/')) {\n            path = path.replace('public/', '');\n        }\n        return path;\n    };\n\n    // --- Hooks ---\n    useEffect(() => { /* Load Playlist */\n        try {\n            const tracks = playlistService.getPlaylist();\n            if (tracks && tracks.length > 0) {\n                // Clean up any path issues in the loaded tracks\n                const cleanedTracks = tracks.map(track => ({\n                    ...track,\n                    url: getCleanPath(track.url),\n                    artwork: getCleanPath(track.artwork)\n                }));\n                \n                console.log(\"Loaded playlist:\", cleanedTracks.length, \"tracks\", cleanedTracks);\n                setPlaylist(cleanedTracks);\n                setError(null);\n            } else {\n                console.error(\"No tracks returned from playlistService\");\n                setError(\"No tracks available\");\n            }\n        } catch (err) {\n            console.error(\"Error loading playlist:\", err);\n            setError(\"Failed to load playlist\");\n        }\n    }, []);\n\n    // Initialize WaveSurfer\n    useEffect(() => {\n        if (!isHomePage || !waveformRef.current || !audioRef.current) return;\n        \n        // Cleanup previous instance if it exists\n        if (wavesurferInstance) {\n            wavesurferInstance.destroy();\n        }\n        \n        console.log(\"Initializing WaveSurfer\");\n        \n        try {\n            const wavesurfer = WaveSurfer.create({\n                container: waveformRef.current,\n                waveColor: '#999',\n                progressColor: '#f50',\n                cursorColor: 'transparent',\n                barWidth: 2,\n                barHeight: 1,\n                responsive: true,\n                height: 80,\n                barGap: 2,\n                normalize: true,\n                partialRender: true,\n                hideScrollbar: true,\n                backend: 'WebAudio', // Try WebAudio backend instead\n                xhr: {\n                    cache: 'default',\n                    mode: 'cors',\n                    method: 'GET',\n                    credentials: 'same-origin',\n                    headers: [\n                        { key: 'Cache-Control', value: 'no-cache' }\n                    ]\n                }\n            });\n            \n            console.log(\"WaveSurfer created:\", wavesurfer);\n            \n            // Handle WaveSurfer events\n            wavesurfer.on('ready', () => {\n                console.log('WaveSurfer is ready, waveform should be visible');\n                if (audioRef.current && audioRef.current.duration) {\n                    const currentProgress = (audioRef.current.currentTime / audioRef.current.duration);\n                    wavesurfer.seekTo(currentProgress);\n                }\n                \n                // Match play state with audio element\n                if (isPlaying && !wavesurfer.isPlaying()) {\n                    wavesurfer.play();\n                }\n            });\n            \n            wavesurfer.on('error', err => {\n                console.error('WaveSurfer error:', err);\n            });\n            \n            // Handle clicks on waveform to seek\n            wavesurfer.on('seek', function(position) {\n                if (audioRef.current && audioRef.current.duration) {\n                    audioRef.current.currentTime = position * audioRef.current.duration;\n                }\n            });\n            \n            // Add additional debug listeners\n            wavesurfer.on('loading', progress => {\n                console.log(`WaveSurfer loading: ${progress}%`);\n            });\n            \n            wavesurfer.on('waveform-ready', () => {\n                console.log('WaveSurfer waveform-ready event fired');\n            });\n            \n            setWavesurferInstance(wavesurfer);\n            \n            // If we already have a loaded track, load it into WaveSurfer\n            if (playlist.length > 0 && currentTrackIndex >= 0) {\n                // Try loading the track URL directly\n                const trackUrl = playlist[currentTrackIndex]?.url;\n                if (trackUrl) {\n                    const fullUrl = getAbsolutePath(trackUrl);\n                    console.log(\"Loading track URL directly into WaveSurfer:\", fullUrl);\n                    \n                    // Adjust settings for WAV files\n                    if (isWavFile(trackUrl)) {\n                        console.log(\"WAV file detected, adjusting settings...\");\n                        wavesurfer.params.backend = 'WebAudio';\n                        wavesurfer.params.minPxPerSec = 50; // More detailed display for WAV\n                    }\n                    \n                    // Set a timeout to ensure DOM is ready\n                    setTimeout(() => {\n                        try {\n                            wavesurfer.load(fullUrl);\n                        } catch (err) {\n                            console.error(\"Error loading track into WaveSurfer:\", err);\n                        }\n                    }, 100);\n                }\n            }\n            \n            // Cleanup on unmount\n            return () => {\n                if (wavesurfer) {\n                    wavesurfer.destroy();\n                }\n            };\n        } catch (err) {\n            console.error(\"Error creating WaveSurfer instance:\", err);\n            return undefined;\n        }\n    }, [isHomePage, playlist.length, audioRef, currentTrackIndex, playlist, isPlaying]);\n\n    // Handle track changes in WaveSurfer\n    useEffect(() => {\n        if (!wavesurferInstance || !isHomePage || playlist.length === 0) return;\n        \n        console.log(\"Track change detected, current track index:\", currentTrackIndex);\n        \n        // Get the track URL directly from the playlist\n        const trackUrl = playlist[currentTrackIndex]?.url;\n        if (trackUrl) {\n            // Create full URL\n            const fullUrl = getAbsolutePath(trackUrl);\n            console.log(\"Loading track directly into WaveSurfer:\", fullUrl);\n            \n            // Add a small delay to ensure everything is ready\n            setTimeout(() => {\n                try {\n                    // Load the track directly\n                    wavesurferInstance.load(fullUrl);\n                    \n                    // Update play state after loading\n                    wavesurferInstance.on('ready', () => {\n                        console.log(\"WaveSurfer ready after track change\");\n                        if (isPlaying) {\n                            console.log(\"Auto-playing after waveform load\");\n                            wavesurferInstance.play();\n                        }\n                    });\n                } catch (err) {\n                    console.error(\"Error loading track into WaveSurfer on track change:\", err);\n                }\n            }, 100);\n        }\n    }, [currentTrackIndex, isHomePage, wavesurferInstance, playlist, isPlaying]);\n\n    // Update WaveSurfer playback state\n    useEffect(() => {\n        if (!wavesurferInstance || !isHomePage) return;\n        \n        if (isPlaying) {\n            wavesurferInstance.play();\n        } else {\n            wavesurferInstance.pause();\n        }\n    }, [isPlaying, wavesurferInstance, isHomePage]);\n\n    useEffect(() => { /* Global Background Effect */\n        // Decide if this should ONLY run on the homepage\n        if (!isHomePage || playlist.length === 0 || isLoading || currentTrackIndex < 0) {\n            // Optional: Restore original body style if navigating away from home\n             if (!isHomePage && originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n             }\n            return; // Don't apply effect if not on home or not ready\n        }\n\n        const currentTrackInfo = playlist[currentTrackIndex];\n        if (!currentTrackInfo || !currentTrackInfo.artwork) return; // Safety check\n\n        // Use artwork path directly \n        const artworkUrl = currentTrackInfo.artwork;\n        console.log(\"Setting background with artwork:\", artworkUrl);\n\n        // Store original styles if not already stored (only on homepage)\n        if (originalBodyStyleRef.current === null) {\n             originalBodyStyleRef.current = {\n                backgroundImage: document.body.style.backgroundImage,\n                backgroundSize: document.body.style.backgroundSize,\n                backgroundPosition: document.body.style.backgroundPosition,\n                backgroundAttachment: document.body.style.backgroundAttachment,\n                minHeight: document.body.style.minHeight,\n                // transition: document.body.style.transition // Be careful storing transition\n            };\n        }\n        // Apply new styles\n        document.body.style.backgroundImage = `url(${artworkUrl})`;\n        document.body.style.backgroundSize = 'cover';\n        document.body.style.backgroundPosition = 'center center';\n        document.body.style.backgroundAttachment = 'fixed';\n        document.body.style.minHeight = '100vh';\n        document.body.style.transition = 'background-image 1s ease-in-out';\n\n        // Cleanup: Restore styles when navigating away *or* component unmounts\n        return () => {\n             if (originalBodyStyleRef.current) {\n                 Object.assign(document.body.style, originalBodyStyleRef.current);\n                 // Optional: Reset ref if you want it re-captured if returning to home\n                 // originalBodyStyleRef.current = null;\n             }\n         };\n    // Add isHomePage to dependencies\n    }, [currentTrackIndex, playlist, isLoading, isHomePage]);\n\n    useEffect(() => { /* Track Loading/Playback */\n        if (playlist.length === 0 || currentTrackIndex < 0) {\n            setIsLoading(true); // Set loading if no playlist/index\n            return;\n        }\n\n        const audio = audioRef.current; if (!audio) return;\n        const track = playlist[currentTrackIndex];\n        if (!track || !track.url) {\n            console.error(\"Invalid track data:\", track);\n            setIsLoading(true);\n            setError(\"Invalid track data\");\n            return; // Skip if track data is invalid\n        }\n\n        setIsLoading(true); // Set loading when changing track\n        const trackUrl = track.url;\n        console.log(\"Loading audio track:\", trackUrl);\n        \n        setError(null); // Clear any previous errors\n        setProgress(0); // Reset progress when changing tracks\n        setDuration(0); // Reset duration\n\n        // Set src only if it's different\n        if (!audio.src.endsWith(trackUrl)) {\n            audio.src = trackUrl;\n            audio.load(); // Load the new source\n        } else if (isPlaying && audio.paused) {\n             // If src is the same but we intend to play, try playing\n            audio.play().catch(e => {\n                console.error(\"Retry play error:\", e);\n                setError(\"Failed to play track\");\n            });\n        }\n\n        const handleCanPlay = () => {\n            console.log(\"Audio can play:\", trackUrl);\n            setIsLoading(false); // Ready to play this track\n            setIsPlayerReady(true); // Mark that the player has loaded at least once\n            setError(null); // Clear any errors since audio is playable\n            setDuration(audio.duration || 0); // Set duration when known\n             if (isPlaying) {\n                 audio.play().catch(e => {\n                     console.error(\"Autoplay error:\", e);\n                     setError(\"Autoplay failed - try clicking play\");\n                 });\n             }\n             // Clean up this specific listener once it fires\n             audio.removeEventListener('canplay', handleCanPlay);\n        };\n\n        const handleEnded = () => {\n            console.log(\"Track ended\");\n            setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n            // Playback will resume via the isPlaying state in the next canplay event\n        };\n\n        const handleTimeUpdate = () => {\n            if (audio.duration) {\n                const currentProgress = (audio.currentTime / audio.duration) * 100;\n                setProgress(currentProgress);\n                \n                // Update wavesurfer progress if available\n                if (wavesurferInstance && isHomePage) {\n                    wavesurferInstance.seekTo(audio.currentTime / audio.duration);\n                }\n            }\n        };\n\n        const handleDurationChange = () => {\n            setDuration(audio.duration || 0);\n        };\n\n        // Clear previous listeners before adding new ones for this track\n        audio.removeEventListener('canplay', handleCanPlay);\n        audio.removeEventListener('ended', handleEnded);\n        audio.removeEventListener('timeupdate', handleTimeUpdate);\n        audio.removeEventListener('durationchange', handleDurationChange);\n\n        audio.addEventListener('canplay', handleCanPlay);\n        audio.addEventListener('ended', handleEnded);\n        audio.addEventListener('timeupdate', handleTimeUpdate);\n        audio.addEventListener('durationchange', handleDurationChange);\n\n        return () => { // Cleanup listeners when track changes or component unmounts\n            audio.removeEventListener('canplay', handleCanPlay);\n            audio.removeEventListener('ended', handleEnded);\n            audio.removeEventListener('timeupdate', handleTimeUpdate);\n            audio.removeEventListener('durationchange', handleDurationChange);\n        };\n    // Add isPlaying dependency: if isPlaying changes to true, we want the effect to re-run and potentially call play()\n    }, [currentTrackIndex, playlist, isPlaying, wavesurferInstance, isHomePage]);\n\n\n    useEffect(() => { /* Audio State Sync Events */\n        const audio = audioRef.current; if (!audio) return;\n\n        const handlePlay = () => {\n            setIsPlaying(true);\n        };\n        \n        const handlePause = () => {\n            setIsPlaying(false);\n        };\n        \n        const handleError = (e) => {\n            console.error(\"Audio error:\", e, \"Current track:\", playlist[currentTrackIndex]);\n            setIsLoading(false); // Stop loading on error\n            setIsPlaying(false);\n            setError(`Error playing track: ${playlist[currentTrackIndex]?.title} - file may be missing at path: ${playlist[currentTrackIndex]?.url}`);\n        };\n\n        // Set initial state based on audio element (covers browser controls)\n        setIsPlaying(!audio.paused);\n\n        audio.addEventListener('play', handlePlay);\n        audio.addEventListener('pause', handlePause);\n        audio.addEventListener('error', handleError);\n\n        return () => { // Cleanup on unmount\n            audio.removeEventListener('play', handlePlay);\n            audio.removeEventListener('pause', handlePause);\n            audio.removeEventListener('error', handleError);\n        };\n    }, [playlist.length, currentTrackIndex]); \n\n    // Debugging helper for tracks\n    useEffect(() => {\n        if (isHomePage && playlist.length > 0 && currentTrackIndex >= 0) {\n            const track = playlist[currentTrackIndex];\n            if (track) {\n                console.log(\"Current track details:\", {\n                    title: track.title,\n                    artist: track.artist,\n                    url: track.url,\n                    absoluteUrl: getAbsolutePath(track.url),\n                    artwork: track.artwork\n                });\n                \n                // Log the audio element state\n                if (audioRef.current) {\n                    console.log(\"Audio element state:\", {\n                        src: audioRef.current.src,\n                        paused: audioRef.current.paused,\n                        currentTime: audioRef.current.currentTime,\n                        duration: audioRef.current.duration\n                    });\n                }\n                \n                // Check the WaveSurfer container\n                if (waveformRef.current) {\n                    console.log(\"WaveSurfer container:\", {\n                        element: waveformRef.current,\n                        width: waveformRef.current.offsetWidth,\n                        height: waveformRef.current.offsetHeight,\n                        children: waveformRef.current.children.length\n                    });\n                }\n            }\n        }\n    }, [isHomePage, playlist, currentTrackIndex, wavesurferInstance]);\n\n    // --- Control Functions ---\n    const togglePlay = () => {\n        const audio = audioRef.current;\n        if (!audio || playlist.length === 0 || isLoading) return; // Don't toggle if loading or no playlist\n\n        if (audio.paused) {\n             // We set isPlaying to true, the effect hook will handle the actual audio.play()\n            setIsPlaying(true);\n            audio.play().catch(error => { \n                console.error(\"Playback error:\", error); \n                setIsPlaying(false); \n                setError(\"Failed to play audio\");\n            }); // Also try direct play\n        } else {\n            audio.pause();\n            setIsPlaying(false); // Immediately reflect pause intent\n        }\n    };\n\n    // For next/prev track in bottom player\n    const playNextTrack = () => {\n        setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n\n    const playPreviousTrack = () => {\n        setCurrentTrackIndex(prev => \n            prev === 0 ? playlist.length - 1 : prev - 1\n        );\n    };\n\n    // Format time function for displaying current time and duration\n    const formatTime = (seconds) => {\n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n    };\n\n    // --- Render Logic ---\n\n    // Always render the audio tag - THIS IS KEY FOR PERSISTENCE\n    const audioTag = <audio ref={audioRef} preload=\"metadata\" />;\n\n    // Handle loading state and errors\n    if (error && playlist.length === 0) {\n        // Critical error - no playlist available\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>{error}</p>\n                    <button onClick={() => window.location.reload()}>Reload Page</button>\n                </div>\n            </>\n        );\n    }\n\n    // Don't render full UI until the player has loaded something\n    if (!isPlayerReady && isLoading) {\n        return (\n            <>\n                {audioTag}\n                <div className=\"initial-loading\">Loading Radio...</div>\n            </>\n        );\n    }\n\n    // We have a playlist and player is ready, get current track info\n    const currentTrackInfo = playlist[currentTrackIndex];\n    if (!currentTrackInfo) {\n        // Handle case where index might be invalid temporarily\n        return (\n            <>\n                {audioTag}\n                <div className=\"player-error\">\n                    <p>No track selected</p>\n                </div>\n            </>\n        );\n    }\n\n    // All good, display the track info\n    const artworkUrl = currentTrackInfo.artwork || 'artwork/default-artwork.png'; // Fallback\n    const currentTime = audioRef.current ? audioRef.current.currentTime : 0;\n\n    // --- Conditional UI Rendering ---\n    return (\n        <>\n            {audioTag} {/* Audio tag is always rendered */}\n\n            {isHomePage ? (\n                // --- Main Player UI on HomePage (more like original with waveform) ---\n                <div className=\"player-container\">\n                    <div className=\"player-ui-container\">\n                        {isLoading && <div className=\"loading-overlay\">Loading...</div>}\n                        {error && <div className=\"error-overlay\">{error}</div>}\n                        \n                        {/* Centered artwork section */}\n                        <div \n                            className=\"player-artwork\"\n                            style={{ backgroundImage: `url(${artworkUrl})` }}\n                        ></div>\n                        \n                        <div className=\"player-track-details\">\n                            <h2>{currentTrackInfo.title}</h2>\n                            {currentTrackInfo.artist && <p>{currentTrackInfo.artist}</p>}\n                            \n                            {/* Add scheduled time display if available */}\n                            {currentTrackInfo.scheduledTime && (\n                                <p className=\"scheduled-time\">\n                                    Scheduled: {new Date(currentTrackInfo.scheduledTime).toLocaleString()}\n                                </p>\n                            )}\n                        </div>\n                        \n                        {/* Waveform visualization with native WaveSurfer */}\n                        <div className=\"player-waveform-container\">\n                            <div ref={waveformRef} className=\"waveform\"></div>\n                        </div>\n                        \n                        <div className=\"player-controls-centered\">\n                            <div className=\"control-button-placeholder\"></div>\n                            <button onClick={togglePlay} disabled={isLoading} className=\"control-button play-pause-main\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                                {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                            </button>\n                            <div className=\"control-button-placeholder\"></div>\n                        </div>\n                        \n                        {/* Time display */}\n                        <div className=\"player-time\">\n                            {formatTime(currentTime)} / Live Radio\n                        </div>\n                    </div>\n                    \n                    {/* Comment section below the player */}\n                    <div className=\"player-comment-section\">\n                        <div className=\"player-comment-header\">\n                            <h3 className=\"player-comment-title\">Comments</h3>\n                        </div>\n                        <CommentSection user={user} currentTrack={currentTrackInfo} />\n                    </div>\n                </div>\n            ) : (\n                // --- Render Bottom Player Bar on Other Pages (keep improvements) ---\n                <div className=\"bottom-player-bar\">\n                    {/* Progress bar at the top */}\n                    <div \n                        className=\"bottom-player-progress\" \n                        style={{ width: `${progress}%` }}\n                    ></div>\n                    \n                    <div className=\"bottom-player-left\">\n                        <img src={artworkUrl} alt=\"\" className=\"bottom-player-artwork\" />\n                        <div className=\"bottom-player-info\">\n                            <div className=\"bottom-player-title\">{currentTrackInfo.title}</div>\n                            {currentTrackInfo.artist && <div className=\"bottom-player-artist\">{currentTrackInfo.artist}</div>}\n                            {error && <div className=\"bottom-player-error\">{error}</div>}\n                        </div>\n                    </div>\n                    <div className=\"bottom-player-controls\">\n                        <button onClick={playPreviousTrack} className=\"bottom-player-prevnext\" aria-label=\"Previous track\">\n                            ⏮\n                        </button>\n                        <button onClick={togglePlay} disabled={isLoading} className=\"bottom-player-playpause\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                            {isLoading ? '...' : (isPlaying ? '❙❙' : '▶')}\n                        </button>\n                        <button onClick={playNextTrack} className=\"bottom-player-prevnext\" aria-label=\"Next track\">\n                            ⏭\n                        </button>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}