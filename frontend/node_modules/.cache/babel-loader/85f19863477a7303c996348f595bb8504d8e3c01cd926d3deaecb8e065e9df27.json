{"ast":null,"code":"// src/services/playlistService.js\n\nconst playlistService = (() => {\n  // Mock playlist data\n  // In a real app, this would come from your API\n  let playlist = [{\n    id: 1,\n    title: \"Sunset Melody\",\n    artist: \"Electronic Dreams\",\n    url: \"/tracks/track1.mp3\",\n    // Use path that doesn't require 'public/' prefix replacement\n    artwork: \"/artwork/cover1.jpg\",\n    scheduledTime: new Date(Date.now() + 3600000).toISOString() // 1 hour from now\n  }, {\n    id: 2,\n    title: \"Ocean Waves\",\n    artist: \"Ambient Vibes\",\n    url: \"/tracks/track2.mp3\",\n    artwork: \"/artwork/cover2.jpg\",\n    scheduledTime: new Date(Date.now() + 7200000).toISOString() // 2 hours from now\n  }, {\n    id: 3,\n    title: \"Urban Beat\",\n    artist: \"City Sounds\",\n    url: \"/tracks/track3.mp3\",\n    artwork: \"/artwork/cover3.jpg\",\n    scheduledTime: new Date(Date.now() + 10800000).toISOString() // 3 hours from now\n  }];\n  return {\n    getPlaylist: () => {\n      console.log(\"Playlist requested, returning:\", playlist);\n      return playlist;\n    },\n    addTrack: track => {\n      track.id = playlist.length ? playlist[playlist.length - 1].id + 1 : 1;\n      playlist.push(track);\n      return track;\n    },\n    removeTrack: id => {\n      playlist = playlist.filter(track => track.id !== id);\n    },\n    getTrackById: id => {\n      return playlist.find(track => track.id === id);\n    }\n  };\n})();\nexport default playlistService;","map":{"version":3,"names":["playlistService","playlist","id","title","artist","url","artwork","scheduledTime","Date","now","toISOString","getPlaylist","console","log","addTrack","track","length","push","removeTrack","filter","getTrackById","find"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/services/playlistService.js"],"sourcesContent":["// src/services/playlistService.js\n\nconst playlistService = (() => {\n  // Mock playlist data\n  // In a real app, this would come from your API\n  let playlist = [\n    {\n      id: 1,\n      title: \"Sunset Melody\",\n      artist: \"Electronic Dreams\",\n      url: \"/tracks/track1.mp3\", // Use path that doesn't require 'public/' prefix replacement\n      artwork: \"/artwork/cover1.jpg\",\n      scheduledTime: new Date(Date.now() + 3600000).toISOString() // 1 hour from now\n    },\n    {\n      id: 2,\n      title: \"Ocean Waves\",\n      artist: \"Ambient Vibes\",\n      url: \"/tracks/track2.mp3\",\n      artwork: \"/artwork/cover2.jpg\",\n      scheduledTime: new Date(Date.now() + 7200000).toISOString() // 2 hours from now\n    },\n    {\n      id: 3,\n      title: \"Urban Beat\",\n      artist: \"City Sounds\",\n      url: \"/tracks/track3.mp3\",\n      artwork: \"/artwork/cover3.jpg\",\n      scheduledTime: new Date(Date.now() + 10800000).toISOString() // 3 hours from now\n    }\n  ];\n\n  return {\n    getPlaylist: () => {\n      console.log(\"Playlist requested, returning:\", playlist);\n      return playlist;\n    },\n\n    addTrack: (track) => {\n      track.id = playlist.length ? playlist[playlist.length - 1].id + 1 : 1;\n      playlist.push(track);\n      return track;\n    },\n\n    removeTrack: (id) => {\n      playlist = playlist.filter((track) => track.id !== id);\n    },\n\n    getTrackById: (id) => {\n      return playlist.find((track) => track.id === id);\n    },\n  };\n})();\n\nexport default playlistService;\n  "],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAG,CAAC,MAAM;EAC7B;EACA;EACA,IAAIC,QAAQ,GAAG,CACb;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,mBAAmB;IAC3BC,GAAG,EAAE,oBAAoB;IAAE;IAC3BC,OAAO,EAAE,qBAAqB;IAC9BC,aAAa,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAC9D,CAAC,EACD;IACER,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,aAAa;IACpBC,MAAM,EAAE,eAAe;IACvBC,GAAG,EAAE,oBAAoB;IACzBC,OAAO,EAAE,qBAAqB;IAC9BC,aAAa,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAC9D,CAAC,EACD;IACER,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,YAAY;IACnBC,MAAM,EAAE,aAAa;IACrBC,GAAG,EAAE,oBAAoB;IACzBC,OAAO,EAAE,qBAAqB;IAC9BC,aAAa,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAC/D,CAAC,CACF;EAED,OAAO;IACLC,WAAW,EAAEA,CAAA,KAAM;MACjBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEZ,QAAQ,CAAC;MACvD,OAAOA,QAAQ;IACjB,CAAC;IAEDa,QAAQ,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACb,EAAE,GAAGD,QAAQ,CAACe,MAAM,GAAGf,QAAQ,CAACA,QAAQ,CAACe,MAAM,GAAG,CAAC,CAAC,CAACd,EAAE,GAAG,CAAC,GAAG,CAAC;MACrED,QAAQ,CAACgB,IAAI,CAACF,KAAK,CAAC;MACpB,OAAOA,KAAK;IACd,CAAC;IAEDG,WAAW,EAAGhB,EAAE,IAAK;MACnBD,QAAQ,GAAGA,QAAQ,CAACkB,MAAM,CAAEJ,KAAK,IAAKA,KAAK,CAACb,EAAE,KAAKA,EAAE,CAAC;IACxD,CAAC;IAEDkB,YAAY,EAAGlB,EAAE,IAAK;MACpB,OAAOD,QAAQ,CAACoB,IAAI,CAAEN,KAAK,IAAKA,KAAK,CAACb,EAAE,KAAKA,EAAE,CAAC;IAClD;EACF,CAAC;AACH,CAAC,EAAE,CAAC;AAEJ,eAAeF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}