{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport playlistService from \"../services/playlistService\";\nimport '../styles/player.css'; // Ensure path is correct\n\n// Keep font face if needed for other text, otherwise remove\n// const fontFaceStyles = `...`;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Player() {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const audioRef = useRef(null);\n  const originalBodyStyleRef = useRef(null);\n\n  // --- Hooks (Loading, Background, Track Loading, Events) remain the same ---\n  useEffect(() => {\n    /* Load Playlist */\n    const tracks = playlistService.getPlaylist();\n    setPlaylist(tracks);\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    /* Global Background Effect */\n    if (playlist.length === 0 || isLoading) return;\n    const currentTrackInfo = playlist[currentTrackIndex];\n    const artworkUrl = process.env.PUBLIC_URL + currentTrackInfo.artwork.replace('public/', '');\n    // Store original styles if not already stored\n    if (originalBodyStyleRef.current === null) {\n      originalBodyStyleRef.current = {/* ... store relevant body styles ... */};\n    }\n    // Apply new styles\n    document.body.style.backgroundImage = `url(${artworkUrl})`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n    document.body.style.minHeight = '100vh';\n    document.body.style.transition = 'background-image 1s ease-in-out';\n    // Cleanup\n    return () => {\n      if (originalBodyStyleRef.current) {/* ... restore body styles ... */}\n    };\n  }, [currentTrackIndex, playlist, isLoading]);\n  useEffect(() => {\n    /* Track Loading/Playback */\n    if (playlist.length === 0 || isLoading) return;\n    const audio = audioRef.current;\n    if (!audio) return;\n    const trackUrl = process.env.PUBLIC_URL + playlist[currentTrackIndex].url.replace('public/', '');\n    audio.src = trackUrl;\n    audio.load();\n    const attemptAutoplay = () => {\n      audio.play().then(/*...*/).catch(/*...*/);\n    };\n    const handleEnded = () => {\n      setCurrentTrackIndex(prev => (prev + 1) % playlist.length);\n    };\n    audio.addEventListener('ended', handleEnded);\n    const canPlayHandler = () => {\n      attemptAutoplay();\n      audio.removeEventListener('canplay', canPlayHandler);\n    };\n    audio.addEventListener('canplay', canPlayHandler);\n    return () => {/* remove listeners */};\n  }, [currentTrackIndex, playlist, isLoading]);\n  useEffect(() => {\n    /* Audio State Events */\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n    const handleError = e => console.error(\"Audio error:\", e);\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('error', handleError);\n    return () => {/* remove listeners */};\n  }, [playlist.length]);\n\n  // --- Control Functions ---\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play().catch(error => {\n        console.error(\"Playback error:\", error);\n        setIsPlaying(false);\n      });\n    }\n  };\n  const rewind15Seconds = () => {\n    const audio = audioRef.current;\n    if (audio) {\n      audio.currentTime = Math.max(0, audio.currentTime - 15); // Go back 15s, but not before 0\n    }\n  };\n\n  // --- Loading State ---\n  if (isLoading || playlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container alt-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Station...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n\n  // --- Render Centered Player UI ---\n  const currentTrackInfo = playlist[currentTrackIndex];\n  const artworkUrl = process.env.PUBLIC_URL + currentTrackInfo.artwork.replace('public/', ''); // Need URL here too for artwork div\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-ui-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-artwork\",\n        style: {\n          backgroundImage: `url(${artworkUrl})`\n        } // Set artwork here\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-track-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentTrackInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), currentTrackInfo.artist && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentTrackInfo.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls-centered\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: rewind15Seconds,\n          className: \"control-button rewind-button\",\n          \"aria-label\": \"Rewind 15 seconds\",\n          children: \"\\u21BA15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          className: \"control-button play-pause-main\",\n          \"aria-label\": isPlaying ? \"Pause\" : \"Play\",\n          children: isPlaying ? '❙❙' : '▶'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-button-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"hHumBdoEfqNfOZU/P0VYar7bevk=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","playlistService","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","_s","playlist","setPlaylist","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","isLoading","setIsLoading","audioRef","originalBodyStyleRef","tracks","getPlaylist","length","currentTrackInfo","artworkUrl","process","env","PUBLIC_URL","artwork","replace","current","document","body","style","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","minHeight","transition","audio","trackUrl","url","src","load","attemptAutoplay","play","then","catch","handleEnded","prev","addEventListener","canPlayHandler","removeEventListener","handlePlay","handlePause","handleError","e","console","error","togglePlay","pause","rewind15Seconds","currentTime","Math","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","preload","title","artist","onClick","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport playlistService from \"../services/playlistService\";\nimport '../styles/player.css'; // Ensure path is correct\n\n// Keep font face if needed for other text, otherwise remove\n// const fontFaceStyles = `...`;\n\nfunction Player() {\n    const [playlist, setPlaylist] = useState([]);\n    const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const audioRef = useRef(null);\n    const originalBodyStyleRef = useRef(null);\n\n    // --- Hooks (Loading, Background, Track Loading, Events) remain the same ---\n    useEffect(() => { /* Load Playlist */\n        const tracks = playlistService.getPlaylist();\n        setPlaylist(tracks); setIsLoading(false);\n    }, []);\n\n    useEffect(() => { /* Global Background Effect */\n        if (playlist.length === 0 || isLoading) return;\n        const currentTrackInfo = playlist[currentTrackIndex];\n        const artworkUrl = process.env.PUBLIC_URL + currentTrackInfo.artwork.replace('public/', '');\n        // Store original styles if not already stored\n        if (originalBodyStyleRef.current === null) {\n             originalBodyStyleRef.current = { /* ... store relevant body styles ... */ };\n        }\n        // Apply new styles\n        document.body.style.backgroundImage = `url(${artworkUrl})`;\n        document.body.style.backgroundSize = 'cover';\n        document.body.style.backgroundPosition = 'center center';\n        document.body.style.backgroundAttachment = 'fixed';\n        document.body.style.minHeight = '100vh';\n        document.body.style.transition = 'background-image 1s ease-in-out';\n        // Cleanup\n        return () => { if (originalBodyStyleRef.current) { /* ... restore body styles ... */ } };\n    }, [currentTrackIndex, playlist, isLoading]);\n\n    useEffect(() => { /* Track Loading/Playback */\n        if (playlist.length === 0 || isLoading) return;\n        const audio = audioRef.current; if (!audio) return;\n        const trackUrl = process.env.PUBLIC_URL + playlist[currentTrackIndex].url.replace('public/', '');\n        audio.src = trackUrl; audio.load();\n        const attemptAutoplay = () => { audio.play().then(/*...*/).catch(/*...*/); };\n        const handleEnded = () => { setCurrentTrackIndex(prev => (prev + 1) % playlist.length); };\n        audio.addEventListener('ended', handleEnded);\n        const canPlayHandler = () => { attemptAutoplay(); audio.removeEventListener('canplay', canPlayHandler); }\n        audio.addEventListener('canplay', canPlayHandler);\n        return () => { /* remove listeners */ };\n    }, [currentTrackIndex, playlist, isLoading]);\n\n    useEffect(() => { /* Audio State Events */\n        const audio = audioRef.current; if (!audio) return;\n        const handlePlay = () => setIsPlaying(true); const handlePause = () => setIsPlaying(false); const handleError = (e) => console.error(\"Audio error:\", e);\n        audio.addEventListener('play', handlePlay); audio.addEventListener('pause', handlePause); audio.addEventListener('error', handleError);\n        return () => { /* remove listeners */ };\n    }, [playlist.length]);\n\n    // --- Control Functions ---\n    const togglePlay = () => {\n        const audio = audioRef.current; if (!audio) return;\n        if (isPlaying) { audio.pause(); }\n        else { audio.play().catch(error => { console.error(\"Playback error:\", error); setIsPlaying(false); }); }\n    };\n\n    const rewind15Seconds = () => {\n        const audio = audioRef.current;\n        if (audio) {\n            audio.currentTime = Math.max(0, audio.currentTime - 15); // Go back 15s, but not before 0\n        }\n    };\n\n    // --- Loading State ---\n    if (isLoading || playlist.length === 0) {\n        return <div className=\"loading-container alt-loading\"><p>Loading Station...</p></div>;\n    }\n\n    // --- Render Centered Player UI ---\n    const currentTrackInfo = playlist[currentTrackIndex];\n    const artworkUrl = process.env.PUBLIC_URL + currentTrackInfo.artwork.replace('public/', ''); // Need URL here too for artwork div\n\n    return (\n        <>\n            {/* Inject font styles if needed globally */}\n            {/* <style dangerouslySetInnerHTML={{ __html: fontFaceStyles }} /> */}\n\n            <audio ref={audioRef} preload=\"metadata\" />\n\n            {/* Main container for the centered UI */}\n            <div className=\"player-ui-container\">\n\n                {/* Artwork Display within the UI */}\n                <div\n                    className=\"player-artwork\"\n                    style={{ backgroundImage: `url(${artworkUrl})` }} // Set artwork here\n                ></div>\n\n                {/* Track Details */}\n                <div className=\"player-track-details\">\n                    <h2>{currentTrackInfo.title}</h2>\n                    {currentTrackInfo.artist && <p>{currentTrackInfo.artist}</p>}\n                </div>\n\n                {/* Player Controls */}\n                <div className=\"player-controls-centered\">\n                    <button onClick={rewind15Seconds} className=\"control-button rewind-button\" aria-label=\"Rewind 15 seconds\">\n                        {/* Use an icon font/SVG here ideally, text fallback: */}\n                        ↺15\n                    </button>\n                    <button onClick={togglePlay} className=\"control-button play-pause-main\" aria-label={isPlaying ? \"Pause\" : \"Play\"}>\n                        {/* Use icon font/SVG ideally */}\n                        {isPlaying ? '❙❙' : '▶'}\n                         {/* Using slightly different icons */}\n                    </button>\n                    {/* Add a placeholder for visual balance if needed, or a forward skip? */}\n                    <div className=\"control-button-placeholder\"></div>\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}