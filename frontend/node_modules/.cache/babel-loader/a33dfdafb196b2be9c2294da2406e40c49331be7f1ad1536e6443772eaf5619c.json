{"ast":null,"code":"var _jsxFileName = \"/Users/new/Downloads/Projects/online-radio-station/frontend/src/components/SubmitPostForm.js\",\n  _s = $RefreshSig$();\n// src/components/SubmitPostForm.js\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios'; // For API calls\nimport { useDropzone } from 'react-dropzone';\nimport '../styles/SubmitPostForm.css'; // Create this CSS file\n\n// --- MOCK API FUNCTIONS ---\n// ** REPLACE these with your actual API calls **\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function uploadFile(file) {\n  console.log('Uploading file:', file.name);\n  // Simulate upload delay\n  await new Promise(resolve => setTimeout(resolve, 1500));\n\n  // Create FormData to send the file\n  const formData = new FormData();\n  formData.append('file', file); // 'file' should match your backend's expected field name\n\n  try {\n    // ** REPLACE WITH YOUR ACTUAL UPLOAD ENDPOINT **\n    // const response = await axios.post('/api/upload', formData, {\n    //   headers: {\n    //     'Content-Type': 'multipart/form-data',\n    //   }\n    // });\n    // return response.data; // Assuming backend returns { url: '...' } or { fileId: '...' }\n\n    // --- Mock Response ---\n    const mockUrl = `/uploads/mock-${Date.now()}-${file.name.replace(/\\s+/g, '_')}`;\n    console.log('Mock upload success:', mockUrl);\n    return {\n      url: mockUrl,\n      filename: file.name\n    }; // Return URL and original filename\n    // --- End Mock Response ---\n  } catch (error) {\n    console.error(\"File upload failed:\", error);\n    throw error; // Re-throw error to be caught in handleSubmit\n  }\n}\nasync function submitArtistContent(submissionData) {\n  console.log('Submitting artist content:', submissionData);\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  try {\n    // ** REPLACE WITH YOUR ACTUAL SUBMISSION ENDPOINT **\n    // const response = await axios.post('/api/submissions', submissionData);\n    // return response.data;\n\n    // --- Mock Response ---\n    const mockResponse = {\n      ...submissionData,\n      id: Date.now(),\n      submittedAt: new Date().toISOString(),\n      status: 'pending'\n    };\n    console.log('Mock submission success:', mockResponse);\n    return mockResponse;\n    // --- End Mock Response ---\n  } catch (error) {\n    console.error(\"Submission failed:\", error);\n    throw error; // Re-throw error\n  }\n}\n\n// --- END MOCK API FUNCTIONS ---\n\nfunction SubmitPostForm() {\n  _s();\n  const [submissionType, setSubmissionType] = useState('music'); // Default type\n  const [artistName, setArtistName] = useState('');\n  const [artistEmail, setArtistEmail] = useState('');\n  const [trackTitle, setTrackTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [files, setFiles] = useState([]); // Store file objects for upload\n  const [artworkFiles, setArtworkFiles] = useState([]); // Store artwork files separately\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Audio/Music dropzone\n  const onDropAudio = useCallback(acceptedFiles => {\n    console.log('Accepted audio files:', acceptedFiles);\n    const validFiles = acceptedFiles.filter(file => file.type.startsWith('audio/'));\n    if (validFiles.length !== acceptedFiles.length) {\n      setError(`Invalid file type(s). Please upload audio files only.`);\n    } else {\n      setError(null);\n      setFiles(validFiles);\n    }\n  }, []);\n\n  // Artwork dropzone\n  const onDropArtwork = useCallback(acceptedFiles => {\n    console.log('Accepted artwork files:', acceptedFiles);\n    const validFiles = acceptedFiles.filter(file => file.type.startsWith('image/'));\n    if (validFiles.length !== acceptedFiles.length) {\n      setError(`Invalid file type(s). Please upload image files only.`);\n    } else {\n      setError(null);\n      setArtworkFiles(validFiles);\n    }\n  }, []);\n\n  // Visual media dropzone (photos/videos)\n  const onDropVisual = useCallback(acceptedFiles => {\n    console.log('Accepted visual files:', acceptedFiles);\n    const validFiles = acceptedFiles.filter(file => file.type.startsWith('image/') || file.type.startsWith('video/'));\n    if (validFiles.length !== acceptedFiles.length) {\n      setError(`Invalid file type(s). Please upload image or video files only.`);\n    } else {\n      setError(null);\n      setFiles(validFiles);\n    }\n  }, []);\n\n  // Configure dropzones based on submission type\n  const audioDropzone = useDropzone({\n    onDrop: onDropAudio,\n    accept: {\n      'audio/*': ['.mp3', '.wav', '.ogg']\n    },\n    multiple: false\n  });\n  const artworkDropzone = useDropzone({\n    onDrop: onDropArtwork,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp']\n    },\n    multiple: false\n  });\n  const visualDropzone = useDropzone({\n    onDrop: onDropVisual,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp'],\n      'video/*': ['.mp4', '.webm', '.ogg']\n    },\n    multiple: true\n  });\n  const handleTypeChange = type => {\n    setSubmissionType(type);\n    setFiles([]);\n    setArtworkFiles([]);\n    setError(null);\n    setSuccessMessage('');\n  };\n  const removeFile = (fileArray, setFileArray, index) => {\n    setFileArray(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    setError(null);\n    setSuccessMessage('');\n\n    // Basic Validation\n    if (!artistName) {\n      setError('Please enter your name.');\n      setIsSubmitting(false);\n      return;\n    }\n    if (!artistEmail || !/\\S+@\\S+\\.\\S+/.test(artistEmail)) {\n      setError('Please enter a valid email address.');\n      setIsSubmitting(false);\n      return;\n    }\n    if (submissionType === 'music') {\n      if (files.length === 0) {\n        setError('Please upload an audio file.');\n        setIsSubmitting(false);\n        return;\n      }\n      if (artworkFiles.length === 0) {\n        setError('Please upload artwork for your audio.');\n        setIsSubmitting(false);\n        return;\n      }\n      if (!trackTitle) {\n        setError('Please enter a track title.');\n        setIsSubmitting(false);\n        return;\n      }\n    } else if (submissionType === 'visual' && files.length === 0) {\n      setError('Please upload at least one photo or video.');\n      setIsSubmitting(false);\n      return;\n    }\n    try {\n      // Upload files\n      let uploadedFiles = [];\n      let uploadedArtwork = null;\n\n      // Upload main files (audio or visual)\n      const fileUploadPromises = files.map(file => uploadFile(file));\n      uploadedFiles = await Promise.all(fileUploadPromises);\n\n      // Upload artwork if it's a music submission\n      if (submissionType === 'music' && artworkFiles.length > 0) {\n        uploadedArtwork = await uploadFile(artworkFiles[0]);\n      }\n\n      // Prepare submission data\n      const submissionData = {\n        type: submissionType,\n        artistName,\n        email: artistEmail,\n        title: trackTitle || 'Untitled',\n        description,\n        files: uploadedFiles.map(f => {\n          var _files$find;\n          return {\n            url: f.url,\n            filename: f.filename,\n            type: ((_files$find = files.find(file => file.name === f.filename)) === null || _files$find === void 0 ? void 0 : _files$find.type) || ''\n          };\n        }),\n        artwork: uploadedArtwork ? uploadedArtwork.url : null\n      };\n\n      // Submit to backend\n      const submission = await submitArtistContent(submissionData);\n      setSuccessMessage(`Thank you for your submission! We'll review it and get back to you at ${artistEmail} if it's approved.`);\n\n      // Reset form\n      setArtistName('');\n      setArtistEmail('');\n      setTrackTitle('');\n      setDescription('');\n      setFiles([]);\n      setArtworkFiles([]);\n    } catch (err) {\n      console.error(\"Submission failed:\", err);\n      setError(err.message || 'An error occurred during submission.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Render file previews\n  const renderFilePreviews = (fileArray, setFileArray) => {\n    return fileArray.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-preview\",\n      children: [file.type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(file),\n        alt: `Preview ${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview-icon\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: file.type.startsWith('audio/') ? 'ðŸŽµ' : file.type.startsWith('video/') ? 'ðŸŽ¬' : 'ðŸ“„'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removeFile(fileArray, setFileArray, index),\n        className: \"remove-file-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 6\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submit-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit Your Work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"submission-intro\",\n      children: \"Share your creative work with our community. Selected submissions will be featured on our radio station.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission-type-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `type-btn ${submissionType === 'music' ? 'active' : ''}`,\n        onClick: () => handleTypeChange('music'),\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `type-btn ${submissionType === 'visual' ? 'active' : ''}`,\n        onClick: () => handleTypeChange('visual'),\n        children: \"Photo/Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"artistName\",\n          children: \"Your Name/Artist Name*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"artistName\",\n          value: artistName,\n          onChange: e => setArtistName(e.target.value),\n          placeholder: \"Enter your name or artist name\",\n          disabled: isSubmitting,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"artistEmail\",\n          children: \"Email*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"artistEmail\",\n          value: artistEmail,\n          onChange: e => setArtistEmail(e.target.value),\n          placeholder: \"Your email address\",\n          disabled: isSubmitting,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"We'll send you a notification if your submission is approved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), submissionType === 'music' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"trackTitle\",\n            children: \"Track Title*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"trackTitle\",\n            value: trackTitle,\n            onChange: e => setTrackTitle(e.target.value),\n            placeholder: \"Title of your track\",\n            disabled: isSubmitting,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Audio File*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...audioDropzone.getRootProps(),\n            className: `dropzone ${audioDropzone.isDragActive ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...audioDropzone.getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), audioDropzone.isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drop the audio file here ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop your audio file here, or click to select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"aside\", {\n            className: \"file-previews-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Selected Audio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this), renderFilePreviews(files, setFiles)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Track Artwork*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...artworkDropzone.getRootProps(),\n            className: `dropzone ${artworkDropzone.isDragActive ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...artworkDropzone.getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), artworkDropzone.isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drop the artwork here ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop your track artwork here, or click to select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), artworkFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"aside\", {\n            className: \"file-previews-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Selected Artwork:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this), renderFilePreviews(artworkFiles, setArtworkFiles)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), submissionType === 'visual' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Photos/Videos*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...visualDropzone.getRootProps(),\n          className: `dropzone ${visualDropzone.isDragActive ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...visualDropzone.getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), visualDropzone.isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drop the files here ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop your photos/videos here, or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"file-previews-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Selected Files:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 22\n          }, this), renderFilePreviews(files, setFiles)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Tell us about your submission (optional)\",\n          disabled: isSubmitting,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"submit-button\",\n          children: isSubmitting ? 'Submitting...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(SubmitPostForm, \"0N3dgqB/3/YKWifbRLbXjDY9HUU=\", false, function () {\n  return [useDropzone, useDropzone, useDropzone];\n});\n_c = SubmitPostForm;\nexport default SubmitPostForm;\nvar _c;\n$RefreshReg$(_c, \"SubmitPostForm\");","map":{"version":3,"names":["React","useState","useCallback","axios","useDropzone","jsxDEV","_jsxDEV","Fragment","_Fragment","uploadFile","file","console","log","name","Promise","resolve","setTimeout","formData","FormData","append","mockUrl","Date","now","replace","url","filename","error","submitArtistContent","submissionData","mockResponse","id","submittedAt","toISOString","status","SubmitPostForm","_s","submissionType","setSubmissionType","artistName","setArtistName","artistEmail","setArtistEmail","trackTitle","setTrackTitle","description","setDescription","files","setFiles","artworkFiles","setArtworkFiles","isSubmitting","setIsSubmitting","setError","successMessage","setSuccessMessage","onDropAudio","acceptedFiles","validFiles","filter","type","startsWith","length","onDropArtwork","onDropVisual","audioDropzone","onDrop","accept","multiple","artworkDropzone","visualDropzone","handleTypeChange","removeFile","fileArray","setFileArray","index","prev","_","i","handleSubmit","event","preventDefault","test","uploadedFiles","uploadedArtwork","fileUploadPromises","map","all","email","title","f","_files$find","find","artwork","submission","err","message","renderFilePreviews","className","children","src","URL","createObjectURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","value","onChange","e","target","placeholder","disabled","required","getRootProps","isDragActive","getInputProps","rows","_c","$RefreshReg$"],"sources":["/Users/new/Downloads/Projects/online-radio-station/frontend/src/components/SubmitPostForm.js"],"sourcesContent":["// src/components/SubmitPostForm.js\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios'; // For API calls\nimport { useDropzone } from 'react-dropzone';\nimport '../styles/SubmitPostForm.css'; // Create this CSS file\n\n// --- MOCK API FUNCTIONS ---\n// ** REPLACE these with your actual API calls **\nasync function uploadFile(file) {\n  console.log('Uploading file:', file.name);\n  // Simulate upload delay\n  await new Promise(resolve => setTimeout(resolve, 1500));\n\n  // Create FormData to send the file\n  const formData = new FormData();\n  formData.append('file', file); // 'file' should match your backend's expected field name\n\n  try {\n    // ** REPLACE WITH YOUR ACTUAL UPLOAD ENDPOINT **\n    // const response = await axios.post('/api/upload', formData, {\n    //   headers: {\n    //     'Content-Type': 'multipart/form-data',\n    //   }\n    // });\n    // return response.data; // Assuming backend returns { url: '...' } or { fileId: '...' }\n\n    // --- Mock Response ---\n    const mockUrl = `/uploads/mock-${Date.now()}-${file.name.replace(/\\s+/g, '_')}`;\n    console.log('Mock upload success:', mockUrl);\n    return { url: mockUrl, filename: file.name }; // Return URL and original filename\n    // --- End Mock Response ---\n\n  } catch (error) {\n    console.error(\"File upload failed:\", error);\n    throw error; // Re-throw error to be caught in handleSubmit\n  }\n}\n\nasync function submitArtistContent(submissionData) {\n   console.log('Submitting artist content:', submissionData);\n   // Simulate API delay\n   await new Promise(resolve => setTimeout(resolve, 1000));\n\n   try {\n     // ** REPLACE WITH YOUR ACTUAL SUBMISSION ENDPOINT **\n     // const response = await axios.post('/api/submissions', submissionData);\n     // return response.data;\n\n     // --- Mock Response ---\n      const mockResponse = { \n        ...submissionData, \n        id: Date.now(), \n        submittedAt: new Date().toISOString(),\n        status: 'pending'\n      };\n      console.log('Mock submission success:', mockResponse);\n      return mockResponse;\n     // --- End Mock Response ---\n\n   } catch (error) {\n      console.error(\"Submission failed:\", error);\n      throw error; // Re-throw error\n   }\n}\n\n// --- END MOCK API FUNCTIONS ---\n\nfunction SubmitPostForm() {\n  const [submissionType, setSubmissionType] = useState('music'); // Default type\n  const [artistName, setArtistName] = useState('');\n  const [artistEmail, setArtistEmail] = useState('');\n  const [trackTitle, setTrackTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [files, setFiles] = useState([]); // Store file objects for upload\n  const [artworkFiles, setArtworkFiles] = useState([]); // Store artwork files separately\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Audio/Music dropzone\n  const onDropAudio = useCallback(acceptedFiles => {\n    console.log('Accepted audio files:', acceptedFiles);\n    const validFiles = acceptedFiles.filter(file => \n      file.type.startsWith('audio/')\n    );\n\n    if(validFiles.length !== acceptedFiles.length){\n      setError(`Invalid file type(s). Please upload audio files only.`);\n    } else {\n      setError(null);\n      setFiles(validFiles);\n    }\n  }, []);\n\n  // Artwork dropzone\n  const onDropArtwork = useCallback(acceptedFiles => {\n    console.log('Accepted artwork files:', acceptedFiles);\n    const validFiles = acceptedFiles.filter(file => \n      file.type.startsWith('image/')\n    );\n\n    if(validFiles.length !== acceptedFiles.length){\n      setError(`Invalid file type(s). Please upload image files only.`);\n    } else {\n      setError(null);\n      setArtworkFiles(validFiles);\n    }\n  }, []);\n\n  // Visual media dropzone (photos/videos)\n  const onDropVisual = useCallback(acceptedFiles => {\n    console.log('Accepted visual files:', acceptedFiles);\n    const validFiles = acceptedFiles.filter(file => \n      file.type.startsWith('image/') || file.type.startsWith('video/')\n    );\n\n    if(validFiles.length !== acceptedFiles.length){\n      setError(`Invalid file type(s). Please upload image or video files only.`);\n    } else {\n      setError(null);\n      setFiles(validFiles);\n    }\n  }, []);\n\n  // Configure dropzones based on submission type\n  const audioDropzone = useDropzone({\n    onDrop: onDropAudio,\n    accept: {\n      'audio/*': ['.mp3', '.wav', '.ogg']\n    },\n    multiple: false\n  });\n\n  const artworkDropzone = useDropzone({\n    onDrop: onDropArtwork,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp']\n    },\n    multiple: false\n  });\n\n  const visualDropzone = useDropzone({\n    onDrop: onDropVisual,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp'],\n      'video/*': ['.mp4', '.webm', '.ogg']\n    },\n    multiple: true\n  });\n\n  const handleTypeChange = (type) => {\n    setSubmissionType(type);\n    setFiles([]);\n    setArtworkFiles([]);\n    setError(null);\n    setSuccessMessage('');\n  };\n\n  const removeFile = (fileArray, setFileArray, index) => {\n    setFileArray(prev => prev.filter((_, i) => i !== index));\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    setError(null);\n    setSuccessMessage('');\n\n    // Basic Validation\n    if (!artistName) {\n      setError('Please enter your name.');\n      setIsSubmitting(false);\n      return;\n    }\n\n    if (!artistEmail || !/\\S+@\\S+\\.\\S+/.test(artistEmail)) {\n      setError('Please enter a valid email address.');\n       setIsSubmitting(false);\n       return;\n    }\n\n    if (submissionType === 'music') {\n      if (files.length === 0) {\n        setError('Please upload an audio file.');\n        setIsSubmitting(false);\n        return;\n      }\n      if (artworkFiles.length === 0) {\n        setError('Please upload artwork for your audio.');\n       setIsSubmitting(false);\n       return;\n     }\n      if (!trackTitle) {\n        setError('Please enter a track title.');\n        setIsSubmitting(false);\n        return;\n     }\n    } else if (submissionType === 'visual' && files.length === 0) {\n      setError('Please upload at least one photo or video.');\n      setIsSubmitting(false);\n      return;\n    }\n\n    try {\n      // Upload files\n      let uploadedFiles = [];\n      let uploadedArtwork = null;\n      \n      // Upload main files (audio or visual)\n      const fileUploadPromises = files.map(file => uploadFile(file));\n      uploadedFiles = await Promise.all(fileUploadPromises);\n      \n      // Upload artwork if it's a music submission\n      if (submissionType === 'music' && artworkFiles.length > 0) {\n        uploadedArtwork = await uploadFile(artworkFiles[0]);\n      }\n\n      // Prepare submission data\n      const submissionData = {\n        type: submissionType,\n        artistName,\n        email: artistEmail,\n        title: trackTitle || 'Untitled',\n        description,\n        files: uploadedFiles.map(f => ({\n          url: f.url,\n          filename: f.filename,\n          type: files.find(file => file.name === f.filename)?.type || ''\n        })),\n        artwork: uploadedArtwork ? uploadedArtwork.url : null\n      };\n\n      // Submit to backend\n      const submission = await submitArtistContent(submissionData);\n\n      setSuccessMessage(`Thank you for your submission! We'll review it and get back to you at ${artistEmail} if it's approved.`);\n      \n      // Reset form\n      setArtistName('');\n      setArtistEmail('');\n      setTrackTitle('');\n      setDescription('');\n      setFiles([]);\n      setArtworkFiles([]);\n\n    } catch (err) {\n      console.error(\"Submission failed:\", err);\n      setError(err.message || 'An error occurred during submission.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Render file previews\n  const renderFilePreviews = (fileArray, setFileArray) => {\n    return fileArray.map((file, index) => (\n     <div key={index} className=\"file-preview\">\n       {file.type.startsWith('image/') ? (\n         <img src={URL.createObjectURL(file)} alt={`Preview ${index}`} />\n       ) : (\n         <div className=\"file-preview-icon\">\n            <span>{file.type.startsWith('audio/') ? 'ðŸŽµ' : (file.type.startsWith('video/') ? 'ðŸŽ¬' : 'ðŸ“„')}</span>\n            <p>{file.name}</p>\n         </div>\n       )}\n        <button \n          type=\"button\" \n          onClick={() => removeFile(fileArray, setFileArray, index)} \n          className=\"remove-file-btn\"\n        >\n          &times;\n        </button>\n     </div>\n   ));\n  };\n\n  return (\n    <div className=\"submit-form-container\">\n      <h2>Submit Your Work</h2>\n      <p className=\"submission-intro\">\n        Share your creative work with our community. Selected submissions will be featured on our radio station.\n      </p>\n\n      {/* Submission Type Selection */}\n      <div className=\"submission-type-selector\">\n        <button\n          type=\"button\"\n          className={`type-btn ${submissionType === 'music' ? 'active' : ''}`}\n          onClick={() => handleTypeChange('music')}\n        >\n          Music\n        </button>\n          <button\n            type=\"button\"\n          className={`type-btn ${submissionType === 'visual' ? 'active' : ''}`}\n          onClick={() => handleTypeChange('visual')}\n          >\n          Photo/Video\n          </button>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        {/* Common Fields */}\n        <div className=\"form-group\">\n          <label htmlFor=\"artistName\">Your Name/Artist Name*</label>\n          <input\n            type=\"text\"\n            id=\"artistName\"\n            value={artistName}\n            onChange={(e) => setArtistName(e.target.value)}\n            placeholder=\"Enter your name or artist name\"\n            disabled={isSubmitting}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"artistEmail\">Email*</label>\n          <input\n            type=\"email\"\n            id=\"artistEmail\"\n            value={artistEmail}\n            onChange={(e) => setArtistEmail(e.target.value)}\n            placeholder=\"Your email address\"\n            disabled={isSubmitting}\n            required\n          />\n          <small>We'll send you a notification if your submission is approved.</small>\n        </div>\n\n        {/* Music-specific Fields */}\n        {submissionType === 'music' && (\n          <>\n            <div className=\"form-group\">\n              <label htmlFor=\"trackTitle\">Track Title*</label>\n              <input\n                type=\"text\"\n                id=\"trackTitle\"\n                value={trackTitle}\n                onChange={(e) => setTrackTitle(e.target.value)}\n                placeholder=\"Title of your track\"\n                disabled={isSubmitting}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Audio File*</label>\n              <div {...audioDropzone.getRootProps()} className={`dropzone ${audioDropzone.isDragActive ? 'active' : ''}`}>\n                <input {...audioDropzone.getInputProps()} />\n                {audioDropzone.isDragActive ? (\n                  <p>Drop the audio file here ...</p>\n                ) : (\n                  <p>Drag 'n' drop your audio file here, or click to select</p>\n                )}\n              </div>\n              {files.length > 0 && (\n                <aside className=\"file-previews-container\">\n                  <h4>Selected Audio:</h4>\n                  {renderFilePreviews(files, setFiles)}\n                </aside>\n              )}\n            </div>\n\n          <div className=\"form-group\">\n              <label>Track Artwork*</label>\n              <div {...artworkDropzone.getRootProps()} className={`dropzone ${artworkDropzone.isDragActive ? 'active' : ''}`}>\n                <input {...artworkDropzone.getInputProps()} />\n                {artworkDropzone.isDragActive ? (\n                  <p>Drop the artwork here ...</p>\n                ) : (\n                  <p>Drag 'n' drop your track artwork here, or click to select</p>\n                )}\n              </div>\n              {artworkFiles.length > 0 && (\n                <aside className=\"file-previews-container\">\n                  <h4>Selected Artwork:</h4>\n                  {renderFilePreviews(artworkFiles, setArtworkFiles)}\n                </aside>\n              )}\n          </div>\n          </>\n        )}\n\n        {/* Visual Media Fields */}\n        {submissionType === 'visual' && (\n          <div className=\"form-group\">\n            <label>Photos/Videos*</label>\n            <div {...visualDropzone.getRootProps()} className={`dropzone ${visualDropzone.isDragActive ? 'active' : ''}`}>\n              <input {...visualDropzone.getInputProps()} />\n              {visualDropzone.isDragActive ? (\n                    <p>Drop the files here ...</p>\n                ) : (\n                <p>Drag 'n' drop your photos/videos here, or click to select</p>\n                )}\n             </div>\n              {files.length > 0 && (\n                  <aside className=\"file-previews-container\">\n                     <h4>Selected Files:</h4>\n                {renderFilePreviews(files, setFiles)}\n                  </aside>\n              )}\n          </div>\n        )}\n\n        {/* Common Description Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Tell us about your submission (optional)\"\n            disabled={isSubmitting}\n            rows={4}\n          />\n        </div>\n\n        {/* Submit Button & Messages */}\n        <div className=\"form-actions\">\n          {error && <p className=\"error-message\">{error}</p>}\n          {successMessage && <p className=\"success-message\">{successMessage}</p>}\n          <button type=\"submit\" disabled={isSubmitting} className=\"submit-button\">\n            {isSubmitting ? 'Submitting...' : 'Submit'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SubmitPostForm;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,8BAA8B,CAAC,CAAC;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,eAAeC,UAAUA,CAACC,IAAI,EAAE;EAC9BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAACG,IAAI,CAAC;EACzC;EACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;EAEvD;EACA,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC,CAAC,CAAC;;EAE/B,IAAI;IACF;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,MAAMU,OAAO,GAAG,iBAAiBC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIZ,IAAI,CAACG,IAAI,CAACU,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;IAC/EZ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEQ,OAAO,CAAC;IAC5C,OAAO;MAAEI,GAAG,EAAEJ,OAAO;MAAEK,QAAQ,EAAEf,IAAI,CAACG;IAAK,CAAC,CAAC,CAAC;IAC9C;EAEF,CAAC,CAAC,OAAOa,KAAK,EAAE;IACdf,OAAO,CAACe,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF;AAEA,eAAeC,mBAAmBA,CAACC,cAAc,EAAE;EAChDjB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEgB,cAAc,CAAC;EACzD;EACA,MAAM,IAAId,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;EAEvD,IAAI;IACF;IACA;IACA;;IAEA;IACC,MAAMc,YAAY,GAAG;MACnB,GAAGD,cAAc;MACjBE,EAAE,EAAET,IAAI,CAACC,GAAG,CAAC,CAAC;MACdS,WAAW,EAAE,IAAIV,IAAI,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC;MACrCC,MAAM,EAAE;IACV,CAAC;IACDtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEiB,YAAY,CAAC;IACrD,OAAOA,YAAY;IACpB;EAEF,CAAC,CAAC,OAAOH,KAAK,EAAE;IACbf,OAAO,CAACe,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK,CAAC,CAAC;EAChB;AACH;;AAEA;;AAEA,SAASQ,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6C,KAAK,EAAEC,QAAQ,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACiD,YAAY,EAAEC,eAAe,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACyB,KAAK,EAAE0B,QAAQ,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoD,cAAc,EAAEC,iBAAiB,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMsD,WAAW,GAAGrD,WAAW,CAACsD,aAAa,IAAI;IAC/C7C,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE4C,aAAa,CAAC;IACnD,MAAMC,UAAU,GAAGD,aAAa,CAACE,MAAM,CAAChD,IAAI,IAC1CA,IAAI,CAACiD,IAAI,CAACC,UAAU,CAAC,QAAQ,CAC/B,CAAC;IAED,IAAGH,UAAU,CAACI,MAAM,KAAKL,aAAa,CAACK,MAAM,EAAC;MAC5CT,QAAQ,CAAC,uDAAuD,CAAC;IACnE,CAAC,MAAM;MACLA,QAAQ,CAAC,IAAI,CAAC;MACdL,QAAQ,CAACU,UAAU,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,aAAa,GAAG5D,WAAW,CAACsD,aAAa,IAAI;IACjD7C,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE4C,aAAa,CAAC;IACrD,MAAMC,UAAU,GAAGD,aAAa,CAACE,MAAM,CAAChD,IAAI,IAC1CA,IAAI,CAACiD,IAAI,CAACC,UAAU,CAAC,QAAQ,CAC/B,CAAC;IAED,IAAGH,UAAU,CAACI,MAAM,KAAKL,aAAa,CAACK,MAAM,EAAC;MAC5CT,QAAQ,CAAC,uDAAuD,CAAC;IACnE,CAAC,MAAM;MACLA,QAAQ,CAAC,IAAI,CAAC;MACdH,eAAe,CAACQ,UAAU,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,YAAY,GAAG7D,WAAW,CAACsD,aAAa,IAAI;IAChD7C,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE4C,aAAa,CAAC;IACpD,MAAMC,UAAU,GAAGD,aAAa,CAACE,MAAM,CAAChD,IAAI,IAC1CA,IAAI,CAACiD,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,IAAIlD,IAAI,CAACiD,IAAI,CAACC,UAAU,CAAC,QAAQ,CACjE,CAAC;IAED,IAAGH,UAAU,CAACI,MAAM,KAAKL,aAAa,CAACK,MAAM,EAAC;MAC5CT,QAAQ,CAAC,gEAAgE,CAAC;IAC5E,CAAC,MAAM;MACLA,QAAQ,CAAC,IAAI,CAAC;MACdL,QAAQ,CAACU,UAAU,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,aAAa,GAAG5D,WAAW,CAAC;IAChC6D,MAAM,EAAEV,WAAW;IACnBW,MAAM,EAAE;MACN,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM;IACpC,CAAC;IACDC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGhE,WAAW,CAAC;IAClC6D,MAAM,EAAEH,aAAa;IACrBI,MAAM,EAAE;MACN,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO;IACtD,CAAC;IACDC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAME,cAAc,GAAGjE,WAAW,CAAC;IACjC6D,MAAM,EAAEF,YAAY;IACpBG,MAAM,EAAE;MACN,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;MACrD,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM;IACrC,CAAC;IACDC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMG,gBAAgB,GAAIX,IAAI,IAAK;IACjCtB,iBAAiB,CAACsB,IAAI,CAAC;IACvBZ,QAAQ,CAAC,EAAE,CAAC;IACZE,eAAe,CAAC,EAAE,CAAC;IACnBG,QAAQ,CAAC,IAAI,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAACC,SAAS,EAAEC,YAAY,EAAEC,KAAK,KAAK;IACrDD,YAAY,CAACE,IAAI,IAAIA,IAAI,CAACjB,MAAM,CAAC,CAACkB,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB7B,eAAe,CAAC,IAAI,CAAC;IACrBC,QAAQ,CAAC,IAAI,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;;IAErB;IACA,IAAI,CAAChB,UAAU,EAAE;MACfc,QAAQ,CAAC,yBAAyB,CAAC;MACnCD,eAAe,CAAC,KAAK,CAAC;MACtB;IACF;IAEA,IAAI,CAACX,WAAW,IAAI,CAAC,cAAc,CAACyC,IAAI,CAACzC,WAAW,CAAC,EAAE;MACrDY,QAAQ,CAAC,qCAAqC,CAAC;MAC9CD,eAAe,CAAC,KAAK,CAAC;MACtB;IACH;IAEA,IAAIf,cAAc,KAAK,OAAO,EAAE;MAC9B,IAAIU,KAAK,CAACe,MAAM,KAAK,CAAC,EAAE;QACtBT,QAAQ,CAAC,8BAA8B,CAAC;QACxCD,eAAe,CAAC,KAAK,CAAC;QACtB;MACF;MACA,IAAIH,YAAY,CAACa,MAAM,KAAK,CAAC,EAAE;QAC7BT,QAAQ,CAAC,uCAAuC,CAAC;QAClDD,eAAe,CAAC,KAAK,CAAC;QACtB;MACF;MACC,IAAI,CAACT,UAAU,EAAE;QACfU,QAAQ,CAAC,6BAA6B,CAAC;QACvCD,eAAe,CAAC,KAAK,CAAC;QACtB;MACH;IACD,CAAC,MAAM,IAAIf,cAAc,KAAK,QAAQ,IAAIU,KAAK,CAACe,MAAM,KAAK,CAAC,EAAE;MAC5DT,QAAQ,CAAC,4CAA4C,CAAC;MACtDD,eAAe,CAAC,KAAK,CAAC;MACtB;IACF;IAEA,IAAI;MACF;MACA,IAAI+B,aAAa,GAAG,EAAE;MACtB,IAAIC,eAAe,GAAG,IAAI;;MAE1B;MACA,MAAMC,kBAAkB,GAAGtC,KAAK,CAACuC,GAAG,CAAC3E,IAAI,IAAID,UAAU,CAACC,IAAI,CAAC,CAAC;MAC9DwE,aAAa,GAAG,MAAMpE,OAAO,CAACwE,GAAG,CAACF,kBAAkB,CAAC;;MAErD;MACA,IAAIhD,cAAc,KAAK,OAAO,IAAIY,YAAY,CAACa,MAAM,GAAG,CAAC,EAAE;QACzDsB,eAAe,GAAG,MAAM1E,UAAU,CAACuC,YAAY,CAAC,CAAC,CAAC,CAAC;MACrD;;MAEA;MACA,MAAMpB,cAAc,GAAG;QACrB+B,IAAI,EAAEvB,cAAc;QACpBE,UAAU;QACViD,KAAK,EAAE/C,WAAW;QAClBgD,KAAK,EAAE9C,UAAU,IAAI,UAAU;QAC/BE,WAAW;QACXE,KAAK,EAAEoC,aAAa,CAACG,GAAG,CAACI,CAAC;UAAA,IAAAC,WAAA;UAAA,OAAK;YAC7BlE,GAAG,EAAEiE,CAAC,CAACjE,GAAG;YACVC,QAAQ,EAAEgE,CAAC,CAAChE,QAAQ;YACpBkC,IAAI,EAAE,EAAA+B,WAAA,GAAA5C,KAAK,CAAC6C,IAAI,CAACjF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK4E,CAAC,CAAChE,QAAQ,CAAC,cAAAiE,WAAA,uBAA5CA,WAAA,CAA8C/B,IAAI,KAAI;UAC9D,CAAC;QAAA,CAAC,CAAC;QACHiC,OAAO,EAAET,eAAe,GAAGA,eAAe,CAAC3D,GAAG,GAAG;MACnD,CAAC;;MAED;MACA,MAAMqE,UAAU,GAAG,MAAMlE,mBAAmB,CAACC,cAAc,CAAC;MAE5D0B,iBAAiB,CAAC,yEAAyEd,WAAW,oBAAoB,CAAC;;MAE3H;MACAD,aAAa,CAAC,EAAE,CAAC;MACjBE,cAAc,CAAC,EAAE,CAAC;MAClBE,aAAa,CAAC,EAAE,CAAC;MACjBE,cAAc,CAAC,EAAE,CAAC;MAClBE,QAAQ,CAAC,EAAE,CAAC;MACZE,eAAe,CAAC,EAAE,CAAC;IAErB,CAAC,CAAC,OAAO6C,GAAG,EAAE;MACZnF,OAAO,CAACe,KAAK,CAAC,oBAAoB,EAAEoE,GAAG,CAAC;MACxC1C,QAAQ,CAAC0C,GAAG,CAACC,OAAO,IAAI,sCAAsC,CAAC;IACjE,CAAC,SAAS;MACR5C,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAM6C,kBAAkB,GAAGA,CAACxB,SAAS,EAAEC,YAAY,KAAK;IACtD,OAAOD,SAAS,CAACa,GAAG,CAAC,CAAC3E,IAAI,EAAEgE,KAAK,kBAChCpE,OAAA;MAAiB2F,SAAS,EAAC,cAAc;MAAAC,QAAA,GACtCxF,IAAI,CAACiD,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,gBAC7BtD,OAAA;QAAK6F,GAAG,EAAEC,GAAG,CAACC,eAAe,CAAC3F,IAAI,CAAE;QAAC4F,GAAG,EAAE,WAAW5B,KAAK;MAAG;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEhEpG,OAAA;QAAK2F,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC/B5F,OAAA;UAAA4F,QAAA,EAAOxF,IAAI,CAACiD,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAIlD,IAAI,CAACiD,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG;QAAK;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrGpG,OAAA;UAAA4F,QAAA,EAAIxF,IAAI,CAACG;QAAI;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACN,eACApG,OAAA;QACEqD,IAAI,EAAC,QAAQ;QACbgD,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAACC,SAAS,EAAEC,YAAY,EAAEC,KAAK,CAAE;QAC1DuB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC5B;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAfFhC,KAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBV,CACN,CAAC;EACH,CAAC;EAED,oBACEpG,OAAA;IAAK2F,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC5F,OAAA;MAAA4F,QAAA,EAAI;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpG,OAAA;MAAG2F,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAEhC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGJpG,OAAA;MAAK2F,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvC5F,OAAA;QACEqD,IAAI,EAAC,QAAQ;QACbsC,SAAS,EAAE,YAAY7D,cAAc,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;QACpEuE,OAAO,EAAEA,CAAA,KAAMrC,gBAAgB,CAAC,OAAO,CAAE;QAAA4B,QAAA,EAC1C;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACPpG,OAAA;QACEqD,IAAI,EAAC,QAAQ;QACfsC,SAAS,EAAE,YAAY7D,cAAc,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;QACrEuE,OAAO,EAAEA,CAAA,KAAMrC,gBAAgB,CAAC,QAAQ,CAAE;QAAA4B,QAAA,EACzC;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENpG,OAAA;MAAMsG,QAAQ,EAAE9B,YAAa;MAAAoB,QAAA,gBAE3B5F,OAAA;QAAK2F,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5F,OAAA;UAAOuG,OAAO,EAAC,YAAY;UAAAX,QAAA,EAAC;QAAsB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1DpG,OAAA;UACEqD,IAAI,EAAC,MAAM;UACX7B,EAAE,EAAC,YAAY;UACfgF,KAAK,EAAExE,UAAW;UAClByE,QAAQ,EAAGC,CAAC,IAAKzE,aAAa,CAACyE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CI,WAAW,EAAC,gCAAgC;UAC5CC,QAAQ,EAAEjE,YAAa;UACvBkE,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENpG,OAAA;QAAK2F,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5F,OAAA;UAAOuG,OAAO,EAAC,aAAa;UAAAX,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CpG,OAAA;UACEqD,IAAI,EAAC,OAAO;UACZ7B,EAAE,EAAC,aAAa;UAChBgF,KAAK,EAAEtE,WAAY;UACnBuE,QAAQ,EAAGC,CAAC,IAAKvE,cAAc,CAACuE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAChDI,WAAW,EAAC,oBAAoB;UAChCC,QAAQ,EAAEjE,YAAa;UACvBkE,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpG,OAAA;UAAA4F,QAAA,EAAO;QAA6D;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,EAGLtE,cAAc,KAAK,OAAO,iBACzB9B,OAAA,CAAAE,SAAA;QAAA0F,QAAA,gBACE5F,OAAA;UAAK2F,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5F,OAAA;YAAOuG,OAAO,EAAC,YAAY;YAAAX,QAAA,EAAC;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChDpG,OAAA;YACEqD,IAAI,EAAC,MAAM;YACX7B,EAAE,EAAC,YAAY;YACfgF,KAAK,EAAEpE,UAAW;YAClBqE,QAAQ,EAAGC,CAAC,IAAKrE,aAAa,CAACqE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CI,WAAW,EAAC,qBAAqB;YACjCC,QAAQ,EAAEjE,YAAa;YACvBkE,QAAQ;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENpG,OAAA;UAAK2F,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB5F,OAAA;YAAA4F,QAAA,EAAO;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1BpG,OAAA;YAAA,GAAS0D,aAAa,CAACqD,YAAY,CAAC,CAAC;YAAEpB,SAAS,EAAE,YAAYjC,aAAa,CAACsD,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAApB,QAAA,gBACzG5F,OAAA;cAAA,GAAW0D,aAAa,CAACuD,aAAa,CAAC;YAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAC3C1C,aAAa,CAACsD,YAAY,gBACzBhH,OAAA;cAAA4F,QAAA,EAAG;YAA4B;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,gBAEnCpG,OAAA;cAAA4F,QAAA,EAAG;YAAsD;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAC7D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EACL5D,KAAK,CAACe,MAAM,GAAG,CAAC,iBACfvD,OAAA;YAAO2F,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACxC5F,OAAA;cAAA4F,QAAA,EAAI;YAAe;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACvBV,kBAAkB,CAAClD,KAAK,EAAEC,QAAQ,CAAC;UAAA;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAERpG,OAAA;UAAK2F,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvB5F,OAAA;YAAA4F,QAAA,EAAO;UAAc;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7BpG,OAAA;YAAA,GAAS8D,eAAe,CAACiD,YAAY,CAAC,CAAC;YAAEpB,SAAS,EAAE,YAAY7B,eAAe,CAACkD,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAApB,QAAA,gBAC7G5F,OAAA;cAAA,GAAW8D,eAAe,CAACmD,aAAa,CAAC;YAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAC7CtC,eAAe,CAACkD,YAAY,gBAC3BhH,OAAA;cAAA4F,QAAA,EAAG;YAAyB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,gBAEhCpG,OAAA;cAAA4F,QAAA,EAAG;YAAyD;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAChE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EACL1D,YAAY,CAACa,MAAM,GAAG,CAAC,iBACtBvD,OAAA;YAAO2F,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACxC5F,OAAA;cAAA4F,QAAA,EAAI;YAAiB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACzBV,kBAAkB,CAAChD,YAAY,EAAEC,eAAe,CAAC;UAAA;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,eACJ,CACH,EAGAtE,cAAc,KAAK,QAAQ,iBAC1B9B,OAAA;QAAK2F,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5F,OAAA;UAAA4F,QAAA,EAAO;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BpG,OAAA;UAAA,GAAS+D,cAAc,CAACgD,YAAY,CAAC,CAAC;UAAEpB,SAAS,EAAE,YAAY5B,cAAc,CAACiD,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAApB,QAAA,gBAC3G5F,OAAA;YAAA,GAAW+D,cAAc,CAACkD,aAAa,CAAC;UAAC;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAC5CrC,cAAc,CAACiD,YAAY,gBACtBhH,OAAA;YAAA4F,QAAA,EAAG;UAAuB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,gBAElCpG,OAAA;YAAA4F,QAAA,EAAG;UAAyD;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC9D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACJ5D,KAAK,CAACe,MAAM,GAAG,CAAC,iBACbvD,OAAA;UAAO2F,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACvC5F,OAAA;YAAA4F,QAAA,EAAI;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC5BV,kBAAkB,CAAClD,KAAK,EAAEC,QAAQ,CAAC;QAAA;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACN,eAGDpG,OAAA;QAAK2F,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5F,OAAA;UAAOuG,OAAO,EAAC,aAAa;UAAAX,QAAA,EAAC;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChDpG,OAAA;UACEwB,EAAE,EAAC,aAAa;UAChBgF,KAAK,EAAElE,WAAY;UACnBmE,QAAQ,EAAGC,CAAC,IAAKnE,cAAc,CAACmE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAChDI,WAAW,EAAC,0CAA0C;UACtDC,QAAQ,EAAEjE,YAAa;UACvBsE,IAAI,EAAE;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNpG,OAAA;QAAK2F,SAAS,EAAC,cAAc;QAAAC,QAAA,GAC1BxE,KAAK,iBAAIpB,OAAA;UAAG2F,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAExE;QAAK;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjDrD,cAAc,iBAAI/C,OAAA;UAAG2F,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAE7C;QAAc;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtEpG,OAAA;UAAQqD,IAAI,EAAC,QAAQ;UAACwD,QAAQ,EAAEjE,YAAa;UAAC+C,SAAS,EAAC,eAAe;UAAAC,QAAA,EACpEhD,YAAY,GAAG,eAAe,GAAG;QAAQ;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvE,EAAA,CA1WQD,cAAc;EAAA,QA0DC9B,WAAW,EAQTA,WAAW,EAQZA,WAAW;AAAA;AAAAqH,EAAA,GA1E3BvF,cAAc;AA4WvB,eAAeA,cAAc;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}